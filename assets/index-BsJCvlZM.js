(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const u of s)if(u.type==="childList")for(const d of u.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&i(d)}).observe(document,{childList:!0,subtree:!0});function n(s){const u={};return s.integrity&&(u.integrity=s.integrity),s.referrerPolicy&&(u.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?u.credentials="include":s.crossOrigin==="anonymous"?u.credentials="omit":u.credentials="same-origin",u}function i(s){if(s.ep)return;s.ep=!0;const u=n(s);fetch(s.href,u)}})();function VS(a){return a&&a.__esModule&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a}var ov={exports:{}},Uh={},sv={exports:{}},qt={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var xx;function iM(){if(xx)return qt;xx=1;var a=Symbol.for("react.element"),e=Symbol.for("react.portal"),n=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),u=Symbol.for("react.provider"),d=Symbol.for("react.context"),f=Symbol.for("react.forward_ref"),p=Symbol.for("react.suspense"),m=Symbol.for("react.memo"),v=Symbol.for("react.lazy"),x=Symbol.iterator;function _(U){return U===null||typeof U!="object"?null:(U=x&&U[x]||U["@@iterator"],typeof U=="function"?U:null)}var S={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w=Object.assign,b={};function y(U,te,Ue){this.props=U,this.context=te,this.refs=b,this.updater=Ue||S}y.prototype.isReactComponent={},y.prototype.setState=function(U,te){if(typeof U!="object"&&typeof U!="function"&&U!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,U,te,"setState")},y.prototype.forceUpdate=function(U){this.updater.enqueueForceUpdate(this,U,"forceUpdate")};function g(){}g.prototype=y.prototype;function I(U,te,Ue){this.props=U,this.context=te,this.refs=b,this.updater=Ue||S}var L=I.prototype=new g;L.constructor=I,w(L,y.prototype),L.isPureReactComponent=!0;var C=Array.isArray,X=Object.prototype.hasOwnProperty,k={current:null},F={key:!0,ref:!0,__self:!0,__source:!0};function j(U,te,Ue){var K,le={},Se=null,ve=null;if(te!=null)for(K in te.ref!==void 0&&(ve=te.ref),te.key!==void 0&&(Se=""+te.key),te)X.call(te,K)&&!F.hasOwnProperty(K)&&(le[K]=te[K]);var Ee=arguments.length-2;if(Ee===1)le.children=Ue;else if(1<Ee){for(var Ie=Array(Ee),Ze=0;Ze<Ee;Ze++)Ie[Ze]=arguments[Ze+2];le.children=Ie}if(U&&U.defaultProps)for(K in Ee=U.defaultProps,Ee)le[K]===void 0&&(le[K]=Ee[K]);return{$$typeof:a,type:U,key:Se,ref:ve,props:le,_owner:k.current}}function R(U,te){return{$$typeof:a,type:U.type,key:te,ref:U.ref,props:U.props,_owner:U._owner}}function A(U){return typeof U=="object"&&U!==null&&U.$$typeof===a}function V(U){var te={"=":"=0",":":"=2"};return"$"+U.replace(/[=:]/g,function(Ue){return te[Ue]})}var ie=/\/+/g;function ee(U,te){return typeof U=="object"&&U!==null&&U.key!=null?V(""+U.key):te.toString(36)}function se(U,te,Ue,K,le){var Se=typeof U;(Se==="undefined"||Se==="boolean")&&(U=null);var ve=!1;if(U===null)ve=!0;else switch(Se){case"string":case"number":ve=!0;break;case"object":switch(U.$$typeof){case a:case e:ve=!0}}if(ve)return ve=U,le=le(ve),U=K===""?"."+ee(ve,0):K,C(le)?(Ue="",U!=null&&(Ue=U.replace(ie,"$&/")+"/"),se(le,te,Ue,"",function(Ze){return Ze})):le!=null&&(A(le)&&(le=R(le,Ue+(!le.key||ve&&ve.key===le.key?"":(""+le.key).replace(ie,"$&/")+"/")+U)),te.push(le)),1;if(ve=0,K=K===""?".":K+":",C(U))for(var Ee=0;Ee<U.length;Ee++){Se=U[Ee];var Ie=K+ee(Se,Ee);ve+=se(Se,te,Ue,Ie,le)}else if(Ie=_(U),typeof Ie=="function")for(U=Ie.call(U),Ee=0;!(Se=U.next()).done;)Se=Se.value,Ie=K+ee(Se,Ee++),ve+=se(Se,te,Ue,Ie,le);else if(Se==="object")throw te=String(U),Error("Objects are not valid as a React child (found: "+(te==="[object Object]"?"object with keys {"+Object.keys(U).join(", ")+"}":te)+"). If you meant to render a collection of children, use an array instead.");return ve}function he(U,te,Ue){if(U==null)return U;var K=[],le=0;return se(U,K,"","",function(Se){return te.call(Ue,Se,le++)}),K}function oe(U){if(U._status===-1){var te=U._result;te=te(),te.then(function(Ue){(U._status===0||U._status===-1)&&(U._status=1,U._result=Ue)},function(Ue){(U._status===0||U._status===-1)&&(U._status=2,U._result=Ue)}),U._status===-1&&(U._status=0,U._result=te)}if(U._status===1)return U._result.default;throw U._result}var ue={current:null},B={transition:null},ae={ReactCurrentDispatcher:ue,ReactCurrentBatchConfig:B,ReactCurrentOwner:k};function re(){throw Error("act(...) is not supported in production builds of React.")}return qt.Children={map:he,forEach:function(U,te,Ue){he(U,function(){te.apply(this,arguments)},Ue)},count:function(U){var te=0;return he(U,function(){te++}),te},toArray:function(U){return he(U,function(te){return te})||[]},only:function(U){if(!A(U))throw Error("React.Children.only expected to receive a single React element child.");return U}},qt.Component=y,qt.Fragment=n,qt.Profiler=s,qt.PureComponent=I,qt.StrictMode=i,qt.Suspense=p,qt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ae,qt.act=re,qt.cloneElement=function(U,te,Ue){if(U==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+U+".");var K=w({},U.props),le=U.key,Se=U.ref,ve=U._owner;if(te!=null){if(te.ref!==void 0&&(Se=te.ref,ve=k.current),te.key!==void 0&&(le=""+te.key),U.type&&U.type.defaultProps)var Ee=U.type.defaultProps;for(Ie in te)X.call(te,Ie)&&!F.hasOwnProperty(Ie)&&(K[Ie]=te[Ie]===void 0&&Ee!==void 0?Ee[Ie]:te[Ie])}var Ie=arguments.length-2;if(Ie===1)K.children=Ue;else if(1<Ie){Ee=Array(Ie);for(var Ze=0;Ze<Ie;Ze++)Ee[Ze]=arguments[Ze+2];K.children=Ee}return{$$typeof:a,type:U.type,key:le,ref:Se,props:K,_owner:ve}},qt.createContext=function(U){return U={$$typeof:d,_currentValue:U,_currentValue2:U,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},U.Provider={$$typeof:u,_context:U},U.Consumer=U},qt.createElement=j,qt.createFactory=function(U){var te=j.bind(null,U);return te.type=U,te},qt.createRef=function(){return{current:null}},qt.forwardRef=function(U){return{$$typeof:f,render:U}},qt.isValidElement=A,qt.lazy=function(U){return{$$typeof:v,_payload:{_status:-1,_result:U},_init:oe}},qt.memo=function(U,te){return{$$typeof:m,type:U,compare:te===void 0?null:te}},qt.startTransition=function(U){var te=B.transition;B.transition={};try{U()}finally{B.transition=te}},qt.unstable_act=re,qt.useCallback=function(U,te){return ue.current.useCallback(U,te)},qt.useContext=function(U){return ue.current.useContext(U)},qt.useDebugValue=function(){},qt.useDeferredValue=function(U){return ue.current.useDeferredValue(U)},qt.useEffect=function(U,te){return ue.current.useEffect(U,te)},qt.useId=function(){return ue.current.useId()},qt.useImperativeHandle=function(U,te,Ue){return ue.current.useImperativeHandle(U,te,Ue)},qt.useInsertionEffect=function(U,te){return ue.current.useInsertionEffect(U,te)},qt.useLayoutEffect=function(U,te){return ue.current.useLayoutEffect(U,te)},qt.useMemo=function(U,te){return ue.current.useMemo(U,te)},qt.useReducer=function(U,te,Ue){return ue.current.useReducer(U,te,Ue)},qt.useRef=function(U){return ue.current.useRef(U)},qt.useState=function(U){return ue.current.useState(U)},qt.useSyncExternalStore=function(U,te,Ue){return ue.current.useSyncExternalStore(U,te,Ue)},qt.useTransition=function(){return ue.current.useTransition()},qt.version="18.3.1",qt}var yx;function q0(){return yx||(yx=1,sv.exports=iM()),sv.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Sx;function aM(){if(Sx)return Uh;Sx=1;var a=q0(),e=Symbol.for("react.element"),n=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function d(f,p,m){var v,x={},_=null,S=null;m!==void 0&&(_=""+m),p.key!==void 0&&(_=""+p.key),p.ref!==void 0&&(S=p.ref);for(v in p)i.call(p,v)&&!u.hasOwnProperty(v)&&(x[v]=p[v]);if(f&&f.defaultProps)for(v in p=f.defaultProps,p)x[v]===void 0&&(x[v]=p[v]);return{$$typeof:e,type:f,key:_,ref:S,props:x,_owner:s.current}}return Uh.Fragment=n,Uh.jsx=d,Uh.jsxs=d,Uh}var Mx;function oM(){return Mx||(Mx=1,ov.exports=aM()),ov.exports}var Nt=oM(),ws=q0();const tc=VS(ws);var sp={},lv={exports:{}},ui={},uv={exports:{}},cv={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ex;function sM(){return Ex||(Ex=1,function(a){function e(B,ae){var re=B.length;B.push(ae);e:for(;0<re;){var U=re-1>>>1,te=B[U];if(0<s(te,ae))B[U]=ae,B[re]=te,re=U;else break e}}function n(B){return B.length===0?null:B[0]}function i(B){if(B.length===0)return null;var ae=B[0],re=B.pop();if(re!==ae){B[0]=re;e:for(var U=0,te=B.length,Ue=te>>>1;U<Ue;){var K=2*(U+1)-1,le=B[K],Se=K+1,ve=B[Se];if(0>s(le,re))Se<te&&0>s(ve,le)?(B[U]=ve,B[Se]=re,U=Se):(B[U]=le,B[K]=re,U=K);else if(Se<te&&0>s(ve,re))B[U]=ve,B[Se]=re,U=Se;else break e}}return ae}function s(B,ae){var re=B.sortIndex-ae.sortIndex;return re!==0?re:B.id-ae.id}if(typeof performance=="object"&&typeof performance.now=="function"){var u=performance;a.unstable_now=function(){return u.now()}}else{var d=Date,f=d.now();a.unstable_now=function(){return d.now()-f}}var p=[],m=[],v=1,x=null,_=3,S=!1,w=!1,b=!1,y=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,I=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function L(B){for(var ae=n(m);ae!==null;){if(ae.callback===null)i(m);else if(ae.startTime<=B)i(m),ae.sortIndex=ae.expirationTime,e(p,ae);else break;ae=n(m)}}function C(B){if(b=!1,L(B),!w)if(n(p)!==null)w=!0,oe(X);else{var ae=n(m);ae!==null&&ue(C,ae.startTime-B)}}function X(B,ae){w=!1,b&&(b=!1,g(j),j=-1),S=!0;var re=_;try{for(L(ae),x=n(p);x!==null&&(!(x.expirationTime>ae)||B&&!V());){var U=x.callback;if(typeof U=="function"){x.callback=null,_=x.priorityLevel;var te=U(x.expirationTime<=ae);ae=a.unstable_now(),typeof te=="function"?x.callback=te:x===n(p)&&i(p),L(ae)}else i(p);x=n(p)}if(x!==null)var Ue=!0;else{var K=n(m);K!==null&&ue(C,K.startTime-ae),Ue=!1}return Ue}finally{x=null,_=re,S=!1}}var k=!1,F=null,j=-1,R=5,A=-1;function V(){return!(a.unstable_now()-A<R)}function ie(){if(F!==null){var B=a.unstable_now();A=B;var ae=!0;try{ae=F(!0,B)}finally{ae?ee():(k=!1,F=null)}}else k=!1}var ee;if(typeof I=="function")ee=function(){I(ie)};else if(typeof MessageChannel<"u"){var se=new MessageChannel,he=se.port2;se.port1.onmessage=ie,ee=function(){he.postMessage(null)}}else ee=function(){y(ie,0)};function oe(B){F=B,k||(k=!0,ee())}function ue(B,ae){j=y(function(){B(a.unstable_now())},ae)}a.unstable_IdlePriority=5,a.unstable_ImmediatePriority=1,a.unstable_LowPriority=4,a.unstable_NormalPriority=3,a.unstable_Profiling=null,a.unstable_UserBlockingPriority=2,a.unstable_cancelCallback=function(B){B.callback=null},a.unstable_continueExecution=function(){w||S||(w=!0,oe(X))},a.unstable_forceFrameRate=function(B){0>B||125<B?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<B?Math.floor(1e3/B):5},a.unstable_getCurrentPriorityLevel=function(){return _},a.unstable_getFirstCallbackNode=function(){return n(p)},a.unstable_next=function(B){switch(_){case 1:case 2:case 3:var ae=3;break;default:ae=_}var re=_;_=ae;try{return B()}finally{_=re}},a.unstable_pauseExecution=function(){},a.unstable_requestPaint=function(){},a.unstable_runWithPriority=function(B,ae){switch(B){case 1:case 2:case 3:case 4:case 5:break;default:B=3}var re=_;_=B;try{return ae()}finally{_=re}},a.unstable_scheduleCallback=function(B,ae,re){var U=a.unstable_now();switch(typeof re=="object"&&re!==null?(re=re.delay,re=typeof re=="number"&&0<re?U+re:U):re=U,B){case 1:var te=-1;break;case 2:te=250;break;case 5:te=1073741823;break;case 4:te=1e4;break;default:te=5e3}return te=re+te,B={id:v++,callback:ae,priorityLevel:B,startTime:re,expirationTime:te,sortIndex:-1},re>U?(B.sortIndex=re,e(m,B),n(p)===null&&B===n(m)&&(b?(g(j),j=-1):b=!0,ue(C,re-U))):(B.sortIndex=te,e(p,B),w||S||(w=!0,oe(X))),B},a.unstable_shouldYield=V,a.unstable_wrapCallback=function(B){var ae=_;return function(){var re=_;_=ae;try{return B.apply(this,arguments)}finally{_=re}}}}(cv)),cv}var Tx;function lM(){return Tx||(Tx=1,uv.exports=sM()),uv.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var wx;function uM(){if(wx)return ui;wx=1;var a=q0(),e=lM();function n(t){for(var r="https://reactjs.org/docs/error-decoder.html?invariant="+t,o=1;o<arguments.length;o++)r+="&args[]="+encodeURIComponent(arguments[o]);return"Minified React error #"+t+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function u(t,r){d(t,r),d(t+"Capture",r)}function d(t,r){for(s[t]=r,t=0;t<r.length;t++)i.add(r[t])}var f=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),p=Object.prototype.hasOwnProperty,m=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,v={},x={};function _(t){return p.call(x,t)?!0:p.call(v,t)?!1:m.test(t)?x[t]=!0:(v[t]=!0,!1)}function S(t,r,o,l){if(o!==null&&o.type===0)return!1;switch(typeof r){case"function":case"symbol":return!0;case"boolean":return l?!1:o!==null?!o.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function w(t,r,o,l){if(r===null||typeof r>"u"||S(t,r,o,l))return!0;if(l)return!1;if(o!==null)switch(o.type){case 3:return!r;case 4:return r===!1;case 5:return isNaN(r);case 6:return isNaN(r)||1>r}return!1}function b(t,r,o,l,c,h,M){this.acceptsBooleans=r===2||r===3||r===4,this.attributeName=l,this.attributeNamespace=c,this.mustUseProperty=o,this.propertyName=t,this.type=r,this.sanitizeURL=h,this.removeEmptyString=M}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){y[t]=new b(t,0,!1,t,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var r=t[0];y[r]=new b(r,1,!1,t[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(t){y[t]=new b(t,2,!1,t.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){y[t]=new b(t,2,!1,t,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){y[t]=new b(t,3,!1,t.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(t){y[t]=new b(t,3,!0,t,null,!1,!1)}),["capture","download"].forEach(function(t){y[t]=new b(t,4,!1,t,null,!1,!1)}),["cols","rows","size","span"].forEach(function(t){y[t]=new b(t,6,!1,t,null,!1,!1)}),["rowSpan","start"].forEach(function(t){y[t]=new b(t,5,!1,t.toLowerCase(),null,!1,!1)});var g=/[\-:]([a-z])/g;function I(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var r=t.replace(g,I);y[r]=new b(r,1,!1,t,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var r=t.replace(g,I);y[r]=new b(r,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(t){var r=t.replace(g,I);y[r]=new b(r,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(t){y[t]=new b(t,1,!1,t.toLowerCase(),null,!1,!1)}),y.xlinkHref=new b("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(t){y[t]=new b(t,1,!1,t.toLowerCase(),null,!0,!0)});function L(t,r,o,l){var c=y.hasOwnProperty(r)?y[r]:null;(c!==null?c.type!==0:l||!(2<r.length)||r[0]!=="o"&&r[0]!=="O"||r[1]!=="n"&&r[1]!=="N")&&(w(r,o,c,l)&&(o=null),l||c===null?_(r)&&(o===null?t.removeAttribute(r):t.setAttribute(r,""+o)):c.mustUseProperty?t[c.propertyName]=o===null?c.type===3?!1:"":o:(r=c.attributeName,l=c.attributeNamespace,o===null?t.removeAttribute(r):(c=c.type,o=c===3||c===4&&o===!0?"":""+o,l?t.setAttributeNS(l,r,o):t.setAttribute(r,o))))}var C=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,X=Symbol.for("react.element"),k=Symbol.for("react.portal"),F=Symbol.for("react.fragment"),j=Symbol.for("react.strict_mode"),R=Symbol.for("react.profiler"),A=Symbol.for("react.provider"),V=Symbol.for("react.context"),ie=Symbol.for("react.forward_ref"),ee=Symbol.for("react.suspense"),se=Symbol.for("react.suspense_list"),he=Symbol.for("react.memo"),oe=Symbol.for("react.lazy"),ue=Symbol.for("react.offscreen"),B=Symbol.iterator;function ae(t){return t===null||typeof t!="object"?null:(t=B&&t[B]||t["@@iterator"],typeof t=="function"?t:null)}var re=Object.assign,U;function te(t){if(U===void 0)try{throw Error()}catch(o){var r=o.stack.trim().match(/\n( *(at )?)/);U=r&&r[1]||""}return`
`+U+t}var Ue=!1;function K(t,r){if(!t||Ue)return"";Ue=!0;var o=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(r)if(r=function(){throw Error()},Object.defineProperty(r.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(r,[])}catch(Z){var l=Z}Reflect.construct(t,[],r)}else{try{r.call()}catch(Z){l=Z}t.call(r.prototype)}else{try{throw Error()}catch(Z){l=Z}t()}}catch(Z){if(Z&&l&&typeof Z.stack=="string"){for(var c=Z.stack.split(`
`),h=l.stack.split(`
`),M=c.length-1,D=h.length-1;1<=M&&0<=D&&c[M]!==h[D];)D--;for(;1<=M&&0<=D;M--,D--)if(c[M]!==h[D]){if(M!==1||D!==1)do if(M--,D--,0>D||c[M]!==h[D]){var N=`
`+c[M].replace(" at new "," at ");return t.displayName&&N.includes("<anonymous>")&&(N=N.replace("<anonymous>",t.displayName)),N}while(1<=M&&0<=D);break}}}finally{Ue=!1,Error.prepareStackTrace=o}return(t=t?t.displayName||t.name:"")?te(t):""}function le(t){switch(t.tag){case 5:return te(t.type);case 16:return te("Lazy");case 13:return te("Suspense");case 19:return te("SuspenseList");case 0:case 2:case 15:return t=K(t.type,!1),t;case 11:return t=K(t.type.render,!1),t;case 1:return t=K(t.type,!0),t;default:return""}}function Se(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case F:return"Fragment";case k:return"Portal";case R:return"Profiler";case j:return"StrictMode";case ee:return"Suspense";case se:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case V:return(t.displayName||"Context")+".Consumer";case A:return(t._context.displayName||"Context")+".Provider";case ie:var r=t.render;return t=t.displayName,t||(t=r.displayName||r.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case he:return r=t.displayName||null,r!==null?r:Se(t.type)||"Memo";case oe:r=t._payload,t=t._init;try{return Se(t(r))}catch{}}return null}function ve(t){var r=t.type;switch(t.tag){case 24:return"Cache";case 9:return(r.displayName||"Context")+".Consumer";case 10:return(r._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=r.render,t=t.displayName||t.name||"",r.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return r;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Se(r);case 8:return r===j?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof r=="function")return r.displayName||r.name||null;if(typeof r=="string")return r}return null}function Ee(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function Ie(t){var r=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(r==="checkbox"||r==="radio")}function Ze(t){var r=Ie(t)?"checked":"value",o=Object.getOwnPropertyDescriptor(t.constructor.prototype,r),l=""+t[r];if(!t.hasOwnProperty(r)&&typeof o<"u"&&typeof o.get=="function"&&typeof o.set=="function"){var c=o.get,h=o.set;return Object.defineProperty(t,r,{configurable:!0,get:function(){return c.call(this)},set:function(M){l=""+M,h.call(this,M)}}),Object.defineProperty(t,r,{enumerable:o.enumerable}),{getValue:function(){return l},setValue:function(M){l=""+M},stopTracking:function(){t._valueTracker=null,delete t[r]}}}}function St(t){t._valueTracker||(t._valueTracker=Ze(t))}function ft(t){if(!t)return!1;var r=t._valueTracker;if(!r)return!0;var o=r.getValue(),l="";return t&&(l=Ie(t)?t.checked?"true":"false":t.value),t=l,t!==o?(r.setValue(t),!0):!1}function Tt(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}function O(t,r){var o=r.checked;return re({},r,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:o??t._wrapperState.initialChecked})}function dn(t,r){var o=r.defaultValue==null?"":r.defaultValue,l=r.checked!=null?r.checked:r.defaultChecked;o=Ee(r.value!=null?r.value:o),t._wrapperState={initialChecked:l,initialValue:o,controlled:r.type==="checkbox"||r.type==="radio"?r.checked!=null:r.value!=null}}function lt(t,r){r=r.checked,r!=null&&L(t,"checked",r,!1)}function ot(t,r){lt(t,r);var o=Ee(r.value),l=r.type;if(o!=null)l==="number"?(o===0&&t.value===""||t.value!=o)&&(t.value=""+o):t.value!==""+o&&(t.value=""+o);else if(l==="submit"||l==="reset"){t.removeAttribute("value");return}r.hasOwnProperty("value")?yt(t,r.type,o):r.hasOwnProperty("defaultValue")&&yt(t,r.type,Ee(r.defaultValue)),r.checked==null&&r.defaultChecked!=null&&(t.defaultChecked=!!r.defaultChecked)}function Xe(t,r,o){if(r.hasOwnProperty("value")||r.hasOwnProperty("defaultValue")){var l=r.type;if(!(l!=="submit"&&l!=="reset"||r.value!==void 0&&r.value!==null))return;r=""+t._wrapperState.initialValue,o||r===t.value||(t.value=r),t.defaultValue=r}o=t.name,o!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,o!==""&&(t.name=o)}function yt(t,r,o){(r!=="number"||Tt(t.ownerDocument)!==t)&&(o==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+o&&(t.defaultValue=""+o))}var We=Array.isArray;function P(t,r,o,l){if(t=t.options,r){r={};for(var c=0;c<o.length;c++)r["$"+o[c]]=!0;for(o=0;o<t.length;o++)c=r.hasOwnProperty("$"+t[o].value),t[o].selected!==c&&(t[o].selected=c),c&&l&&(t[o].defaultSelected=!0)}else{for(o=""+Ee(o),r=null,c=0;c<t.length;c++){if(t[c].value===o){t[c].selected=!0,l&&(t[c].defaultSelected=!0);return}r!==null||t[c].disabled||(r=t[c])}r!==null&&(r.selected=!0)}}function E(t,r){if(r.dangerouslySetInnerHTML!=null)throw Error(n(91));return re({},r,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function $(t,r){var o=r.value;if(o==null){if(o=r.children,r=r.defaultValue,o!=null){if(r!=null)throw Error(n(92));if(We(o)){if(1<o.length)throw Error(n(93));o=o[0]}r=o}r==null&&(r=""),o=r}t._wrapperState={initialValue:Ee(o)}}function fe(t,r){var o=Ee(r.value),l=Ee(r.defaultValue);o!=null&&(o=""+o,o!==t.value&&(t.value=o),r.defaultValue==null&&t.defaultValue!==o&&(t.defaultValue=o)),l!=null&&(t.defaultValue=""+l)}function ge(t){var r=t.textContent;r===t._wrapperState.initialValue&&r!==""&&r!==null&&(t.value=r)}function ce(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ve(t,r){return t==null||t==="http://www.w3.org/1999/xhtml"?ce(r):t==="http://www.w3.org/2000/svg"&&r==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var Te,Ne=function(t){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(r,o,l,c){MSApp.execUnsafeLocalFunction(function(){return t(r,o,l,c)})}:t}(function(t,r){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=r;else{for(Te=Te||document.createElement("div"),Te.innerHTML="<svg>"+r.valueOf().toString()+"</svg>",r=Te.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;r.firstChild;)t.appendChild(r.firstChild)}});function at(t,r){if(r){var o=t.firstChild;if(o&&o===t.lastChild&&o.nodeType===3){o.nodeValue=r;return}}t.textContent=r}var ye={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Oe=["Webkit","ms","Moz","O"];Object.keys(ye).forEach(function(t){Oe.forEach(function(r){r=r+t.charAt(0).toUpperCase()+t.substring(1),ye[r]=ye[t]})});function Ye(t,r,o){return r==null||typeof r=="boolean"||r===""?"":o||typeof r!="number"||r===0||ye.hasOwnProperty(t)&&ye[t]?(""+r).trim():r+"px"}function Je(t,r){t=t.style;for(var o in r)if(r.hasOwnProperty(o)){var l=o.indexOf("--")===0,c=Ye(o,r[o],l);o==="float"&&(o="cssFloat"),l?t.setProperty(o,c):t[o]=c}}var ke=re({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function st(t,r){if(r){if(ke[t]&&(r.children!=null||r.dangerouslySetInnerHTML!=null))throw Error(n(137,t));if(r.dangerouslySetInnerHTML!=null){if(r.children!=null)throw Error(n(60));if(typeof r.dangerouslySetInnerHTML!="object"||!("__html"in r.dangerouslySetInnerHTML))throw Error(n(61))}if(r.style!=null&&typeof r.style!="object")throw Error(n(62))}}function nt(t,r){if(t.indexOf("-")===-1)return typeof r.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xt=null;function G(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var we=null,ne=null,de=null;function Re(t){if(t=ma(t)){if(typeof we!="function")throw Error(n(280));var r=t.stateNode;r&&(r=yo(r),we(t.stateNode,t.type,r))}}function be(t){ne?de?de.push(t):de=[t]:ne=t}function it(){if(ne){var t=ne,r=de;if(de=ne=null,Re(t),r)for(t=0;t<r.length;t++)Re(r[t])}}function bt(t,r){return t(r)}function Wt(){}var ht=!1;function _n(t,r,o){if(ht)return t(r,o);ht=!0;try{return bt(t,r,o)}finally{ht=!1,(ne!==null||de!==null)&&(Wt(),it())}}function fn(t,r){var o=t.stateNode;if(o===null)return null;var l=yo(o);if(l===null)return null;o=l[r];e:switch(r){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(l=!l.disabled)||(t=t.type,l=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!l;break e;default:t=!1}if(t)return null;if(o&&typeof o!="function")throw Error(n(231,r,typeof o));return o}var vi=!1;if(f)try{var yr={};Object.defineProperty(yr,"passive",{get:function(){vi=!0}}),window.addEventListener("test",yr,yr),window.removeEventListener("test",yr,yr)}catch{vi=!1}function ir(t,r,o,l,c,h,M,D,N){var Z=Array.prototype.slice.call(arguments,3);try{r.apply(o,Z)}catch(me){this.onError(me)}}var ar=!1,Xr=null,jr=!1,Sr=null,Ja={onError:function(t){ar=!0,Xr=t}};function _i(t,r,o,l,c,h,M,D,N){ar=!1,Xr=null,ir.apply(Ja,arguments)}function Qa(t,r,o,l,c,h,M,D,N){if(_i.apply(this,arguments),ar){if(ar){var Z=Xr;ar=!1,Xr=null}else throw Error(n(198));jr||(jr=!0,Sr=Z)}}function qn(t){var r=t,o=t;if(t.alternate)for(;r.return;)r=r.return;else{t=r;do r=t,r.flags&4098&&(o=r.return),t=r.return;while(t)}return r.tag===3?o:null}function eo(t){if(t.tag===13){var r=t.memoizedState;if(r===null&&(t=t.alternate,t!==null&&(r=t.memoizedState)),r!==null)return r.dehydrated}return null}function to(t){if(qn(t)!==t)throw Error(n(188))}function tl(t){var r=t.alternate;if(!r){if(r=qn(t),r===null)throw Error(n(188));return r!==t?null:t}for(var o=t,l=r;;){var c=o.return;if(c===null)break;var h=c.alternate;if(h===null){if(l=c.return,l!==null){o=l;continue}break}if(c.child===h.child){for(h=c.child;h;){if(h===o)return to(c),t;if(h===l)return to(c),r;h=h.sibling}throw Error(n(188))}if(o.return!==l.return)o=c,l=h;else{for(var M=!1,D=c.child;D;){if(D===o){M=!0,o=c,l=h;break}if(D===l){M=!0,l=c,o=h;break}D=D.sibling}if(!M){for(D=h.child;D;){if(D===o){M=!0,o=h,l=c;break}if(D===l){M=!0,l=h,o=c;break}D=D.sibling}if(!M)throw Error(n(189))}}if(o.alternate!==l)throw Error(n(190))}if(o.tag!==3)throw Error(n(188));return o.stateNode.current===o?t:r}function no(t){return t=tl(t),t!==null?ro(t):null}function ro(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var r=ro(t);if(r!==null)return r;t=t.sibling}return null}var T=e.unstable_scheduleCallback,W=e.unstable_cancelCallback,J=e.unstable_shouldYield,Q=e.unstable_requestPaint,z=e.unstable_now,_e=e.unstable_getCurrentPriorityLevel,Ae=e.unstable_ImmediatePriority,Le=e.unstable_UserBlockingPriority,ze=e.unstable_NormalPriority,tt=e.unstable_LowPriority,Qe=e.unstable_IdlePriority,je=null,rt=null;function vt(t){if(rt&&typeof rt.onCommitFiberRoot=="function")try{rt.onCommitFiberRoot(je,t,void 0,(t.current.flags&128)===128)}catch{}}var gt=Math.clz32?Math.clz32:qe,Et=Math.log,_t=Math.LN2;function qe(t){return t>>>=0,t===0?32:31-(Et(t)/_t|0)|0}var Ot=64,Pt=4194304;function Jt(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function Bn(t,r){var o=t.pendingLanes;if(o===0)return 0;var l=0,c=t.suspendedLanes,h=t.pingedLanes,M=o&268435455;if(M!==0){var D=M&~c;D!==0?l=Jt(D):(h&=M,h!==0&&(l=Jt(h)))}else M=o&~c,M!==0?l=Jt(M):h!==0&&(l=Jt(h));if(l===0)return 0;if(r!==0&&r!==l&&!(r&c)&&(c=l&-l,h=r&-r,c>=h||c===16&&(h&4194240)!==0))return r;if(l&4&&(l|=o&16),r=t.entangledLanes,r!==0)for(t=t.entanglements,r&=l;0<r;)o=31-gt(r),c=1<<o,l|=t[o],r&=~c;return l}function hn(t,r){switch(t){case 1:case 2:case 4:return r+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function qr(t,r){for(var o=t.suspendedLanes,l=t.pingedLanes,c=t.expirationTimes,h=t.pendingLanes;0<h;){var M=31-gt(h),D=1<<M,N=c[M];N===-1?(!(D&o)||D&l)&&(c[M]=hn(D,r)):N<=r&&(t.expiredLanes|=D),h&=~D}}function Mt(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function pn(){var t=Ot;return Ot<<=1,!(Ot&4194240)&&(Ot=64),t}function rn(t){for(var r=[],o=0;31>o;o++)r.push(t);return r}function Ut(t,r,o){t.pendingLanes|=r,r!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,r=31-gt(r),t[r]=o}function vn(t,r){var o=t.pendingLanes&~r;t.pendingLanes=r,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=r,t.mutableReadLanes&=r,t.entangledLanes&=r,r=t.entanglements;var l=t.eventTimes;for(t=t.expirationTimes;0<o;){var c=31-gt(o),h=1<<c;r[c]=0,l[c]=-1,t[c]=-1,o&=~h}}function Yr(t,r){var o=t.entangledLanes|=r;for(t=t.entanglements;o;){var l=31-gt(o),c=1<<l;c&r|t[l]&r&&(t[l]|=r),o&=~c}}var ut=0;function cd(t){return t&=-t,1<t?4<t?t&268435455?16:536870912:4:1}var dd,nl,fd,hd,pd,rl=!1,io=[],Mr=null,Er=null,Tr=null,Qi=new Map,ea=new Map,wr=[],Cm="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function md(t,r){switch(t){case"focusin":case"focusout":Mr=null;break;case"dragenter":case"dragleave":Er=null;break;case"mouseover":case"mouseout":Tr=null;break;case"pointerover":case"pointerout":Qi.delete(r.pointerId);break;case"gotpointercapture":case"lostpointercapture":ea.delete(r.pointerId)}}function ta(t,r,o,l,c,h){return t===null||t.nativeEvent!==h?(t={blockedOn:r,domEventName:o,eventSystemFlags:l,nativeEvent:h,targetContainers:[c]},r!==null&&(r=ma(r),r!==null&&nl(r)),t):(t.eventSystemFlags|=l,r=t.targetContainers,c!==null&&r.indexOf(c)===-1&&r.push(c),t)}function Pm(t,r,o,l,c){switch(r){case"focusin":return Mr=ta(Mr,t,r,o,l,c),!0;case"dragenter":return Er=ta(Er,t,r,o,l,c),!0;case"mouseover":return Tr=ta(Tr,t,r,o,l,c),!0;case"pointerover":var h=c.pointerId;return Qi.set(h,ta(Qi.get(h)||null,t,r,o,l,c)),!0;case"gotpointercapture":return h=c.pointerId,ea.set(h,ta(ea.get(h)||null,t,r,o,l,c)),!0}return!1}function gd(t){var r=$r(t.target);if(r!==null){var o=qn(r);if(o!==null){if(r=o.tag,r===13){if(r=eo(o),r!==null){t.blockedOn=r,pd(t.priority,function(){fd(o)});return}}else if(r===3&&o.stateNode.current.memoizedState.isDehydrated){t.blockedOn=o.tag===3?o.stateNode.containerInfo:null;return}}}t.blockedOn=null}function ao(t){if(t.blockedOn!==null)return!1;for(var r=t.targetContainers;0<r.length;){var o=al(t.domEventName,t.eventSystemFlags,r[0],t.nativeEvent);if(o===null){o=t.nativeEvent;var l=new o.constructor(o.type,o);xt=l,o.target.dispatchEvent(l),xt=null}else return r=ma(o),r!==null&&nl(r),t.blockedOn=o,!1;r.shift()}return!0}function vd(t,r,o){ao(t)&&o.delete(r)}function Dm(){rl=!1,Mr!==null&&ao(Mr)&&(Mr=null),Er!==null&&ao(Er)&&(Er=null),Tr!==null&&ao(Tr)&&(Tr=null),Qi.forEach(vd),ea.forEach(vd)}function na(t,r){t.blockedOn===r&&(t.blockedOn=null,rl||(rl=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,Dm)))}function ra(t){function r(c){return na(c,t)}if(0<io.length){na(io[0],t);for(var o=1;o<io.length;o++){var l=io[o];l.blockedOn===t&&(l.blockedOn=null)}}for(Mr!==null&&na(Mr,t),Er!==null&&na(Er,t),Tr!==null&&na(Tr,t),Qi.forEach(r),ea.forEach(r),o=0;o<wr.length;o++)l=wr[o],l.blockedOn===t&&(l.blockedOn=null);for(;0<wr.length&&(o=wr[0],o.blockedOn===null);)gd(o),o.blockedOn===null&&wr.shift()}var xi=C.ReactCurrentBatchConfig,oo=!0;function Lm(t,r,o,l){var c=ut,h=xi.transition;xi.transition=null;try{ut=1,il(t,r,o,l)}finally{ut=c,xi.transition=h}}function Um(t,r,o,l){var c=ut,h=xi.transition;xi.transition=null;try{ut=4,il(t,r,o,l)}finally{ut=c,xi.transition=h}}function il(t,r,o,l){if(oo){var c=al(t,r,o,l);if(c===null)Ml(t,r,l,so,o),md(t,l);else if(Pm(c,t,r,o,l))l.stopPropagation();else if(md(t,l),r&4&&-1<Cm.indexOf(t)){for(;c!==null;){var h=ma(c);if(h!==null&&dd(h),h=al(t,r,o,l),h===null&&Ml(t,r,l,so,o),h===c)break;c=h}c!==null&&l.stopPropagation()}else Ml(t,r,l,null,o)}}var so=null;function al(t,r,o,l){if(so=null,t=G(l),t=$r(t),t!==null)if(r=qn(t),r===null)t=null;else if(o=r.tag,o===13){if(t=eo(r),t!==null)return t;t=null}else if(o===3){if(r.stateNode.current.memoizedState.isDehydrated)return r.tag===3?r.stateNode.containerInfo:null;t=null}else r!==t&&(t=null);return so=t,null}function _d(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(_e()){case Ae:return 1;case Le:return 4;case ze:case tt:return 16;case Qe:return 536870912;default:return 16}default:return 16}}var br=null,ol=null,lo=null;function xd(){if(lo)return lo;var t,r=ol,o=r.length,l,c="value"in br?br.value:br.textContent,h=c.length;for(t=0;t<o&&r[t]===c[t];t++);var M=o-t;for(l=1;l<=M&&r[o-l]===c[h-l];l++);return lo=c.slice(t,1<l?1-l:void 0)}function uo(t){var r=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&r===13&&(t=13)):t=r,t===10&&(t=13),32<=t||t===13?t:0}function co(){return!0}function yd(){return!1}function Rn(t){function r(o,l,c,h,M){this._reactName=o,this._targetInst=c,this.type=l,this.nativeEvent=h,this.target=M,this.currentTarget=null;for(var D in t)t.hasOwnProperty(D)&&(o=t[D],this[D]=o?o(h):h[D]);return this.isDefaultPrevented=(h.defaultPrevented!=null?h.defaultPrevented:h.returnValue===!1)?co:yd,this.isPropagationStopped=yd,this}return re(r.prototype,{preventDefault:function(){this.defaultPrevented=!0;var o=this.nativeEvent;o&&(o.preventDefault?o.preventDefault():typeof o.returnValue!="unknown"&&(o.returnValue=!1),this.isDefaultPrevented=co)},stopPropagation:function(){var o=this.nativeEvent;o&&(o.stopPropagation?o.stopPropagation():typeof o.cancelBubble!="unknown"&&(o.cancelBubble=!0),this.isPropagationStopped=co)},persist:function(){},isPersistent:co}),r}var yi={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sl=Rn(yi),ia=re({},yi,{view:0,detail:0}),Im=Rn(ia),ll,ul,aa,fo=re({},ia,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:dl,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==aa&&(aa&&t.type==="mousemove"?(ll=t.screenX-aa.screenX,ul=t.screenY-aa.screenY):ul=ll=0,aa=t),ll)},movementY:function(t){return"movementY"in t?t.movementY:ul}}),Sd=Rn(fo),Nm=re({},fo,{dataTransfer:0}),Fm=Rn(Nm),Om=re({},ia,{relatedTarget:0}),cl=Rn(Om),km=re({},yi,{animationName:0,elapsedTime:0,pseudoElement:0}),zm=Rn(km),Bm=re({},yi,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),Hm=Rn(Bm),Vm=re({},yi,{data:0}),Md=Rn(Vm),Gm={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Wm={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Xm={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function jm(t){var r=this.nativeEvent;return r.getModifierState?r.getModifierState(t):(t=Xm[t])?!!r[t]:!1}function dl(){return jm}var qm=re({},ia,{key:function(t){if(t.key){var r=Gm[t.key]||t.key;if(r!=="Unidentified")return r}return t.type==="keypress"?(t=uo(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?Wm[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:dl,charCode:function(t){return t.type==="keypress"?uo(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?uo(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),Ym=Rn(qm),$m=re({},fo,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Ed=Rn($m),Km=re({},ia,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:dl}),Zm=Rn(Km),Jm=re({},yi,{propertyName:0,elapsedTime:0,pseudoElement:0}),Qm=Rn(Jm),eg=re({},fo,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),tg=Rn(eg),ng=[9,13,27,32],fl=f&&"CompositionEvent"in window,oa=null;f&&"documentMode"in document&&(oa=document.documentMode);var rg=f&&"TextEvent"in window&&!oa,Td=f&&(!fl||oa&&8<oa&&11>=oa),wd=" ",bd=!1;function Ad(t,r){switch(t){case"keyup":return ng.indexOf(r.keyCode)!==-1;case"keydown":return r.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Rd(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var Si=!1;function ig(t,r){switch(t){case"compositionend":return Rd(r);case"keypress":return r.which!==32?null:(bd=!0,wd);case"textInput":return t=r.data,t===wd&&bd?null:t;default:return null}}function ag(t,r){if(Si)return t==="compositionend"||!fl&&Ad(t,r)?(t=xd(),lo=ol=br=null,Si=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(r.ctrlKey||r.altKey||r.metaKey)||r.ctrlKey&&r.altKey){if(r.char&&1<r.char.length)return r.char;if(r.which)return String.fromCharCode(r.which)}return null;case"compositionend":return Td&&r.locale!=="ko"?null:r.data;default:return null}}var og={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Cd(t){var r=t&&t.nodeName&&t.nodeName.toLowerCase();return r==="input"?!!og[t.type]:r==="textarea"}function Pd(t,r,o,l){be(l),r=vo(r,"onChange"),0<r.length&&(o=new sl("onChange","change",null,o,l),t.push({event:o,listeners:r}))}var sa=null,la=null;function sg(t){Yd(t,0)}function ho(t){var r=bi(t);if(ft(r))return t}function lg(t,r){if(t==="change")return r}var Dd=!1;if(f){var hl;if(f){var pl="oninput"in document;if(!pl){var Ld=document.createElement("div");Ld.setAttribute("oninput","return;"),pl=typeof Ld.oninput=="function"}hl=pl}else hl=!1;Dd=hl&&(!document.documentMode||9<document.documentMode)}function Ud(){sa&&(sa.detachEvent("onpropertychange",Id),la=sa=null)}function Id(t){if(t.propertyName==="value"&&ho(la)){var r=[];Pd(r,la,t,G(t)),_n(sg,r)}}function ug(t,r,o){t==="focusin"?(Ud(),sa=r,la=o,sa.attachEvent("onpropertychange",Id)):t==="focusout"&&Ud()}function cg(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return ho(la)}function dg(t,r){if(t==="click")return ho(r)}function fg(t,r){if(t==="input"||t==="change")return ho(r)}function hg(t,r){return t===r&&(t!==0||1/t===1/r)||t!==t&&r!==r}var Hn=typeof Object.is=="function"?Object.is:hg;function ua(t,r){if(Hn(t,r))return!0;if(typeof t!="object"||t===null||typeof r!="object"||r===null)return!1;var o=Object.keys(t),l=Object.keys(r);if(o.length!==l.length)return!1;for(l=0;l<o.length;l++){var c=o[l];if(!p.call(r,c)||!Hn(t[c],r[c]))return!1}return!0}function Nd(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Fd(t,r){var o=Nd(t);t=0;for(var l;o;){if(o.nodeType===3){if(l=t+o.textContent.length,t<=r&&l>=r)return{node:o,offset:r-t};t=l}e:{for(;o;){if(o.nextSibling){o=o.nextSibling;break e}o=o.parentNode}o=void 0}o=Nd(o)}}function Od(t,r){return t&&r?t===r?!0:t&&t.nodeType===3?!1:r&&r.nodeType===3?Od(t,r.parentNode):"contains"in t?t.contains(r):t.compareDocumentPosition?!!(t.compareDocumentPosition(r)&16):!1:!1}function kd(){for(var t=window,r=Tt();r instanceof t.HTMLIFrameElement;){try{var o=typeof r.contentWindow.location.href=="string"}catch{o=!1}if(o)t=r.contentWindow;else break;r=Tt(t.document)}return r}function ml(t){var r=t&&t.nodeName&&t.nodeName.toLowerCase();return r&&(r==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||r==="textarea"||t.contentEditable==="true")}function pg(t){var r=kd(),o=t.focusedElem,l=t.selectionRange;if(r!==o&&o&&o.ownerDocument&&Od(o.ownerDocument.documentElement,o)){if(l!==null&&ml(o)){if(r=l.start,t=l.end,t===void 0&&(t=r),"selectionStart"in o)o.selectionStart=r,o.selectionEnd=Math.min(t,o.value.length);else if(t=(r=o.ownerDocument||document)&&r.defaultView||window,t.getSelection){t=t.getSelection();var c=o.textContent.length,h=Math.min(l.start,c);l=l.end===void 0?h:Math.min(l.end,c),!t.extend&&h>l&&(c=l,l=h,h=c),c=Fd(o,h);var M=Fd(o,l);c&&M&&(t.rangeCount!==1||t.anchorNode!==c.node||t.anchorOffset!==c.offset||t.focusNode!==M.node||t.focusOffset!==M.offset)&&(r=r.createRange(),r.setStart(c.node,c.offset),t.removeAllRanges(),h>l?(t.addRange(r),t.extend(M.node,M.offset)):(r.setEnd(M.node,M.offset),t.addRange(r)))}}for(r=[],t=o;t=t.parentNode;)t.nodeType===1&&r.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof o.focus=="function"&&o.focus(),o=0;o<r.length;o++)t=r[o],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var mg=f&&"documentMode"in document&&11>=document.documentMode,Mi=null,gl=null,ca=null,vl=!1;function zd(t,r,o){var l=o.window===o?o.document:o.nodeType===9?o:o.ownerDocument;vl||Mi==null||Mi!==Tt(l)||(l=Mi,"selectionStart"in l&&ml(l)?l={start:l.selectionStart,end:l.selectionEnd}:(l=(l.ownerDocument&&l.ownerDocument.defaultView||window).getSelection(),l={anchorNode:l.anchorNode,anchorOffset:l.anchorOffset,focusNode:l.focusNode,focusOffset:l.focusOffset}),ca&&ua(ca,l)||(ca=l,l=vo(gl,"onSelect"),0<l.length&&(r=new sl("onSelect","select",null,r,o),t.push({event:r,listeners:l}),r.target=Mi)))}function po(t,r){var o={};return o[t.toLowerCase()]=r.toLowerCase(),o["Webkit"+t]="webkit"+r,o["Moz"+t]="moz"+r,o}var Ei={animationend:po("Animation","AnimationEnd"),animationiteration:po("Animation","AnimationIteration"),animationstart:po("Animation","AnimationStart"),transitionend:po("Transition","TransitionEnd")},_l={},Bd={};f&&(Bd=document.createElement("div").style,"AnimationEvent"in window||(delete Ei.animationend.animation,delete Ei.animationiteration.animation,delete Ei.animationstart.animation),"TransitionEvent"in window||delete Ei.transitionend.transition);function mo(t){if(_l[t])return _l[t];if(!Ei[t])return t;var r=Ei[t],o;for(o in r)if(r.hasOwnProperty(o)&&o in Bd)return _l[t]=r[o];return t}var Hd=mo("animationend"),Vd=mo("animationiteration"),Gd=mo("animationstart"),Wd=mo("transitionend"),Xd=new Map,jd="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ar(t,r){Xd.set(t,r),u(r,[t])}for(var xl=0;xl<jd.length;xl++){var yl=jd[xl],gg=yl.toLowerCase(),vg=yl[0].toUpperCase()+yl.slice(1);Ar(gg,"on"+vg)}Ar(Hd,"onAnimationEnd"),Ar(Vd,"onAnimationIteration"),Ar(Gd,"onAnimationStart"),Ar("dblclick","onDoubleClick"),Ar("focusin","onFocus"),Ar("focusout","onBlur"),Ar(Wd,"onTransitionEnd"),d("onMouseEnter",["mouseout","mouseover"]),d("onMouseLeave",["mouseout","mouseover"]),d("onPointerEnter",["pointerout","pointerover"]),d("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var da="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),_g=new Set("cancel close invalid load scroll toggle".split(" ").concat(da));function qd(t,r,o){var l=t.type||"unknown-event";t.currentTarget=o,Qa(l,r,void 0,t),t.currentTarget=null}function Yd(t,r){r=(r&4)!==0;for(var o=0;o<t.length;o++){var l=t[o],c=l.event;l=l.listeners;e:{var h=void 0;if(r)for(var M=l.length-1;0<=M;M--){var D=l[M],N=D.instance,Z=D.currentTarget;if(D=D.listener,N!==h&&c.isPropagationStopped())break e;qd(c,D,Z),h=N}else for(M=0;M<l.length;M++){if(D=l[M],N=D.instance,Z=D.currentTarget,D=D.listener,N!==h&&c.isPropagationStopped())break e;qd(c,D,Z),h=N}}}if(jr)throw t=Sr,jr=!1,Sr=null,t}function At(t,r){var o=r[Rl];o===void 0&&(o=r[Rl]=new Set);var l=t+"__bubble";o.has(l)||($d(r,t,2,!1),o.add(l))}function Sl(t,r,o){var l=0;r&&(l|=4),$d(o,t,l,r)}var go="_reactListening"+Math.random().toString(36).slice(2);function fa(t){if(!t[go]){t[go]=!0,i.forEach(function(o){o!=="selectionchange"&&(_g.has(o)||Sl(o,!1,t),Sl(o,!0,t))});var r=t.nodeType===9?t:t.ownerDocument;r===null||r[go]||(r[go]=!0,Sl("selectionchange",!1,r))}}function $d(t,r,o,l){switch(_d(r)){case 1:var c=Lm;break;case 4:c=Um;break;default:c=il}o=c.bind(null,r,o,t),c=void 0,!vi||r!=="touchstart"&&r!=="touchmove"&&r!=="wheel"||(c=!0),l?c!==void 0?t.addEventListener(r,o,{capture:!0,passive:c}):t.addEventListener(r,o,!0):c!==void 0?t.addEventListener(r,o,{passive:c}):t.addEventListener(r,o,!1)}function Ml(t,r,o,l,c){var h=l;if(!(r&1)&&!(r&2)&&l!==null)e:for(;;){if(l===null)return;var M=l.tag;if(M===3||M===4){var D=l.stateNode.containerInfo;if(D===c||D.nodeType===8&&D.parentNode===c)break;if(M===4)for(M=l.return;M!==null;){var N=M.tag;if((N===3||N===4)&&(N=M.stateNode.containerInfo,N===c||N.nodeType===8&&N.parentNode===c))return;M=M.return}for(;D!==null;){if(M=$r(D),M===null)return;if(N=M.tag,N===5||N===6){l=h=M;continue e}D=D.parentNode}}l=l.return}_n(function(){var Z=h,me=G(o),xe=[];e:{var pe=Xd.get(t);if(pe!==void 0){var Ce=sl,Be=t;switch(t){case"keypress":if(uo(o)===0)break e;case"keydown":case"keyup":Ce=Ym;break;case"focusin":Be="focus",Ce=cl;break;case"focusout":Be="blur",Ce=cl;break;case"beforeblur":case"afterblur":Ce=cl;break;case"click":if(o.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":Ce=Sd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":Ce=Fm;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":Ce=Zm;break;case Hd:case Vd:case Gd:Ce=zm;break;case Wd:Ce=Qm;break;case"scroll":Ce=Im;break;case"wheel":Ce=tg;break;case"copy":case"cut":case"paste":Ce=Hm;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":Ce=Ed}var He=(r&4)!==0,kt=!He&&t==="scroll",q=He?pe!==null?pe+"Capture":null:pe;He=[];for(var H=Z,Y;H!==null;){Y=H;var Me=Y.stateNode;if(Y.tag===5&&Me!==null&&(Y=Me,q!==null&&(Me=fn(H,q),Me!=null&&He.push(ha(H,Me,Y)))),kt)break;H=H.return}0<He.length&&(pe=new Ce(pe,Be,null,o,me),xe.push({event:pe,listeners:He}))}}if(!(r&7)){e:{if(pe=t==="mouseover"||t==="pointerover",Ce=t==="mouseout"||t==="pointerout",pe&&o!==xt&&(Be=o.relatedTarget||o.fromElement)&&($r(Be)||Be[or]))break e;if((Ce||pe)&&(pe=me.window===me?me:(pe=me.ownerDocument)?pe.defaultView||pe.parentWindow:window,Ce?(Be=o.relatedTarget||o.toElement,Ce=Z,Be=Be?$r(Be):null,Be!==null&&(kt=qn(Be),Be!==kt||Be.tag!==5&&Be.tag!==6)&&(Be=null)):(Ce=null,Be=Z),Ce!==Be)){if(He=Sd,Me="onMouseLeave",q="onMouseEnter",H="mouse",(t==="pointerout"||t==="pointerover")&&(He=Ed,Me="onPointerLeave",q="onPointerEnter",H="pointer"),kt=Ce==null?pe:bi(Ce),Y=Be==null?pe:bi(Be),pe=new He(Me,H+"leave",Ce,o,me),pe.target=kt,pe.relatedTarget=Y,Me=null,$r(me)===Z&&(He=new He(q,H+"enter",Be,o,me),He.target=Y,He.relatedTarget=kt,Me=He),kt=Me,Ce&&Be)t:{for(He=Ce,q=Be,H=0,Y=He;Y;Y=Ti(Y))H++;for(Y=0,Me=q;Me;Me=Ti(Me))Y++;for(;0<H-Y;)He=Ti(He),H--;for(;0<Y-H;)q=Ti(q),Y--;for(;H--;){if(He===q||q!==null&&He===q.alternate)break t;He=Ti(He),q=Ti(q)}He=null}else He=null;Ce!==null&&Kd(xe,pe,Ce,He,!1),Be!==null&&kt!==null&&Kd(xe,kt,Be,He,!0)}}e:{if(pe=Z?bi(Z):window,Ce=pe.nodeName&&pe.nodeName.toLowerCase(),Ce==="select"||Ce==="input"&&pe.type==="file")var Ge=lg;else if(Cd(pe))if(Dd)Ge=fg;else{Ge=cg;var $e=ug}else(Ce=pe.nodeName)&&Ce.toLowerCase()==="input"&&(pe.type==="checkbox"||pe.type==="radio")&&(Ge=dg);if(Ge&&(Ge=Ge(t,Z))){Pd(xe,Ge,o,me);break e}$e&&$e(t,pe,Z),t==="focusout"&&($e=pe._wrapperState)&&$e.controlled&&pe.type==="number"&&yt(pe,"number",pe.value)}switch($e=Z?bi(Z):window,t){case"focusin":(Cd($e)||$e.contentEditable==="true")&&(Mi=$e,gl=Z,ca=null);break;case"focusout":ca=gl=Mi=null;break;case"mousedown":vl=!0;break;case"contextmenu":case"mouseup":case"dragend":vl=!1,zd(xe,o,me);break;case"selectionchange":if(mg)break;case"keydown":case"keyup":zd(xe,o,me)}var Ke;if(fl)e:{switch(t){case"compositionstart":var et="onCompositionStart";break e;case"compositionend":et="onCompositionEnd";break e;case"compositionupdate":et="onCompositionUpdate";break e}et=void 0}else Si?Ad(t,o)&&(et="onCompositionEnd"):t==="keydown"&&o.keyCode===229&&(et="onCompositionStart");et&&(Td&&o.locale!=="ko"&&(Si||et!=="onCompositionStart"?et==="onCompositionEnd"&&Si&&(Ke=xd()):(br=me,ol="value"in br?br.value:br.textContent,Si=!0)),$e=vo(Z,et),0<$e.length&&(et=new Md(et,t,null,o,me),xe.push({event:et,listeners:$e}),Ke?et.data=Ke:(Ke=Rd(o),Ke!==null&&(et.data=Ke)))),(Ke=rg?ig(t,o):ag(t,o))&&(Z=vo(Z,"onBeforeInput"),0<Z.length&&(me=new Md("onBeforeInput","beforeinput",null,o,me),xe.push({event:me,listeners:Z}),me.data=Ke))}Yd(xe,r)})}function ha(t,r,o){return{instance:t,listener:r,currentTarget:o}}function vo(t,r){for(var o=r+"Capture",l=[];t!==null;){var c=t,h=c.stateNode;c.tag===5&&h!==null&&(c=h,h=fn(t,o),h!=null&&l.unshift(ha(t,h,c)),h=fn(t,r),h!=null&&l.push(ha(t,h,c))),t=t.return}return l}function Ti(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function Kd(t,r,o,l,c){for(var h=r._reactName,M=[];o!==null&&o!==l;){var D=o,N=D.alternate,Z=D.stateNode;if(N!==null&&N===l)break;D.tag===5&&Z!==null&&(D=Z,c?(N=fn(o,h),N!=null&&M.unshift(ha(o,N,D))):c||(N=fn(o,h),N!=null&&M.push(ha(o,N,D)))),o=o.return}M.length!==0&&t.push({event:r,listeners:M})}var xg=/\r\n?/g,yg=/\u0000|\uFFFD/g;function Zd(t){return(typeof t=="string"?t:""+t).replace(xg,`
`).replace(yg,"")}function _o(t,r,o){if(r=Zd(r),Zd(t)!==r&&o)throw Error(n(425))}function xo(){}var El=null,Tl=null;function wl(t,r){return t==="textarea"||t==="noscript"||typeof r.children=="string"||typeof r.children=="number"||typeof r.dangerouslySetInnerHTML=="object"&&r.dangerouslySetInnerHTML!==null&&r.dangerouslySetInnerHTML.__html!=null}var bl=typeof setTimeout=="function"?setTimeout:void 0,Sg=typeof clearTimeout=="function"?clearTimeout:void 0,Jd=typeof Promise=="function"?Promise:void 0,Mg=typeof queueMicrotask=="function"?queueMicrotask:typeof Jd<"u"?function(t){return Jd.resolve(null).then(t).catch(Eg)}:bl;function Eg(t){setTimeout(function(){throw t})}function Al(t,r){var o=r,l=0;do{var c=o.nextSibling;if(t.removeChild(o),c&&c.nodeType===8)if(o=c.data,o==="/$"){if(l===0){t.removeChild(c),ra(r);return}l--}else o!=="$"&&o!=="$?"&&o!=="$!"||l++;o=c}while(o);ra(r)}function Rr(t){for(;t!=null;t=t.nextSibling){var r=t.nodeType;if(r===1||r===3)break;if(r===8){if(r=t.data,r==="$"||r==="$!"||r==="$?")break;if(r==="/$")return null}}return t}function Qd(t){t=t.previousSibling;for(var r=0;t;){if(t.nodeType===8){var o=t.data;if(o==="$"||o==="$!"||o==="$?"){if(r===0)return t;r--}else o==="/$"&&r++}t=t.previousSibling}return null}var wi=Math.random().toString(36).slice(2),Yn="__reactFiber$"+wi,pa="__reactProps$"+wi,or="__reactContainer$"+wi,Rl="__reactEvents$"+wi,Tg="__reactListeners$"+wi,wg="__reactHandles$"+wi;function $r(t){var r=t[Yn];if(r)return r;for(var o=t.parentNode;o;){if(r=o[or]||o[Yn]){if(o=r.alternate,r.child!==null||o!==null&&o.child!==null)for(t=Qd(t);t!==null;){if(o=t[Yn])return o;t=Qd(t)}return r}t=o,o=t.parentNode}return null}function ma(t){return t=t[Yn]||t[or],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function bi(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(n(33))}function yo(t){return t[pa]||null}var Cl=[],Ai=-1;function Cr(t){return{current:t}}function Rt(t){0>Ai||(t.current=Cl[Ai],Cl[Ai]=null,Ai--)}function wt(t,r){Ai++,Cl[Ai]=t.current,t.current=r}var Pr={},an=Cr(Pr),xn=Cr(!1),Kr=Pr;function Ri(t,r){var o=t.type.contextTypes;if(!o)return Pr;var l=t.stateNode;if(l&&l.__reactInternalMemoizedUnmaskedChildContext===r)return l.__reactInternalMemoizedMaskedChildContext;var c={},h;for(h in o)c[h]=r[h];return l&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=c),c}function yn(t){return t=t.childContextTypes,t!=null}function So(){Rt(xn),Rt(an)}function ef(t,r,o){if(an.current!==Pr)throw Error(n(168));wt(an,r),wt(xn,o)}function tf(t,r,o){var l=t.stateNode;if(r=r.childContextTypes,typeof l.getChildContext!="function")return o;l=l.getChildContext();for(var c in l)if(!(c in r))throw Error(n(108,ve(t)||"Unknown",c));return re({},o,l)}function Mo(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||Pr,Kr=an.current,wt(an,t),wt(xn,xn.current),!0}function nf(t,r,o){var l=t.stateNode;if(!l)throw Error(n(169));o?(t=tf(t,r,Kr),l.__reactInternalMemoizedMergedChildContext=t,Rt(xn),Rt(an),wt(an,t)):Rt(xn),wt(xn,o)}var sr=null,Eo=!1,Pl=!1;function rf(t){sr===null?sr=[t]:sr.push(t)}function bg(t){Eo=!0,rf(t)}function Dr(){if(!Pl&&sr!==null){Pl=!0;var t=0,r=ut;try{var o=sr;for(ut=1;t<o.length;t++){var l=o[t];do l=l(!0);while(l!==null)}sr=null,Eo=!1}catch(c){throw sr!==null&&(sr=sr.slice(t+1)),T(Ae,Dr),c}finally{ut=r,Pl=!1}}return null}var Ci=[],Pi=0,To=null,wo=0,In=[],Nn=0,Zr=null,lr=1,ur="";function Jr(t,r){Ci[Pi++]=wo,Ci[Pi++]=To,To=t,wo=r}function af(t,r,o){In[Nn++]=lr,In[Nn++]=ur,In[Nn++]=Zr,Zr=t;var l=lr;t=ur;var c=32-gt(l)-1;l&=~(1<<c),o+=1;var h=32-gt(r)+c;if(30<h){var M=c-c%5;h=(l&(1<<M)-1).toString(32),l>>=M,c-=M,lr=1<<32-gt(r)+c|o<<c|l,ur=h+t}else lr=1<<h|o<<c|l,ur=t}function Dl(t){t.return!==null&&(Jr(t,1),af(t,1,0))}function Ll(t){for(;t===To;)To=Ci[--Pi],Ci[Pi]=null,wo=Ci[--Pi],Ci[Pi]=null;for(;t===Zr;)Zr=In[--Nn],In[Nn]=null,ur=In[--Nn],In[Nn]=null,lr=In[--Nn],In[Nn]=null}var Cn=null,Pn=null,Ct=!1,Vn=null;function of(t,r){var o=zn(5,null,null,0);o.elementType="DELETED",o.stateNode=r,o.return=t,r=t.deletions,r===null?(t.deletions=[o],t.flags|=16):r.push(o)}function sf(t,r){switch(t.tag){case 5:var o=t.type;return r=r.nodeType!==1||o.toLowerCase()!==r.nodeName.toLowerCase()?null:r,r!==null?(t.stateNode=r,Cn=t,Pn=Rr(r.firstChild),!0):!1;case 6:return r=t.pendingProps===""||r.nodeType!==3?null:r,r!==null?(t.stateNode=r,Cn=t,Pn=null,!0):!1;case 13:return r=r.nodeType!==8?null:r,r!==null?(o=Zr!==null?{id:lr,overflow:ur}:null,t.memoizedState={dehydrated:r,treeContext:o,retryLane:1073741824},o=zn(18,null,null,0),o.stateNode=r,o.return=t,t.child=o,Cn=t,Pn=null,!0):!1;default:return!1}}function Ul(t){return(t.mode&1)!==0&&(t.flags&128)===0}function Il(t){if(Ct){var r=Pn;if(r){var o=r;if(!sf(t,r)){if(Ul(t))throw Error(n(418));r=Rr(o.nextSibling);var l=Cn;r&&sf(t,r)?of(l,o):(t.flags=t.flags&-4097|2,Ct=!1,Cn=t)}}else{if(Ul(t))throw Error(n(418));t.flags=t.flags&-4097|2,Ct=!1,Cn=t}}}function lf(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;Cn=t}function bo(t){if(t!==Cn)return!1;if(!Ct)return lf(t),Ct=!0,!1;var r;if((r=t.tag!==3)&&!(r=t.tag!==5)&&(r=t.type,r=r!=="head"&&r!=="body"&&!wl(t.type,t.memoizedProps)),r&&(r=Pn)){if(Ul(t))throw uf(),Error(n(418));for(;r;)of(t,r),r=Rr(r.nextSibling)}if(lf(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(n(317));e:{for(t=t.nextSibling,r=0;t;){if(t.nodeType===8){var o=t.data;if(o==="/$"){if(r===0){Pn=Rr(t.nextSibling);break e}r--}else o!=="$"&&o!=="$!"&&o!=="$?"||r++}t=t.nextSibling}Pn=null}}else Pn=Cn?Rr(t.stateNode.nextSibling):null;return!0}function uf(){for(var t=Pn;t;)t=Rr(t.nextSibling)}function Di(){Pn=Cn=null,Ct=!1}function Nl(t){Vn===null?Vn=[t]:Vn.push(t)}var Ag=C.ReactCurrentBatchConfig;function ga(t,r,o){if(t=o.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(o._owner){if(o=o._owner,o){if(o.tag!==1)throw Error(n(309));var l=o.stateNode}if(!l)throw Error(n(147,t));var c=l,h=""+t;return r!==null&&r.ref!==null&&typeof r.ref=="function"&&r.ref._stringRef===h?r.ref:(r=function(M){var D=c.refs;M===null?delete D[h]:D[h]=M},r._stringRef=h,r)}if(typeof t!="string")throw Error(n(284));if(!o._owner)throw Error(n(290,t))}return t}function Ao(t,r){throw t=Object.prototype.toString.call(r),Error(n(31,t==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":t))}function cf(t){var r=t._init;return r(t._payload)}function df(t){function r(q,H){if(t){var Y=q.deletions;Y===null?(q.deletions=[H],q.flags|=16):Y.push(H)}}function o(q,H){if(!t)return null;for(;H!==null;)r(q,H),H=H.sibling;return null}function l(q,H){for(q=new Map;H!==null;)H.key!==null?q.set(H.key,H):q.set(H.index,H),H=H.sibling;return q}function c(q,H){return q=zr(q,H),q.index=0,q.sibling=null,q}function h(q,H,Y){return q.index=Y,t?(Y=q.alternate,Y!==null?(Y=Y.index,Y<H?(q.flags|=2,H):Y):(q.flags|=2,H)):(q.flags|=1048576,H)}function M(q){return t&&q.alternate===null&&(q.flags|=2),q}function D(q,H,Y,Me){return H===null||H.tag!==6?(H=wu(Y,q.mode,Me),H.return=q,H):(H=c(H,Y),H.return=q,H)}function N(q,H,Y,Me){var Ge=Y.type;return Ge===F?me(q,H,Y.props.children,Me,Y.key):H!==null&&(H.elementType===Ge||typeof Ge=="object"&&Ge!==null&&Ge.$$typeof===oe&&cf(Ge)===H.type)?(Me=c(H,Y.props),Me.ref=ga(q,H,Y),Me.return=q,Me):(Me=Zo(Y.type,Y.key,Y.props,null,q.mode,Me),Me.ref=ga(q,H,Y),Me.return=q,Me)}function Z(q,H,Y,Me){return H===null||H.tag!==4||H.stateNode.containerInfo!==Y.containerInfo||H.stateNode.implementation!==Y.implementation?(H=bu(Y,q.mode,Me),H.return=q,H):(H=c(H,Y.children||[]),H.return=q,H)}function me(q,H,Y,Me,Ge){return H===null||H.tag!==7?(H=oi(Y,q.mode,Me,Ge),H.return=q,H):(H=c(H,Y),H.return=q,H)}function xe(q,H,Y){if(typeof H=="string"&&H!==""||typeof H=="number")return H=wu(""+H,q.mode,Y),H.return=q,H;if(typeof H=="object"&&H!==null){switch(H.$$typeof){case X:return Y=Zo(H.type,H.key,H.props,null,q.mode,Y),Y.ref=ga(q,null,H),Y.return=q,Y;case k:return H=bu(H,q.mode,Y),H.return=q,H;case oe:var Me=H._init;return xe(q,Me(H._payload),Y)}if(We(H)||ae(H))return H=oi(H,q.mode,Y,null),H.return=q,H;Ao(q,H)}return null}function pe(q,H,Y,Me){var Ge=H!==null?H.key:null;if(typeof Y=="string"&&Y!==""||typeof Y=="number")return Ge!==null?null:D(q,H,""+Y,Me);if(typeof Y=="object"&&Y!==null){switch(Y.$$typeof){case X:return Y.key===Ge?N(q,H,Y,Me):null;case k:return Y.key===Ge?Z(q,H,Y,Me):null;case oe:return Ge=Y._init,pe(q,H,Ge(Y._payload),Me)}if(We(Y)||ae(Y))return Ge!==null?null:me(q,H,Y,Me,null);Ao(q,Y)}return null}function Ce(q,H,Y,Me,Ge){if(typeof Me=="string"&&Me!==""||typeof Me=="number")return q=q.get(Y)||null,D(H,q,""+Me,Ge);if(typeof Me=="object"&&Me!==null){switch(Me.$$typeof){case X:return q=q.get(Me.key===null?Y:Me.key)||null,N(H,q,Me,Ge);case k:return q=q.get(Me.key===null?Y:Me.key)||null,Z(H,q,Me,Ge);case oe:var $e=Me._init;return Ce(q,H,Y,$e(Me._payload),Ge)}if(We(Me)||ae(Me))return q=q.get(Y)||null,me(H,q,Me,Ge,null);Ao(H,Me)}return null}function Be(q,H,Y,Me){for(var Ge=null,$e=null,Ke=H,et=H=0,Zt=null;Ke!==null&&et<Y.length;et++){Ke.index>et?(Zt=Ke,Ke=null):Zt=Ke.sibling;var mt=pe(q,Ke,Y[et],Me);if(mt===null){Ke===null&&(Ke=Zt);break}t&&Ke&&mt.alternate===null&&r(q,Ke),H=h(mt,H,et),$e===null?Ge=mt:$e.sibling=mt,$e=mt,Ke=Zt}if(et===Y.length)return o(q,Ke),Ct&&Jr(q,et),Ge;if(Ke===null){for(;et<Y.length;et++)Ke=xe(q,Y[et],Me),Ke!==null&&(H=h(Ke,H,et),$e===null?Ge=Ke:$e.sibling=Ke,$e=Ke);return Ct&&Jr(q,et),Ge}for(Ke=l(q,Ke);et<Y.length;et++)Zt=Ce(Ke,q,et,Y[et],Me),Zt!==null&&(t&&Zt.alternate!==null&&Ke.delete(Zt.key===null?et:Zt.key),H=h(Zt,H,et),$e===null?Ge=Zt:$e.sibling=Zt,$e=Zt);return t&&Ke.forEach(function(Br){return r(q,Br)}),Ct&&Jr(q,et),Ge}function He(q,H,Y,Me){var Ge=ae(Y);if(typeof Ge!="function")throw Error(n(150));if(Y=Ge.call(Y),Y==null)throw Error(n(151));for(var $e=Ge=null,Ke=H,et=H=0,Zt=null,mt=Y.next();Ke!==null&&!mt.done;et++,mt=Y.next()){Ke.index>et?(Zt=Ke,Ke=null):Zt=Ke.sibling;var Br=pe(q,Ke,mt.value,Me);if(Br===null){Ke===null&&(Ke=Zt);break}t&&Ke&&Br.alternate===null&&r(q,Ke),H=h(Br,H,et),$e===null?Ge=Br:$e.sibling=Br,$e=Br,Ke=Zt}if(mt.done)return o(q,Ke),Ct&&Jr(q,et),Ge;if(Ke===null){for(;!mt.done;et++,mt=Y.next())mt=xe(q,mt.value,Me),mt!==null&&(H=h(mt,H,et),$e===null?Ge=mt:$e.sibling=mt,$e=mt);return Ct&&Jr(q,et),Ge}for(Ke=l(q,Ke);!mt.done;et++,mt=Y.next())mt=Ce(Ke,q,et,mt.value,Me),mt!==null&&(t&&mt.alternate!==null&&Ke.delete(mt.key===null?et:mt.key),H=h(mt,H,et),$e===null?Ge=mt:$e.sibling=mt,$e=mt);return t&&Ke.forEach(function(av){return r(q,av)}),Ct&&Jr(q,et),Ge}function kt(q,H,Y,Me){if(typeof Y=="object"&&Y!==null&&Y.type===F&&Y.key===null&&(Y=Y.props.children),typeof Y=="object"&&Y!==null){switch(Y.$$typeof){case X:e:{for(var Ge=Y.key,$e=H;$e!==null;){if($e.key===Ge){if(Ge=Y.type,Ge===F){if($e.tag===7){o(q,$e.sibling),H=c($e,Y.props.children),H.return=q,q=H;break e}}else if($e.elementType===Ge||typeof Ge=="object"&&Ge!==null&&Ge.$$typeof===oe&&cf(Ge)===$e.type){o(q,$e.sibling),H=c($e,Y.props),H.ref=ga(q,$e,Y),H.return=q,q=H;break e}o(q,$e);break}else r(q,$e);$e=$e.sibling}Y.type===F?(H=oi(Y.props.children,q.mode,Me,Y.key),H.return=q,q=H):(Me=Zo(Y.type,Y.key,Y.props,null,q.mode,Me),Me.ref=ga(q,H,Y),Me.return=q,q=Me)}return M(q);case k:e:{for($e=Y.key;H!==null;){if(H.key===$e)if(H.tag===4&&H.stateNode.containerInfo===Y.containerInfo&&H.stateNode.implementation===Y.implementation){o(q,H.sibling),H=c(H,Y.children||[]),H.return=q,q=H;break e}else{o(q,H);break}else r(q,H);H=H.sibling}H=bu(Y,q.mode,Me),H.return=q,q=H}return M(q);case oe:return $e=Y._init,kt(q,H,$e(Y._payload),Me)}if(We(Y))return Be(q,H,Y,Me);if(ae(Y))return He(q,H,Y,Me);Ao(q,Y)}return typeof Y=="string"&&Y!==""||typeof Y=="number"?(Y=""+Y,H!==null&&H.tag===6?(o(q,H.sibling),H=c(H,Y),H.return=q,q=H):(o(q,H),H=wu(Y,q.mode,Me),H.return=q,q=H),M(q)):o(q,H)}return kt}var Li=df(!0),ff=df(!1),Ro=Cr(null),Co=null,Ui=null,Fl=null;function Ol(){Fl=Ui=Co=null}function kl(t){var r=Ro.current;Rt(Ro),t._currentValue=r}function zl(t,r,o){for(;t!==null;){var l=t.alternate;if((t.childLanes&r)!==r?(t.childLanes|=r,l!==null&&(l.childLanes|=r)):l!==null&&(l.childLanes&r)!==r&&(l.childLanes|=r),t===o)break;t=t.return}}function Ii(t,r){Co=t,Fl=Ui=null,t=t.dependencies,t!==null&&t.firstContext!==null&&(t.lanes&r&&(Sn=!0),t.firstContext=null)}function Fn(t){var r=t._currentValue;if(Fl!==t)if(t={context:t,memoizedValue:r,next:null},Ui===null){if(Co===null)throw Error(n(308));Ui=t,Co.dependencies={lanes:0,firstContext:t}}else Ui=Ui.next=t;return r}var Qr=null;function Bl(t){Qr===null?Qr=[t]:Qr.push(t)}function hf(t,r,o,l){var c=r.interleaved;return c===null?(o.next=o,Bl(r)):(o.next=c.next,c.next=o),r.interleaved=o,cr(t,l)}function cr(t,r){t.lanes|=r;var o=t.alternate;for(o!==null&&(o.lanes|=r),o=t,t=t.return;t!==null;)t.childLanes|=r,o=t.alternate,o!==null&&(o.childLanes|=r),o=t,t=t.return;return o.tag===3?o.stateNode:null}var Lr=!1;function Hl(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function pf(t,r){t=t.updateQueue,r.updateQueue===t&&(r.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function dr(t,r){return{eventTime:t,lane:r,tag:0,payload:null,callback:null,next:null}}function Ur(t,r,o){var l=t.updateQueue;if(l===null)return null;if(l=l.shared,pt&2){var c=l.pending;return c===null?r.next=r:(r.next=c.next,c.next=r),l.pending=r,cr(t,o)}return c=l.interleaved,c===null?(r.next=r,Bl(l)):(r.next=c.next,c.next=r),l.interleaved=r,cr(t,o)}function Po(t,r,o){if(r=r.updateQueue,r!==null&&(r=r.shared,(o&4194240)!==0)){var l=r.lanes;l&=t.pendingLanes,o|=l,r.lanes=o,Yr(t,o)}}function mf(t,r){var o=t.updateQueue,l=t.alternate;if(l!==null&&(l=l.updateQueue,o===l)){var c=null,h=null;if(o=o.firstBaseUpdate,o!==null){do{var M={eventTime:o.eventTime,lane:o.lane,tag:o.tag,payload:o.payload,callback:o.callback,next:null};h===null?c=h=M:h=h.next=M,o=o.next}while(o!==null);h===null?c=h=r:h=h.next=r}else c=h=r;o={baseState:l.baseState,firstBaseUpdate:c,lastBaseUpdate:h,shared:l.shared,effects:l.effects},t.updateQueue=o;return}t=o.lastBaseUpdate,t===null?o.firstBaseUpdate=r:t.next=r,o.lastBaseUpdate=r}function Do(t,r,o,l){var c=t.updateQueue;Lr=!1;var h=c.firstBaseUpdate,M=c.lastBaseUpdate,D=c.shared.pending;if(D!==null){c.shared.pending=null;var N=D,Z=N.next;N.next=null,M===null?h=Z:M.next=Z,M=N;var me=t.alternate;me!==null&&(me=me.updateQueue,D=me.lastBaseUpdate,D!==M&&(D===null?me.firstBaseUpdate=Z:D.next=Z,me.lastBaseUpdate=N))}if(h!==null){var xe=c.baseState;M=0,me=Z=N=null,D=h;do{var pe=D.lane,Ce=D.eventTime;if((l&pe)===pe){me!==null&&(me=me.next={eventTime:Ce,lane:0,tag:D.tag,payload:D.payload,callback:D.callback,next:null});e:{var Be=t,He=D;switch(pe=r,Ce=o,He.tag){case 1:if(Be=He.payload,typeof Be=="function"){xe=Be.call(Ce,xe,pe);break e}xe=Be;break e;case 3:Be.flags=Be.flags&-65537|128;case 0:if(Be=He.payload,pe=typeof Be=="function"?Be.call(Ce,xe,pe):Be,pe==null)break e;xe=re({},xe,pe);break e;case 2:Lr=!0}}D.callback!==null&&D.lane!==0&&(t.flags|=64,pe=c.effects,pe===null?c.effects=[D]:pe.push(D))}else Ce={eventTime:Ce,lane:pe,tag:D.tag,payload:D.payload,callback:D.callback,next:null},me===null?(Z=me=Ce,N=xe):me=me.next=Ce,M|=pe;if(D=D.next,D===null){if(D=c.shared.pending,D===null)break;pe=D,D=pe.next,pe.next=null,c.lastBaseUpdate=pe,c.shared.pending=null}}while(!0);if(me===null&&(N=xe),c.baseState=N,c.firstBaseUpdate=Z,c.lastBaseUpdate=me,r=c.shared.interleaved,r!==null){c=r;do M|=c.lane,c=c.next;while(c!==r)}else h===null&&(c.shared.lanes=0);ni|=M,t.lanes=M,t.memoizedState=xe}}function gf(t,r,o){if(t=r.effects,r.effects=null,t!==null)for(r=0;r<t.length;r++){var l=t[r],c=l.callback;if(c!==null){if(l.callback=null,l=o,typeof c!="function")throw Error(n(191,c));c.call(l)}}}var va={},$n=Cr(va),_a=Cr(va),xa=Cr(va);function ei(t){if(t===va)throw Error(n(174));return t}function Vl(t,r){switch(wt(xa,r),wt(_a,t),wt($n,va),t=r.nodeType,t){case 9:case 11:r=(r=r.documentElement)?r.namespaceURI:Ve(null,"");break;default:t=t===8?r.parentNode:r,r=t.namespaceURI||null,t=t.tagName,r=Ve(r,t)}Rt($n),wt($n,r)}function Ni(){Rt($n),Rt(_a),Rt(xa)}function vf(t){ei(xa.current);var r=ei($n.current),o=Ve(r,t.type);r!==o&&(wt(_a,t),wt($n,o))}function Gl(t){_a.current===t&&(Rt($n),Rt(_a))}var Dt=Cr(0);function Lo(t){for(var r=t;r!==null;){if(r.tag===13){var o=r.memoizedState;if(o!==null&&(o=o.dehydrated,o===null||o.data==="$?"||o.data==="$!"))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if(r.flags&128)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===t)break;for(;r.sibling===null;){if(r.return===null||r.return===t)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}var Wl=[];function Xl(){for(var t=0;t<Wl.length;t++)Wl[t]._workInProgressVersionPrimary=null;Wl.length=0}var Uo=C.ReactCurrentDispatcher,jl=C.ReactCurrentBatchConfig,ti=0,Lt=null,Xt=null,$t=null,Io=!1,ya=!1,Sa=0,Rg=0;function on(){throw Error(n(321))}function ql(t,r){if(r===null)return!1;for(var o=0;o<r.length&&o<t.length;o++)if(!Hn(t[o],r[o]))return!1;return!0}function Yl(t,r,o,l,c,h){if(ti=h,Lt=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,Uo.current=t===null||t.memoizedState===null?Lg:Ug,t=o(l,c),ya){h=0;do{if(ya=!1,Sa=0,25<=h)throw Error(n(301));h+=1,$t=Xt=null,r.updateQueue=null,Uo.current=Ig,t=o(l,c)}while(ya)}if(Uo.current=Oo,r=Xt!==null&&Xt.next!==null,ti=0,$t=Xt=Lt=null,Io=!1,r)throw Error(n(300));return t}function $l(){var t=Sa!==0;return Sa=0,t}function Kn(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return $t===null?Lt.memoizedState=$t=t:$t=$t.next=t,$t}function On(){if(Xt===null){var t=Lt.alternate;t=t!==null?t.memoizedState:null}else t=Xt.next;var r=$t===null?Lt.memoizedState:$t.next;if(r!==null)$t=r,Xt=t;else{if(t===null)throw Error(n(310));Xt=t,t={memoizedState:Xt.memoizedState,baseState:Xt.baseState,baseQueue:Xt.baseQueue,queue:Xt.queue,next:null},$t===null?Lt.memoizedState=$t=t:$t=$t.next=t}return $t}function Ma(t,r){return typeof r=="function"?r(t):r}function Kl(t){var r=On(),o=r.queue;if(o===null)throw Error(n(311));o.lastRenderedReducer=t;var l=Xt,c=l.baseQueue,h=o.pending;if(h!==null){if(c!==null){var M=c.next;c.next=h.next,h.next=M}l.baseQueue=c=h,o.pending=null}if(c!==null){h=c.next,l=l.baseState;var D=M=null,N=null,Z=h;do{var me=Z.lane;if((ti&me)===me)N!==null&&(N=N.next={lane:0,action:Z.action,hasEagerState:Z.hasEagerState,eagerState:Z.eagerState,next:null}),l=Z.hasEagerState?Z.eagerState:t(l,Z.action);else{var xe={lane:me,action:Z.action,hasEagerState:Z.hasEagerState,eagerState:Z.eagerState,next:null};N===null?(D=N=xe,M=l):N=N.next=xe,Lt.lanes|=me,ni|=me}Z=Z.next}while(Z!==null&&Z!==h);N===null?M=l:N.next=D,Hn(l,r.memoizedState)||(Sn=!0),r.memoizedState=l,r.baseState=M,r.baseQueue=N,o.lastRenderedState=l}if(t=o.interleaved,t!==null){c=t;do h=c.lane,Lt.lanes|=h,ni|=h,c=c.next;while(c!==t)}else c===null&&(o.lanes=0);return[r.memoizedState,o.dispatch]}function Zl(t){var r=On(),o=r.queue;if(o===null)throw Error(n(311));o.lastRenderedReducer=t;var l=o.dispatch,c=o.pending,h=r.memoizedState;if(c!==null){o.pending=null;var M=c=c.next;do h=t(h,M.action),M=M.next;while(M!==c);Hn(h,r.memoizedState)||(Sn=!0),r.memoizedState=h,r.baseQueue===null&&(r.baseState=h),o.lastRenderedState=h}return[h,l]}function _f(){}function xf(t,r){var o=Lt,l=On(),c=r(),h=!Hn(l.memoizedState,c);if(h&&(l.memoizedState=c,Sn=!0),l=l.queue,Jl(Mf.bind(null,o,l,t),[t]),l.getSnapshot!==r||h||$t!==null&&$t.memoizedState.tag&1){if(o.flags|=2048,Ea(9,Sf.bind(null,o,l,c,r),void 0,null),Kt===null)throw Error(n(349));ti&30||yf(o,r,c)}return c}function yf(t,r,o){t.flags|=16384,t={getSnapshot:r,value:o},r=Lt.updateQueue,r===null?(r={lastEffect:null,stores:null},Lt.updateQueue=r,r.stores=[t]):(o=r.stores,o===null?r.stores=[t]:o.push(t))}function Sf(t,r,o,l){r.value=o,r.getSnapshot=l,Ef(r)&&Tf(t)}function Mf(t,r,o){return o(function(){Ef(r)&&Tf(t)})}function Ef(t){var r=t.getSnapshot;t=t.value;try{var o=r();return!Hn(t,o)}catch{return!0}}function Tf(t){var r=cr(t,1);r!==null&&jn(r,t,1,-1)}function wf(t){var r=Kn();return typeof t=="function"&&(t=t()),r.memoizedState=r.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ma,lastRenderedState:t},r.queue=t,t=t.dispatch=Dg.bind(null,Lt,t),[r.memoizedState,t]}function Ea(t,r,o,l){return t={tag:t,create:r,destroy:o,deps:l,next:null},r=Lt.updateQueue,r===null?(r={lastEffect:null,stores:null},Lt.updateQueue=r,r.lastEffect=t.next=t):(o=r.lastEffect,o===null?r.lastEffect=t.next=t:(l=o.next,o.next=t,t.next=l,r.lastEffect=t)),t}function bf(){return On().memoizedState}function No(t,r,o,l){var c=Kn();Lt.flags|=t,c.memoizedState=Ea(1|r,o,void 0,l===void 0?null:l)}function Fo(t,r,o,l){var c=On();l=l===void 0?null:l;var h=void 0;if(Xt!==null){var M=Xt.memoizedState;if(h=M.destroy,l!==null&&ql(l,M.deps)){c.memoizedState=Ea(r,o,h,l);return}}Lt.flags|=t,c.memoizedState=Ea(1|r,o,h,l)}function Af(t,r){return No(8390656,8,t,r)}function Jl(t,r){return Fo(2048,8,t,r)}function Rf(t,r){return Fo(4,2,t,r)}function Cf(t,r){return Fo(4,4,t,r)}function Pf(t,r){if(typeof r=="function")return t=t(),r(t),function(){r(null)};if(r!=null)return t=t(),r.current=t,function(){r.current=null}}function Df(t,r,o){return o=o!=null?o.concat([t]):null,Fo(4,4,Pf.bind(null,r,t),o)}function Ql(){}function Lf(t,r){var o=On();r=r===void 0?null:r;var l=o.memoizedState;return l!==null&&r!==null&&ql(r,l[1])?l[0]:(o.memoizedState=[t,r],t)}function Uf(t,r){var o=On();r=r===void 0?null:r;var l=o.memoizedState;return l!==null&&r!==null&&ql(r,l[1])?l[0]:(t=t(),o.memoizedState=[t,r],t)}function If(t,r,o){return ti&21?(Hn(o,r)||(o=pn(),Lt.lanes|=o,ni|=o,t.baseState=!0),r):(t.baseState&&(t.baseState=!1,Sn=!0),t.memoizedState=o)}function Cg(t,r){var o=ut;ut=o!==0&&4>o?o:4,t(!0);var l=jl.transition;jl.transition={};try{t(!1),r()}finally{ut=o,jl.transition=l}}function Nf(){return On().memoizedState}function Pg(t,r,o){var l=Or(t);if(o={lane:l,action:o,hasEagerState:!1,eagerState:null,next:null},Ff(t))Of(r,o);else if(o=hf(t,r,o,l),o!==null){var c=gn();jn(o,t,l,c),kf(o,r,l)}}function Dg(t,r,o){var l=Or(t),c={lane:l,action:o,hasEagerState:!1,eagerState:null,next:null};if(Ff(t))Of(r,c);else{var h=t.alternate;if(t.lanes===0&&(h===null||h.lanes===0)&&(h=r.lastRenderedReducer,h!==null))try{var M=r.lastRenderedState,D=h(M,o);if(c.hasEagerState=!0,c.eagerState=D,Hn(D,M)){var N=r.interleaved;N===null?(c.next=c,Bl(r)):(c.next=N.next,N.next=c),r.interleaved=c;return}}catch{}finally{}o=hf(t,r,c,l),o!==null&&(c=gn(),jn(o,t,l,c),kf(o,r,l))}}function Ff(t){var r=t.alternate;return t===Lt||r!==null&&r===Lt}function Of(t,r){ya=Io=!0;var o=t.pending;o===null?r.next=r:(r.next=o.next,o.next=r),t.pending=r}function kf(t,r,o){if(o&4194240){var l=r.lanes;l&=t.pendingLanes,o|=l,r.lanes=o,Yr(t,o)}}var Oo={readContext:Fn,useCallback:on,useContext:on,useEffect:on,useImperativeHandle:on,useInsertionEffect:on,useLayoutEffect:on,useMemo:on,useReducer:on,useRef:on,useState:on,useDebugValue:on,useDeferredValue:on,useTransition:on,useMutableSource:on,useSyncExternalStore:on,useId:on,unstable_isNewReconciler:!1},Lg={readContext:Fn,useCallback:function(t,r){return Kn().memoizedState=[t,r===void 0?null:r],t},useContext:Fn,useEffect:Af,useImperativeHandle:function(t,r,o){return o=o!=null?o.concat([t]):null,No(4194308,4,Pf.bind(null,r,t),o)},useLayoutEffect:function(t,r){return No(4194308,4,t,r)},useInsertionEffect:function(t,r){return No(4,2,t,r)},useMemo:function(t,r){var o=Kn();return r=r===void 0?null:r,t=t(),o.memoizedState=[t,r],t},useReducer:function(t,r,o){var l=Kn();return r=o!==void 0?o(r):r,l.memoizedState=l.baseState=r,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:r},l.queue=t,t=t.dispatch=Pg.bind(null,Lt,t),[l.memoizedState,t]},useRef:function(t){var r=Kn();return t={current:t},r.memoizedState=t},useState:wf,useDebugValue:Ql,useDeferredValue:function(t){return Kn().memoizedState=t},useTransition:function(){var t=wf(!1),r=t[0];return t=Cg.bind(null,t[1]),Kn().memoizedState=t,[r,t]},useMutableSource:function(){},useSyncExternalStore:function(t,r,o){var l=Lt,c=Kn();if(Ct){if(o===void 0)throw Error(n(407));o=o()}else{if(o=r(),Kt===null)throw Error(n(349));ti&30||yf(l,r,o)}c.memoizedState=o;var h={value:o,getSnapshot:r};return c.queue=h,Af(Mf.bind(null,l,h,t),[t]),l.flags|=2048,Ea(9,Sf.bind(null,l,h,o,r),void 0,null),o},useId:function(){var t=Kn(),r=Kt.identifierPrefix;if(Ct){var o=ur,l=lr;o=(l&~(1<<32-gt(l)-1)).toString(32)+o,r=":"+r+"R"+o,o=Sa++,0<o&&(r+="H"+o.toString(32)),r+=":"}else o=Rg++,r=":"+r+"r"+o.toString(32)+":";return t.memoizedState=r},unstable_isNewReconciler:!1},Ug={readContext:Fn,useCallback:Lf,useContext:Fn,useEffect:Jl,useImperativeHandle:Df,useInsertionEffect:Rf,useLayoutEffect:Cf,useMemo:Uf,useReducer:Kl,useRef:bf,useState:function(){return Kl(Ma)},useDebugValue:Ql,useDeferredValue:function(t){var r=On();return If(r,Xt.memoizedState,t)},useTransition:function(){var t=Kl(Ma)[0],r=On().memoizedState;return[t,r]},useMutableSource:_f,useSyncExternalStore:xf,useId:Nf,unstable_isNewReconciler:!1},Ig={readContext:Fn,useCallback:Lf,useContext:Fn,useEffect:Jl,useImperativeHandle:Df,useInsertionEffect:Rf,useLayoutEffect:Cf,useMemo:Uf,useReducer:Zl,useRef:bf,useState:function(){return Zl(Ma)},useDebugValue:Ql,useDeferredValue:function(t){var r=On();return Xt===null?r.memoizedState=t:If(r,Xt.memoizedState,t)},useTransition:function(){var t=Zl(Ma)[0],r=On().memoizedState;return[t,r]},useMutableSource:_f,useSyncExternalStore:xf,useId:Nf,unstable_isNewReconciler:!1};function Gn(t,r){if(t&&t.defaultProps){r=re({},r),t=t.defaultProps;for(var o in t)r[o]===void 0&&(r[o]=t[o]);return r}return r}function eu(t,r,o,l){r=t.memoizedState,o=o(l,r),o=o==null?r:re({},r,o),t.memoizedState=o,t.lanes===0&&(t.updateQueue.baseState=o)}var ko={isMounted:function(t){return(t=t._reactInternals)?qn(t)===t:!1},enqueueSetState:function(t,r,o){t=t._reactInternals;var l=gn(),c=Or(t),h=dr(l,c);h.payload=r,o!=null&&(h.callback=o),r=Ur(t,h,c),r!==null&&(jn(r,t,c,l),Po(r,t,c))},enqueueReplaceState:function(t,r,o){t=t._reactInternals;var l=gn(),c=Or(t),h=dr(l,c);h.tag=1,h.payload=r,o!=null&&(h.callback=o),r=Ur(t,h,c),r!==null&&(jn(r,t,c,l),Po(r,t,c))},enqueueForceUpdate:function(t,r){t=t._reactInternals;var o=gn(),l=Or(t),c=dr(o,l);c.tag=2,r!=null&&(c.callback=r),r=Ur(t,c,l),r!==null&&(jn(r,t,l,o),Po(r,t,l))}};function zf(t,r,o,l,c,h,M){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(l,h,M):r.prototype&&r.prototype.isPureReactComponent?!ua(o,l)||!ua(c,h):!0}function Bf(t,r,o){var l=!1,c=Pr,h=r.contextType;return typeof h=="object"&&h!==null?h=Fn(h):(c=yn(r)?Kr:an.current,l=r.contextTypes,h=(l=l!=null)?Ri(t,c):Pr),r=new r(o,h),t.memoizedState=r.state!==null&&r.state!==void 0?r.state:null,r.updater=ko,t.stateNode=r,r._reactInternals=t,l&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=c,t.__reactInternalMemoizedMaskedChildContext=h),r}function Hf(t,r,o,l){t=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(o,l),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(o,l),r.state!==t&&ko.enqueueReplaceState(r,r.state,null)}function tu(t,r,o,l){var c=t.stateNode;c.props=o,c.state=t.memoizedState,c.refs={},Hl(t);var h=r.contextType;typeof h=="object"&&h!==null?c.context=Fn(h):(h=yn(r)?Kr:an.current,c.context=Ri(t,h)),c.state=t.memoizedState,h=r.getDerivedStateFromProps,typeof h=="function"&&(eu(t,r,h,o),c.state=t.memoizedState),typeof r.getDerivedStateFromProps=="function"||typeof c.getSnapshotBeforeUpdate=="function"||typeof c.UNSAFE_componentWillMount!="function"&&typeof c.componentWillMount!="function"||(r=c.state,typeof c.componentWillMount=="function"&&c.componentWillMount(),typeof c.UNSAFE_componentWillMount=="function"&&c.UNSAFE_componentWillMount(),r!==c.state&&ko.enqueueReplaceState(c,c.state,null),Do(t,o,c,l),c.state=t.memoizedState),typeof c.componentDidMount=="function"&&(t.flags|=4194308)}function Fi(t,r){try{var o="",l=r;do o+=le(l),l=l.return;while(l);var c=o}catch(h){c=`
Error generating stack: `+h.message+`
`+h.stack}return{value:t,source:r,stack:c,digest:null}}function nu(t,r,o){return{value:t,source:null,stack:o??null,digest:r??null}}function ru(t,r){try{console.error(r.value)}catch(o){setTimeout(function(){throw o})}}var Ng=typeof WeakMap=="function"?WeakMap:Map;function Vf(t,r,o){o=dr(-1,o),o.tag=3,o.payload={element:null};var l=r.value;return o.callback=function(){Xo||(Xo=!0,vu=l),ru(t,r)},o}function Gf(t,r,o){o=dr(-1,o),o.tag=3;var l=t.type.getDerivedStateFromError;if(typeof l=="function"){var c=r.value;o.payload=function(){return l(c)},o.callback=function(){ru(t,r)}}var h=t.stateNode;return h!==null&&typeof h.componentDidCatch=="function"&&(o.callback=function(){ru(t,r),typeof l!="function"&&(Nr===null?Nr=new Set([this]):Nr.add(this));var M=r.stack;this.componentDidCatch(r.value,{componentStack:M!==null?M:""})}),o}function Wf(t,r,o){var l=t.pingCache;if(l===null){l=t.pingCache=new Ng;var c=new Set;l.set(r,c)}else c=l.get(r),c===void 0&&(c=new Set,l.set(r,c));c.has(o)||(c.add(o),t=$g.bind(null,t,r,o),r.then(t,t))}function Xf(t){do{var r;if((r=t.tag===13)&&(r=t.memoizedState,r=r!==null?r.dehydrated!==null:!0),r)return t;t=t.return}while(t!==null);return null}function jf(t,r,o,l,c){return t.mode&1?(t.flags|=65536,t.lanes=c,t):(t===r?t.flags|=65536:(t.flags|=128,o.flags|=131072,o.flags&=-52805,o.tag===1&&(o.alternate===null?o.tag=17:(r=dr(-1,1),r.tag=2,Ur(o,r,1))),o.lanes|=1),t)}var Fg=C.ReactCurrentOwner,Sn=!1;function mn(t,r,o,l){r.child=t===null?ff(r,null,o,l):Li(r,t.child,o,l)}function qf(t,r,o,l,c){o=o.render;var h=r.ref;return Ii(r,c),l=Yl(t,r,o,l,h,c),o=$l(),t!==null&&!Sn?(r.updateQueue=t.updateQueue,r.flags&=-2053,t.lanes&=~c,fr(t,r,c)):(Ct&&o&&Dl(r),r.flags|=1,mn(t,r,l,c),r.child)}function Yf(t,r,o,l,c){if(t===null){var h=o.type;return typeof h=="function"&&!Tu(h)&&h.defaultProps===void 0&&o.compare===null&&o.defaultProps===void 0?(r.tag=15,r.type=h,$f(t,r,h,l,c)):(t=Zo(o.type,null,l,r,r.mode,c),t.ref=r.ref,t.return=r,r.child=t)}if(h=t.child,!(t.lanes&c)){var M=h.memoizedProps;if(o=o.compare,o=o!==null?o:ua,o(M,l)&&t.ref===r.ref)return fr(t,r,c)}return r.flags|=1,t=zr(h,l),t.ref=r.ref,t.return=r,r.child=t}function $f(t,r,o,l,c){if(t!==null){var h=t.memoizedProps;if(ua(h,l)&&t.ref===r.ref)if(Sn=!1,r.pendingProps=l=h,(t.lanes&c)!==0)t.flags&131072&&(Sn=!0);else return r.lanes=t.lanes,fr(t,r,c)}return iu(t,r,o,l,c)}function Kf(t,r,o){var l=r.pendingProps,c=l.children,h=t!==null?t.memoizedState:null;if(l.mode==="hidden")if(!(r.mode&1))r.memoizedState={baseLanes:0,cachePool:null,transitions:null},wt(ki,Dn),Dn|=o;else{if(!(o&1073741824))return t=h!==null?h.baseLanes|o:o,r.lanes=r.childLanes=1073741824,r.memoizedState={baseLanes:t,cachePool:null,transitions:null},r.updateQueue=null,wt(ki,Dn),Dn|=t,null;r.memoizedState={baseLanes:0,cachePool:null,transitions:null},l=h!==null?h.baseLanes:o,wt(ki,Dn),Dn|=l}else h!==null?(l=h.baseLanes|o,r.memoizedState=null):l=o,wt(ki,Dn),Dn|=l;return mn(t,r,c,o),r.child}function Zf(t,r){var o=r.ref;(t===null&&o!==null||t!==null&&t.ref!==o)&&(r.flags|=512,r.flags|=2097152)}function iu(t,r,o,l,c){var h=yn(o)?Kr:an.current;return h=Ri(r,h),Ii(r,c),o=Yl(t,r,o,l,h,c),l=$l(),t!==null&&!Sn?(r.updateQueue=t.updateQueue,r.flags&=-2053,t.lanes&=~c,fr(t,r,c)):(Ct&&l&&Dl(r),r.flags|=1,mn(t,r,o,c),r.child)}function Jf(t,r,o,l,c){if(yn(o)){var h=!0;Mo(r)}else h=!1;if(Ii(r,c),r.stateNode===null)Bo(t,r),Bf(r,o,l),tu(r,o,l,c),l=!0;else if(t===null){var M=r.stateNode,D=r.memoizedProps;M.props=D;var N=M.context,Z=o.contextType;typeof Z=="object"&&Z!==null?Z=Fn(Z):(Z=yn(o)?Kr:an.current,Z=Ri(r,Z));var me=o.getDerivedStateFromProps,xe=typeof me=="function"||typeof M.getSnapshotBeforeUpdate=="function";xe||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(D!==l||N!==Z)&&Hf(r,M,l,Z),Lr=!1;var pe=r.memoizedState;M.state=pe,Do(r,l,M,c),N=r.memoizedState,D!==l||pe!==N||xn.current||Lr?(typeof me=="function"&&(eu(r,o,me,l),N=r.memoizedState),(D=Lr||zf(r,o,D,l,pe,N,Z))?(xe||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=l,r.memoizedState=N),M.props=l,M.state=N,M.context=Z,l=D):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),l=!1)}else{M=r.stateNode,pf(t,r),D=r.memoizedProps,Z=r.type===r.elementType?D:Gn(r.type,D),M.props=Z,xe=r.pendingProps,pe=M.context,N=o.contextType,typeof N=="object"&&N!==null?N=Fn(N):(N=yn(o)?Kr:an.current,N=Ri(r,N));var Ce=o.getDerivedStateFromProps;(me=typeof Ce=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(D!==xe||pe!==N)&&Hf(r,M,l,N),Lr=!1,pe=r.memoizedState,M.state=pe,Do(r,l,M,c);var Be=r.memoizedState;D!==xe||pe!==Be||xn.current||Lr?(typeof Ce=="function"&&(eu(r,o,Ce,l),Be=r.memoizedState),(Z=Lr||zf(r,o,Z,l,pe,Be,N)||!1)?(me||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(l,Be,N),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(l,Be,N)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||D===t.memoizedProps&&pe===t.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||D===t.memoizedProps&&pe===t.memoizedState||(r.flags|=1024),r.memoizedProps=l,r.memoizedState=Be),M.props=l,M.state=Be,M.context=N,l=Z):(typeof M.componentDidUpdate!="function"||D===t.memoizedProps&&pe===t.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||D===t.memoizedProps&&pe===t.memoizedState||(r.flags|=1024),l=!1)}return au(t,r,o,l,h,c)}function au(t,r,o,l,c,h){Zf(t,r);var M=(r.flags&128)!==0;if(!l&&!M)return c&&nf(r,o,!1),fr(t,r,h);l=r.stateNode,Fg.current=r;var D=M&&typeof o.getDerivedStateFromError!="function"?null:l.render();return r.flags|=1,t!==null&&M?(r.child=Li(r,t.child,null,h),r.child=Li(r,null,D,h)):mn(t,r,D,h),r.memoizedState=l.state,c&&nf(r,o,!0),r.child}function Qf(t){var r=t.stateNode;r.pendingContext?ef(t,r.pendingContext,r.pendingContext!==r.context):r.context&&ef(t,r.context,!1),Vl(t,r.containerInfo)}function eh(t,r,o,l,c){return Di(),Nl(c),r.flags|=256,mn(t,r,o,l),r.child}var ou={dehydrated:null,treeContext:null,retryLane:0};function su(t){return{baseLanes:t,cachePool:null,transitions:null}}function th(t,r,o){var l=r.pendingProps,c=Dt.current,h=!1,M=(r.flags&128)!==0,D;if((D=M)||(D=t!==null&&t.memoizedState===null?!1:(c&2)!==0),D?(h=!0,r.flags&=-129):(t===null||t.memoizedState!==null)&&(c|=1),wt(Dt,c&1),t===null)return Il(r),t=r.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?(r.mode&1?t.data==="$!"?r.lanes=8:r.lanes=1073741824:r.lanes=1,null):(M=l.children,t=l.fallback,h?(l=r.mode,h=r.child,M={mode:"hidden",children:M},!(l&1)&&h!==null?(h.childLanes=0,h.pendingProps=M):h=Jo(M,l,0,null),t=oi(t,l,o,null),h.return=r,t.return=r,h.sibling=t,r.child=h,r.child.memoizedState=su(o),r.memoizedState=ou,t):lu(r,M));if(c=t.memoizedState,c!==null&&(D=c.dehydrated,D!==null))return Og(t,r,M,l,D,c,o);if(h){h=l.fallback,M=r.mode,c=t.child,D=c.sibling;var N={mode:"hidden",children:l.children};return!(M&1)&&r.child!==c?(l=r.child,l.childLanes=0,l.pendingProps=N,r.deletions=null):(l=zr(c,N),l.subtreeFlags=c.subtreeFlags&14680064),D!==null?h=zr(D,h):(h=oi(h,M,o,null),h.flags|=2),h.return=r,l.return=r,l.sibling=h,r.child=l,l=h,h=r.child,M=t.child.memoizedState,M=M===null?su(o):{baseLanes:M.baseLanes|o,cachePool:null,transitions:M.transitions},h.memoizedState=M,h.childLanes=t.childLanes&~o,r.memoizedState=ou,l}return h=t.child,t=h.sibling,l=zr(h,{mode:"visible",children:l.children}),!(r.mode&1)&&(l.lanes=o),l.return=r,l.sibling=null,t!==null&&(o=r.deletions,o===null?(r.deletions=[t],r.flags|=16):o.push(t)),r.child=l,r.memoizedState=null,l}function lu(t,r){return r=Jo({mode:"visible",children:r},t.mode,0,null),r.return=t,t.child=r}function zo(t,r,o,l){return l!==null&&Nl(l),Li(r,t.child,null,o),t=lu(r,r.pendingProps.children),t.flags|=2,r.memoizedState=null,t}function Og(t,r,o,l,c,h,M){if(o)return r.flags&256?(r.flags&=-257,l=nu(Error(n(422))),zo(t,r,M,l)):r.memoizedState!==null?(r.child=t.child,r.flags|=128,null):(h=l.fallback,c=r.mode,l=Jo({mode:"visible",children:l.children},c,0,null),h=oi(h,c,M,null),h.flags|=2,l.return=r,h.return=r,l.sibling=h,r.child=l,r.mode&1&&Li(r,t.child,null,M),r.child.memoizedState=su(M),r.memoizedState=ou,h);if(!(r.mode&1))return zo(t,r,M,null);if(c.data==="$!"){if(l=c.nextSibling&&c.nextSibling.dataset,l)var D=l.dgst;return l=D,h=Error(n(419)),l=nu(h,l,void 0),zo(t,r,M,l)}if(D=(M&t.childLanes)!==0,Sn||D){if(l=Kt,l!==null){switch(M&-M){case 4:c=2;break;case 16:c=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:c=32;break;case 536870912:c=268435456;break;default:c=0}c=c&(l.suspendedLanes|M)?0:c,c!==0&&c!==h.retryLane&&(h.retryLane=c,cr(t,c),jn(l,t,c,-1))}return Eu(),l=nu(Error(n(421))),zo(t,r,M,l)}return c.data==="$?"?(r.flags|=128,r.child=t.child,r=Kg.bind(null,t),c._reactRetry=r,null):(t=h.treeContext,Pn=Rr(c.nextSibling),Cn=r,Ct=!0,Vn=null,t!==null&&(In[Nn++]=lr,In[Nn++]=ur,In[Nn++]=Zr,lr=t.id,ur=t.overflow,Zr=r),r=lu(r,l.children),r.flags|=4096,r)}function nh(t,r,o){t.lanes|=r;var l=t.alternate;l!==null&&(l.lanes|=r),zl(t.return,r,o)}function uu(t,r,o,l,c){var h=t.memoizedState;h===null?t.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:l,tail:o,tailMode:c}:(h.isBackwards=r,h.rendering=null,h.renderingStartTime=0,h.last=l,h.tail=o,h.tailMode=c)}function rh(t,r,o){var l=r.pendingProps,c=l.revealOrder,h=l.tail;if(mn(t,r,l.children,o),l=Dt.current,l&2)l=l&1|2,r.flags|=128;else{if(t!==null&&t.flags&128)e:for(t=r.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&nh(t,o,r);else if(t.tag===19)nh(t,o,r);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===r)break e;for(;t.sibling===null;){if(t.return===null||t.return===r)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}l&=1}if(wt(Dt,l),!(r.mode&1))r.memoizedState=null;else switch(c){case"forwards":for(o=r.child,c=null;o!==null;)t=o.alternate,t!==null&&Lo(t)===null&&(c=o),o=o.sibling;o=c,o===null?(c=r.child,r.child=null):(c=o.sibling,o.sibling=null),uu(r,!1,c,o,h);break;case"backwards":for(o=null,c=r.child,r.child=null;c!==null;){if(t=c.alternate,t!==null&&Lo(t)===null){r.child=c;break}t=c.sibling,c.sibling=o,o=c,c=t}uu(r,!0,o,null,h);break;case"together":uu(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function Bo(t,r){!(r.mode&1)&&t!==null&&(t.alternate=null,r.alternate=null,r.flags|=2)}function fr(t,r,o){if(t!==null&&(r.dependencies=t.dependencies),ni|=r.lanes,!(o&r.childLanes))return null;if(t!==null&&r.child!==t.child)throw Error(n(153));if(r.child!==null){for(t=r.child,o=zr(t,t.pendingProps),r.child=o,o.return=r;t.sibling!==null;)t=t.sibling,o=o.sibling=zr(t,t.pendingProps),o.return=r;o.sibling=null}return r.child}function kg(t,r,o){switch(r.tag){case 3:Qf(r),Di();break;case 5:vf(r);break;case 1:yn(r.type)&&Mo(r);break;case 4:Vl(r,r.stateNode.containerInfo);break;case 10:var l=r.type._context,c=r.memoizedProps.value;wt(Ro,l._currentValue),l._currentValue=c;break;case 13:if(l=r.memoizedState,l!==null)return l.dehydrated!==null?(wt(Dt,Dt.current&1),r.flags|=128,null):o&r.child.childLanes?th(t,r,o):(wt(Dt,Dt.current&1),t=fr(t,r,o),t!==null?t.sibling:null);wt(Dt,Dt.current&1);break;case 19:if(l=(o&r.childLanes)!==0,t.flags&128){if(l)return rh(t,r,o);r.flags|=128}if(c=r.memoizedState,c!==null&&(c.rendering=null,c.tail=null,c.lastEffect=null),wt(Dt,Dt.current),l)break;return null;case 22:case 23:return r.lanes=0,Kf(t,r,o)}return fr(t,r,o)}var ih,cu,ah,oh;ih=function(t,r){for(var o=r.child;o!==null;){if(o.tag===5||o.tag===6)t.appendChild(o.stateNode);else if(o.tag!==4&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===r)break;for(;o.sibling===null;){if(o.return===null||o.return===r)return;o=o.return}o.sibling.return=o.return,o=o.sibling}},cu=function(){},ah=function(t,r,o,l){var c=t.memoizedProps;if(c!==l){t=r.stateNode,ei($n.current);var h=null;switch(o){case"input":c=O(t,c),l=O(t,l),h=[];break;case"select":c=re({},c,{value:void 0}),l=re({},l,{value:void 0}),h=[];break;case"textarea":c=E(t,c),l=E(t,l),h=[];break;default:typeof c.onClick!="function"&&typeof l.onClick=="function"&&(t.onclick=xo)}st(o,l);var M;o=null;for(Z in c)if(!l.hasOwnProperty(Z)&&c.hasOwnProperty(Z)&&c[Z]!=null)if(Z==="style"){var D=c[Z];for(M in D)D.hasOwnProperty(M)&&(o||(o={}),o[M]="")}else Z!=="dangerouslySetInnerHTML"&&Z!=="children"&&Z!=="suppressContentEditableWarning"&&Z!=="suppressHydrationWarning"&&Z!=="autoFocus"&&(s.hasOwnProperty(Z)?h||(h=[]):(h=h||[]).push(Z,null));for(Z in l){var N=l[Z];if(D=c!=null?c[Z]:void 0,l.hasOwnProperty(Z)&&N!==D&&(N!=null||D!=null))if(Z==="style")if(D){for(M in D)!D.hasOwnProperty(M)||N&&N.hasOwnProperty(M)||(o||(o={}),o[M]="");for(M in N)N.hasOwnProperty(M)&&D[M]!==N[M]&&(o||(o={}),o[M]=N[M])}else o||(h||(h=[]),h.push(Z,o)),o=N;else Z==="dangerouslySetInnerHTML"?(N=N?N.__html:void 0,D=D?D.__html:void 0,N!=null&&D!==N&&(h=h||[]).push(Z,N)):Z==="children"?typeof N!="string"&&typeof N!="number"||(h=h||[]).push(Z,""+N):Z!=="suppressContentEditableWarning"&&Z!=="suppressHydrationWarning"&&(s.hasOwnProperty(Z)?(N!=null&&Z==="onScroll"&&At("scroll",t),h||D===N||(h=[])):(h=h||[]).push(Z,N))}o&&(h=h||[]).push("style",o);var Z=h;(r.updateQueue=Z)&&(r.flags|=4)}},oh=function(t,r,o,l){o!==l&&(r.flags|=4)};function Ta(t,r){if(!Ct)switch(t.tailMode){case"hidden":r=t.tail;for(var o=null;r!==null;)r.alternate!==null&&(o=r),r=r.sibling;o===null?t.tail=null:o.sibling=null;break;case"collapsed":o=t.tail;for(var l=null;o!==null;)o.alternate!==null&&(l=o),o=o.sibling;l===null?r||t.tail===null?t.tail=null:t.tail.sibling=null:l.sibling=null}}function sn(t){var r=t.alternate!==null&&t.alternate.child===t.child,o=0,l=0;if(r)for(var c=t.child;c!==null;)o|=c.lanes|c.childLanes,l|=c.subtreeFlags&14680064,l|=c.flags&14680064,c.return=t,c=c.sibling;else for(c=t.child;c!==null;)o|=c.lanes|c.childLanes,l|=c.subtreeFlags,l|=c.flags,c.return=t,c=c.sibling;return t.subtreeFlags|=l,t.childLanes=o,r}function zg(t,r,o){var l=r.pendingProps;switch(Ll(r),r.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return sn(r),null;case 1:return yn(r.type)&&So(),sn(r),null;case 3:return l=r.stateNode,Ni(),Rt(xn),Rt(an),Xl(),l.pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),(t===null||t.child===null)&&(bo(r)?r.flags|=4:t===null||t.memoizedState.isDehydrated&&!(r.flags&256)||(r.flags|=1024,Vn!==null&&(yu(Vn),Vn=null))),cu(t,r),sn(r),null;case 5:Gl(r);var c=ei(xa.current);if(o=r.type,t!==null&&r.stateNode!=null)ah(t,r,o,l,c),t.ref!==r.ref&&(r.flags|=512,r.flags|=2097152);else{if(!l){if(r.stateNode===null)throw Error(n(166));return sn(r),null}if(t=ei($n.current),bo(r)){l=r.stateNode,o=r.type;var h=r.memoizedProps;switch(l[Yn]=r,l[pa]=h,t=(r.mode&1)!==0,o){case"dialog":At("cancel",l),At("close",l);break;case"iframe":case"object":case"embed":At("load",l);break;case"video":case"audio":for(c=0;c<da.length;c++)At(da[c],l);break;case"source":At("error",l);break;case"img":case"image":case"link":At("error",l),At("load",l);break;case"details":At("toggle",l);break;case"input":dn(l,h),At("invalid",l);break;case"select":l._wrapperState={wasMultiple:!!h.multiple},At("invalid",l);break;case"textarea":$(l,h),At("invalid",l)}st(o,h),c=null;for(var M in h)if(h.hasOwnProperty(M)){var D=h[M];M==="children"?typeof D=="string"?l.textContent!==D&&(h.suppressHydrationWarning!==!0&&_o(l.textContent,D,t),c=["children",D]):typeof D=="number"&&l.textContent!==""+D&&(h.suppressHydrationWarning!==!0&&_o(l.textContent,D,t),c=["children",""+D]):s.hasOwnProperty(M)&&D!=null&&M==="onScroll"&&At("scroll",l)}switch(o){case"input":St(l),Xe(l,h,!0);break;case"textarea":St(l),ge(l);break;case"select":case"option":break;default:typeof h.onClick=="function"&&(l.onclick=xo)}l=c,r.updateQueue=l,l!==null&&(r.flags|=4)}else{M=c.nodeType===9?c:c.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=ce(o)),t==="http://www.w3.org/1999/xhtml"?o==="script"?(t=M.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof l.is=="string"?t=M.createElement(o,{is:l.is}):(t=M.createElement(o),o==="select"&&(M=t,l.multiple?M.multiple=!0:l.size&&(M.size=l.size))):t=M.createElementNS(t,o),t[Yn]=r,t[pa]=l,ih(t,r,!1,!1),r.stateNode=t;e:{switch(M=nt(o,l),o){case"dialog":At("cancel",t),At("close",t),c=l;break;case"iframe":case"object":case"embed":At("load",t),c=l;break;case"video":case"audio":for(c=0;c<da.length;c++)At(da[c],t);c=l;break;case"source":At("error",t),c=l;break;case"img":case"image":case"link":At("error",t),At("load",t),c=l;break;case"details":At("toggle",t),c=l;break;case"input":dn(t,l),c=O(t,l),At("invalid",t);break;case"option":c=l;break;case"select":t._wrapperState={wasMultiple:!!l.multiple},c=re({},l,{value:void 0}),At("invalid",t);break;case"textarea":$(t,l),c=E(t,l),At("invalid",t);break;default:c=l}st(o,c),D=c;for(h in D)if(D.hasOwnProperty(h)){var N=D[h];h==="style"?Je(t,N):h==="dangerouslySetInnerHTML"?(N=N?N.__html:void 0,N!=null&&Ne(t,N)):h==="children"?typeof N=="string"?(o!=="textarea"||N!=="")&&at(t,N):typeof N=="number"&&at(t,""+N):h!=="suppressContentEditableWarning"&&h!=="suppressHydrationWarning"&&h!=="autoFocus"&&(s.hasOwnProperty(h)?N!=null&&h==="onScroll"&&At("scroll",t):N!=null&&L(t,h,N,M))}switch(o){case"input":St(t),Xe(t,l,!1);break;case"textarea":St(t),ge(t);break;case"option":l.value!=null&&t.setAttribute("value",""+Ee(l.value));break;case"select":t.multiple=!!l.multiple,h=l.value,h!=null?P(t,!!l.multiple,h,!1):l.defaultValue!=null&&P(t,!!l.multiple,l.defaultValue,!0);break;default:typeof c.onClick=="function"&&(t.onclick=xo)}switch(o){case"button":case"input":case"select":case"textarea":l=!!l.autoFocus;break e;case"img":l=!0;break e;default:l=!1}}l&&(r.flags|=4)}r.ref!==null&&(r.flags|=512,r.flags|=2097152)}return sn(r),null;case 6:if(t&&r.stateNode!=null)oh(t,r,t.memoizedProps,l);else{if(typeof l!="string"&&r.stateNode===null)throw Error(n(166));if(o=ei(xa.current),ei($n.current),bo(r)){if(l=r.stateNode,o=r.memoizedProps,l[Yn]=r,(h=l.nodeValue!==o)&&(t=Cn,t!==null))switch(t.tag){case 3:_o(l.nodeValue,o,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&_o(l.nodeValue,o,(t.mode&1)!==0)}h&&(r.flags|=4)}else l=(o.nodeType===9?o:o.ownerDocument).createTextNode(l),l[Yn]=r,r.stateNode=l}return sn(r),null;case 13:if(Rt(Dt),l=r.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(Ct&&Pn!==null&&r.mode&1&&!(r.flags&128))uf(),Di(),r.flags|=98560,h=!1;else if(h=bo(r),l!==null&&l.dehydrated!==null){if(t===null){if(!h)throw Error(n(318));if(h=r.memoizedState,h=h!==null?h.dehydrated:null,!h)throw Error(n(317));h[Yn]=r}else Di(),!(r.flags&128)&&(r.memoizedState=null),r.flags|=4;sn(r),h=!1}else Vn!==null&&(yu(Vn),Vn=null),h=!0;if(!h)return r.flags&65536?r:null}return r.flags&128?(r.lanes=o,r):(l=l!==null,l!==(t!==null&&t.memoizedState!==null)&&l&&(r.child.flags|=8192,r.mode&1&&(t===null||Dt.current&1?jt===0&&(jt=3):Eu())),r.updateQueue!==null&&(r.flags|=4),sn(r),null);case 4:return Ni(),cu(t,r),t===null&&fa(r.stateNode.containerInfo),sn(r),null;case 10:return kl(r.type._context),sn(r),null;case 17:return yn(r.type)&&So(),sn(r),null;case 19:if(Rt(Dt),h=r.memoizedState,h===null)return sn(r),null;if(l=(r.flags&128)!==0,M=h.rendering,M===null)if(l)Ta(h,!1);else{if(jt!==0||t!==null&&t.flags&128)for(t=r.child;t!==null;){if(M=Lo(t),M!==null){for(r.flags|=128,Ta(h,!1),l=M.updateQueue,l!==null&&(r.updateQueue=l,r.flags|=4),r.subtreeFlags=0,l=o,o=r.child;o!==null;)h=o,t=l,h.flags&=14680066,M=h.alternate,M===null?(h.childLanes=0,h.lanes=t,h.child=null,h.subtreeFlags=0,h.memoizedProps=null,h.memoizedState=null,h.updateQueue=null,h.dependencies=null,h.stateNode=null):(h.childLanes=M.childLanes,h.lanes=M.lanes,h.child=M.child,h.subtreeFlags=0,h.deletions=null,h.memoizedProps=M.memoizedProps,h.memoizedState=M.memoizedState,h.updateQueue=M.updateQueue,h.type=M.type,t=M.dependencies,h.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),o=o.sibling;return wt(Dt,Dt.current&1|2),r.child}t=t.sibling}h.tail!==null&&z()>zi&&(r.flags|=128,l=!0,Ta(h,!1),r.lanes=4194304)}else{if(!l)if(t=Lo(M),t!==null){if(r.flags|=128,l=!0,o=t.updateQueue,o!==null&&(r.updateQueue=o,r.flags|=4),Ta(h,!0),h.tail===null&&h.tailMode==="hidden"&&!M.alternate&&!Ct)return sn(r),null}else 2*z()-h.renderingStartTime>zi&&o!==1073741824&&(r.flags|=128,l=!0,Ta(h,!1),r.lanes=4194304);h.isBackwards?(M.sibling=r.child,r.child=M):(o=h.last,o!==null?o.sibling=M:r.child=M,h.last=M)}return h.tail!==null?(r=h.tail,h.rendering=r,h.tail=r.sibling,h.renderingStartTime=z(),r.sibling=null,o=Dt.current,wt(Dt,l?o&1|2:o&1),r):(sn(r),null);case 22:case 23:return Mu(),l=r.memoizedState!==null,t!==null&&t.memoizedState!==null!==l&&(r.flags|=8192),l&&r.mode&1?Dn&1073741824&&(sn(r),r.subtreeFlags&6&&(r.flags|=8192)):sn(r),null;case 24:return null;case 25:return null}throw Error(n(156,r.tag))}function Bg(t,r){switch(Ll(r),r.tag){case 1:return yn(r.type)&&So(),t=r.flags,t&65536?(r.flags=t&-65537|128,r):null;case 3:return Ni(),Rt(xn),Rt(an),Xl(),t=r.flags,t&65536&&!(t&128)?(r.flags=t&-65537|128,r):null;case 5:return Gl(r),null;case 13:if(Rt(Dt),t=r.memoizedState,t!==null&&t.dehydrated!==null){if(r.alternate===null)throw Error(n(340));Di()}return t=r.flags,t&65536?(r.flags=t&-65537|128,r):null;case 19:return Rt(Dt),null;case 4:return Ni(),null;case 10:return kl(r.type._context),null;case 22:case 23:return Mu(),null;case 24:return null;default:return null}}var Ho=!1,ln=!1,Hg=typeof WeakSet=="function"?WeakSet:Set,Fe=null;function Oi(t,r){var o=t.ref;if(o!==null)if(typeof o=="function")try{o(null)}catch(l){It(t,r,l)}else o.current=null}function sc(t,r,o){try{o()}catch(l){It(t,r,l)}}var sh=!1;function Vg(t,r){if(El=oo,t=kd(),ml(t)){if("selectionStart"in t)var o={start:t.selectionStart,end:t.selectionEnd};else e:{o=(o=t.ownerDocument)&&o.defaultView||window;var l=o.getSelection&&o.getSelection();if(l&&l.rangeCount!==0){o=l.anchorNode;var c=l.anchorOffset,h=l.focusNode;l=l.focusOffset;try{o.nodeType,h.nodeType}catch{o=null;break e}var M=0,D=-1,N=-1,Z=0,me=0,xe=t,pe=null;t:for(;;){for(var Ce;xe!==o||c!==0&&xe.nodeType!==3||(D=M+c),xe!==h||l!==0&&xe.nodeType!==3||(N=M+l),xe.nodeType===3&&(M+=xe.nodeValue.length),(Ce=xe.firstChild)!==null;)pe=xe,xe=Ce;for(;;){if(xe===t)break t;if(pe===o&&++Z===c&&(D=M),pe===h&&++me===l&&(N=M),(Ce=xe.nextSibling)!==null)break;xe=pe,pe=xe.parentNode}xe=Ce}o=D===-1||N===-1?null:{start:D,end:N}}else o=null}o=o||{start:0,end:0}}else o=null;for(Tl={focusedElem:t,selectionRange:o},oo=!1,Fe=r;Fe!==null;)if(r=Fe,t=r.child,(r.subtreeFlags&1028)!==0&&t!==null)t.return=r,Fe=t;else for(;Fe!==null;){r=Fe;try{var Be=r.alternate;if(r.flags&1024)switch(r.tag){case 0:case 11:case 15:break;case 1:if(Be!==null){var He=Be.memoizedProps,kt=Be.memoizedState,q=r.stateNode,H=q.getSnapshotBeforeUpdate(r.elementType===r.type?He:Gn(r.type,He),kt);q.__reactInternalSnapshotBeforeUpdate=H}break;case 3:var Y=r.stateNode.containerInfo;Y.nodeType===1?Y.textContent="":Y.nodeType===9&&Y.documentElement&&Y.removeChild(Y.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(n(163))}}catch(Me){It(r,r.return,Me)}if(t=r.sibling,t!==null){t.return=r.return,Fe=t;break}Fe=r.return}return Be=sh,sh=!1,Be}function wa(t,r,o){var l=r.updateQueue;if(l=l!==null?l.lastEffect:null,l!==null){var c=l=l.next;do{if((c.tag&t)===t){var h=c.destroy;c.destroy=void 0,h!==void 0&&sc(r,o,h)}c=c.next}while(c!==l)}}function Vo(t,r){if(r=r.updateQueue,r=r!==null?r.lastEffect:null,r!==null){var o=r=r.next;do{if((o.tag&t)===t){var l=o.create;o.destroy=l()}o=o.next}while(o!==r)}}function du(t){var r=t.ref;if(r!==null){var o=t.stateNode;switch(t.tag){case 5:t=o;break;default:t=o}typeof r=="function"?r(t):r.current=t}}function lh(t){var r=t.alternate;r!==null&&(t.alternate=null,lh(r)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(r=t.stateNode,r!==null&&(delete r[Yn],delete r[pa],delete r[Rl],delete r[Tg],delete r[wg])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function uh(t){return t.tag===5||t.tag===3||t.tag===4}function ch(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||uh(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function fu(t,r,o){var l=t.tag;if(l===5||l===6)t=t.stateNode,r?o.nodeType===8?o.parentNode.insertBefore(t,r):o.insertBefore(t,r):(o.nodeType===8?(r=o.parentNode,r.insertBefore(t,o)):(r=o,r.appendChild(t)),o=o._reactRootContainer,o!=null||r.onclick!==null||(r.onclick=xo));else if(l!==4&&(t=t.child,t!==null))for(fu(t,r,o),t=t.sibling;t!==null;)fu(t,r,o),t=t.sibling}function hu(t,r,o){var l=t.tag;if(l===5||l===6)t=t.stateNode,r?o.insertBefore(t,r):o.appendChild(t);else if(l!==4&&(t=t.child,t!==null))for(hu(t,r,o),t=t.sibling;t!==null;)hu(t,r,o),t=t.sibling}var Qt=null,Wn=!1;function Ir(t,r,o){for(o=o.child;o!==null;)dh(t,r,o),o=o.sibling}function dh(t,r,o){if(rt&&typeof rt.onCommitFiberUnmount=="function")try{rt.onCommitFiberUnmount(je,o)}catch{}switch(o.tag){case 5:ln||Oi(o,r);case 6:var l=Qt,c=Wn;Qt=null,Ir(t,r,o),Qt=l,Wn=c,Qt!==null&&(Wn?(t=Qt,o=o.stateNode,t.nodeType===8?t.parentNode.removeChild(o):t.removeChild(o)):Qt.removeChild(o.stateNode));break;case 18:Qt!==null&&(Wn?(t=Qt,o=o.stateNode,t.nodeType===8?Al(t.parentNode,o):t.nodeType===1&&Al(t,o),ra(t)):Al(Qt,o.stateNode));break;case 4:l=Qt,c=Wn,Qt=o.stateNode.containerInfo,Wn=!0,Ir(t,r,o),Qt=l,Wn=c;break;case 0:case 11:case 14:case 15:if(!ln&&(l=o.updateQueue,l!==null&&(l=l.lastEffect,l!==null))){c=l=l.next;do{var h=c,M=h.destroy;h=h.tag,M!==void 0&&(h&2||h&4)&&sc(o,r,M),c=c.next}while(c!==l)}Ir(t,r,o);break;case 1:if(!ln&&(Oi(o,r),l=o.stateNode,typeof l.componentWillUnmount=="function"))try{l.props=o.memoizedProps,l.state=o.memoizedState,l.componentWillUnmount()}catch(D){It(o,r,D)}Ir(t,r,o);break;case 21:Ir(t,r,o);break;case 22:o.mode&1?(ln=(l=ln)||o.memoizedState!==null,Ir(t,r,o),ln=l):Ir(t,r,o);break;default:Ir(t,r,o)}}function fh(t){var r=t.updateQueue;if(r!==null){t.updateQueue=null;var o=t.stateNode;o===null&&(o=t.stateNode=new Hg),r.forEach(function(l){var c=Zg.bind(null,t,l);o.has(l)||(o.add(l),l.then(c,c))})}}function Xn(t,r){var o=r.deletions;if(o!==null)for(var l=0;l<o.length;l++){var c=o[l];try{var h=t,M=r,D=M;e:for(;D!==null;){switch(D.tag){case 5:Qt=D.stateNode,Wn=!1;break e;case 3:Qt=D.stateNode.containerInfo,Wn=!0;break e;case 4:Qt=D.stateNode.containerInfo,Wn=!0;break e}D=D.return}if(Qt===null)throw Error(n(160));dh(h,M,c),Qt=null,Wn=!1;var N=c.alternate;N!==null&&(N.return=null),c.return=null}catch(Z){It(c,r,Z)}}if(r.subtreeFlags&12854)for(r=r.child;r!==null;)hh(r,t),r=r.sibling}function hh(t,r){var o=t.alternate,l=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(Xn(r,t),Zn(t),l&4){try{wa(3,t,t.return),Vo(3,t)}catch(He){It(t,t.return,He)}try{wa(5,t,t.return)}catch(He){It(t,t.return,He)}}break;case 1:Xn(r,t),Zn(t),l&512&&o!==null&&Oi(o,o.return);break;case 5:if(Xn(r,t),Zn(t),l&512&&o!==null&&Oi(o,o.return),t.flags&32){var c=t.stateNode;try{at(c,"")}catch(He){It(t,t.return,He)}}if(l&4&&(c=t.stateNode,c!=null)){var h=t.memoizedProps,M=o!==null?o.memoizedProps:h,D=t.type,N=t.updateQueue;if(t.updateQueue=null,N!==null)try{D==="input"&&h.type==="radio"&&h.name!=null&&lt(c,h),nt(D,M);var Z=nt(D,h);for(M=0;M<N.length;M+=2){var me=N[M],xe=N[M+1];me==="style"?Je(c,xe):me==="dangerouslySetInnerHTML"?Ne(c,xe):me==="children"?at(c,xe):L(c,me,xe,Z)}switch(D){case"input":ot(c,h);break;case"textarea":fe(c,h);break;case"select":var pe=c._wrapperState.wasMultiple;c._wrapperState.wasMultiple=!!h.multiple;var Ce=h.value;Ce!=null?P(c,!!h.multiple,Ce,!1):pe!==!!h.multiple&&(h.defaultValue!=null?P(c,!!h.multiple,h.defaultValue,!0):P(c,!!h.multiple,h.multiple?[]:"",!1))}c[pa]=h}catch(He){It(t,t.return,He)}}break;case 6:if(Xn(r,t),Zn(t),l&4){if(t.stateNode===null)throw Error(n(162));c=t.stateNode,h=t.memoizedProps;try{c.nodeValue=h}catch(He){It(t,t.return,He)}}break;case 3:if(Xn(r,t),Zn(t),l&4&&o!==null&&o.memoizedState.isDehydrated)try{ra(r.containerInfo)}catch(He){It(t,t.return,He)}break;case 4:Xn(r,t),Zn(t);break;case 13:Xn(r,t),Zn(t),c=t.child,c.flags&8192&&(h=c.memoizedState!==null,c.stateNode.isHidden=h,!h||c.alternate!==null&&c.alternate.memoizedState!==null||(gu=z())),l&4&&fh(t);break;case 22:if(me=o!==null&&o.memoizedState!==null,t.mode&1?(ln=(Z=ln)||me,Xn(r,t),ln=Z):Xn(r,t),Zn(t),l&8192){if(Z=t.memoizedState!==null,(t.stateNode.isHidden=Z)&&!me&&t.mode&1)for(Fe=t,me=t.child;me!==null;){for(xe=Fe=me;Fe!==null;){switch(pe=Fe,Ce=pe.child,pe.tag){case 0:case 11:case 14:case 15:wa(4,pe,pe.return);break;case 1:Oi(pe,pe.return);var Be=pe.stateNode;if(typeof Be.componentWillUnmount=="function"){l=pe,o=pe.return;try{r=l,Be.props=r.memoizedProps,Be.state=r.memoizedState,Be.componentWillUnmount()}catch(He){It(l,o,He)}}break;case 5:Oi(pe,pe.return);break;case 22:if(pe.memoizedState!==null){gh(xe);continue}}Ce!==null?(Ce.return=pe,Fe=Ce):gh(xe)}me=me.sibling}e:for(me=null,xe=t;;){if(xe.tag===5){if(me===null){me=xe;try{c=xe.stateNode,Z?(h=c.style,typeof h.setProperty=="function"?h.setProperty("display","none","important"):h.display="none"):(D=xe.stateNode,N=xe.memoizedProps.style,M=N!=null&&N.hasOwnProperty("display")?N.display:null,D.style.display=Ye("display",M))}catch(He){It(t,t.return,He)}}}else if(xe.tag===6){if(me===null)try{xe.stateNode.nodeValue=Z?"":xe.memoizedProps}catch(He){It(t,t.return,He)}}else if((xe.tag!==22&&xe.tag!==23||xe.memoizedState===null||xe===t)&&xe.child!==null){xe.child.return=xe,xe=xe.child;continue}if(xe===t)break e;for(;xe.sibling===null;){if(xe.return===null||xe.return===t)break e;me===xe&&(me=null),xe=xe.return}me===xe&&(me=null),xe.sibling.return=xe.return,xe=xe.sibling}}break;case 19:Xn(r,t),Zn(t),l&4&&fh(t);break;case 21:break;default:Xn(r,t),Zn(t)}}function Zn(t){var r=t.flags;if(r&2){try{e:{for(var o=t.return;o!==null;){if(uh(o)){var l=o;break e}o=o.return}throw Error(n(160))}switch(l.tag){case 5:var c=l.stateNode;l.flags&32&&(at(c,""),l.flags&=-33);var h=ch(t);hu(t,h,c);break;case 3:case 4:var M=l.stateNode.containerInfo,D=ch(t);fu(t,D,M);break;default:throw Error(n(161))}}catch(N){It(t,t.return,N)}t.flags&=-3}r&4096&&(t.flags&=-4097)}function Gg(t,r,o){Fe=t,ph(t)}function ph(t,r,o){for(var l=(t.mode&1)!==0;Fe!==null;){var c=Fe,h=c.child;if(c.tag===22&&l){var M=c.memoizedState!==null||Ho;if(!M){var D=c.alternate,N=D!==null&&D.memoizedState!==null||ln;D=Ho;var Z=ln;if(Ho=M,(ln=N)&&!Z)for(Fe=c;Fe!==null;)M=Fe,N=M.child,M.tag===22&&M.memoizedState!==null?vh(c):N!==null?(N.return=M,Fe=N):vh(c);for(;h!==null;)Fe=h,ph(h),h=h.sibling;Fe=c,Ho=D,ln=Z}mh(t)}else c.subtreeFlags&8772&&h!==null?(h.return=c,Fe=h):mh(t)}}function mh(t){for(;Fe!==null;){var r=Fe;if(r.flags&8772){var o=r.alternate;try{if(r.flags&8772)switch(r.tag){case 0:case 11:case 15:ln||Vo(5,r);break;case 1:var l=r.stateNode;if(r.flags&4&&!ln)if(o===null)l.componentDidMount();else{var c=r.elementType===r.type?o.memoizedProps:Gn(r.type,o.memoizedProps);l.componentDidUpdate(c,o.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}var h=r.updateQueue;h!==null&&gf(r,h,l);break;case 3:var M=r.updateQueue;if(M!==null){if(o=null,r.child!==null)switch(r.child.tag){case 5:o=r.child.stateNode;break;case 1:o=r.child.stateNode}gf(r,M,o)}break;case 5:var D=r.stateNode;if(o===null&&r.flags&4){o=D;var N=r.memoizedProps;switch(r.type){case"button":case"input":case"select":case"textarea":N.autoFocus&&o.focus();break;case"img":N.src&&(o.src=N.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(r.memoizedState===null){var Z=r.alternate;if(Z!==null){var me=Z.memoizedState;if(me!==null){var xe=me.dehydrated;xe!==null&&ra(xe)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(n(163))}ln||r.flags&512&&du(r)}catch(pe){It(r,r.return,pe)}}if(r===t){Fe=null;break}if(o=r.sibling,o!==null){o.return=r.return,Fe=o;break}Fe=r.return}}function gh(t){for(;Fe!==null;){var r=Fe;if(r===t){Fe=null;break}var o=r.sibling;if(o!==null){o.return=r.return,Fe=o;break}Fe=r.return}}function vh(t){for(;Fe!==null;){var r=Fe;try{switch(r.tag){case 0:case 11:case 15:var o=r.return;try{Vo(4,r)}catch(N){It(r,o,N)}break;case 1:var l=r.stateNode;if(typeof l.componentDidMount=="function"){var c=r.return;try{l.componentDidMount()}catch(N){It(r,c,N)}}var h=r.return;try{du(r)}catch(N){It(r,h,N)}break;case 5:var M=r.return;try{du(r)}catch(N){It(r,M,N)}}}catch(N){It(r,r.return,N)}if(r===t){Fe=null;break}var D=r.sibling;if(D!==null){D.return=r.return,Fe=D;break}Fe=r.return}}var Wg=Math.ceil,Go=C.ReactCurrentDispatcher,pu=C.ReactCurrentOwner,kn=C.ReactCurrentBatchConfig,pt=0,Kt=null,zt=null,en=0,Dn=0,ki=Cr(0),jt=0,ba=null,ni=0,Wo=0,mu=0,Aa=null,Mn=null,gu=0,zi=1/0,hr=null,Xo=!1,vu=null,Nr=null,jo=!1,Fr=null,qo=0,Ra=0,_u=null,Yo=-1,$o=0;function gn(){return pt&6?z():Yo!==-1?Yo:Yo=z()}function Or(t){return t.mode&1?pt&2&&en!==0?en&-en:Ag.transition!==null?($o===0&&($o=pn()),$o):(t=ut,t!==0||(t=window.event,t=t===void 0?16:_d(t.type)),t):1}function jn(t,r,o,l){if(50<Ra)throw Ra=0,_u=null,Error(n(185));Ut(t,o,l),(!(pt&2)||t!==Kt)&&(t===Kt&&(!(pt&2)&&(Wo|=o),jt===4&&kr(t,en)),En(t,l),o===1&&pt===0&&!(r.mode&1)&&(zi=z()+500,Eo&&Dr()))}function En(t,r){var o=t.callbackNode;qr(t,r);var l=Bn(t,t===Kt?en:0);if(l===0)o!==null&&W(o),t.callbackNode=null,t.callbackPriority=0;else if(r=l&-l,t.callbackPriority!==r){if(o!=null&&W(o),r===1)t.tag===0?bg(xh.bind(null,t)):rf(xh.bind(null,t)),Mg(function(){!(pt&6)&&Dr()}),o=null;else{switch(cd(l)){case 1:o=Ae;break;case 4:o=Le;break;case 16:o=ze;break;case 536870912:o=Qe;break;default:o=ze}o=Ah(o,_h.bind(null,t))}t.callbackPriority=r,t.callbackNode=o}}function _h(t,r){if(Yo=-1,$o=0,pt&6)throw Error(n(327));var o=t.callbackNode;if(Bi()&&t.callbackNode!==o)return null;var l=Bn(t,t===Kt?en:0);if(l===0)return null;if(l&30||l&t.expiredLanes||r)r=Ko(t,l);else{r=l;var c=pt;pt|=2;var h=Sh();(Kt!==t||en!==r)&&(hr=null,zi=z()+500,ii(t,r));do try{qg();break}catch(D){yh(t,D)}while(!0);Ol(),Go.current=h,pt=c,zt!==null?r=0:(Kt=null,en=0,r=jt)}if(r!==0){if(r===2&&(c=Mt(t),c!==0&&(l=c,r=xu(t,c))),r===1)throw o=ba,ii(t,0),kr(t,l),En(t,z()),o;if(r===6)kr(t,l);else{if(c=t.current.alternate,!(l&30)&&!Xg(c)&&(r=Ko(t,l),r===2&&(h=Mt(t),h!==0&&(l=h,r=xu(t,h))),r===1))throw o=ba,ii(t,0),kr(t,l),En(t,z()),o;switch(t.finishedWork=c,t.finishedLanes=l,r){case 0:case 1:throw Error(n(345));case 2:ai(t,Mn,hr);break;case 3:if(kr(t,l),(l&130023424)===l&&(r=gu+500-z(),10<r)){if(Bn(t,0)!==0)break;if(c=t.suspendedLanes,(c&l)!==l){gn(),t.pingedLanes|=t.suspendedLanes&c;break}t.timeoutHandle=bl(ai.bind(null,t,Mn,hr),r);break}ai(t,Mn,hr);break;case 4:if(kr(t,l),(l&4194240)===l)break;for(r=t.eventTimes,c=-1;0<l;){var M=31-gt(l);h=1<<M,M=r[M],M>c&&(c=M),l&=~h}if(l=c,l=z()-l,l=(120>l?120:480>l?480:1080>l?1080:1920>l?1920:3e3>l?3e3:4320>l?4320:1960*Wg(l/1960))-l,10<l){t.timeoutHandle=bl(ai.bind(null,t,Mn,hr),l);break}ai(t,Mn,hr);break;case 5:ai(t,Mn,hr);break;default:throw Error(n(329))}}}return En(t,z()),t.callbackNode===o?_h.bind(null,t):null}function xu(t,r){var o=Aa;return t.current.memoizedState.isDehydrated&&(ii(t,r).flags|=256),t=Ko(t,r),t!==2&&(r=Mn,Mn=o,r!==null&&yu(r)),t}function yu(t){Mn===null?Mn=t:Mn.push.apply(Mn,t)}function Xg(t){for(var r=t;;){if(r.flags&16384){var o=r.updateQueue;if(o!==null&&(o=o.stores,o!==null))for(var l=0;l<o.length;l++){var c=o[l],h=c.getSnapshot;c=c.value;try{if(!Hn(h(),c))return!1}catch{return!1}}}if(o=r.child,r.subtreeFlags&16384&&o!==null)o.return=r,r=o;else{if(r===t)break;for(;r.sibling===null;){if(r.return===null||r.return===t)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function kr(t,r){for(r&=~mu,r&=~Wo,t.suspendedLanes|=r,t.pingedLanes&=~r,t=t.expirationTimes;0<r;){var o=31-gt(r),l=1<<o;t[o]=-1,r&=~l}}function xh(t){if(pt&6)throw Error(n(327));Bi();var r=Bn(t,0);if(!(r&1))return En(t,z()),null;var o=Ko(t,r);if(t.tag!==0&&o===2){var l=Mt(t);l!==0&&(r=l,o=xu(t,l))}if(o===1)throw o=ba,ii(t,0),kr(t,r),En(t,z()),o;if(o===6)throw Error(n(345));return t.finishedWork=t.current.alternate,t.finishedLanes=r,ai(t,Mn,hr),En(t,z()),null}function Su(t,r){var o=pt;pt|=1;try{return t(r)}finally{pt=o,pt===0&&(zi=z()+500,Eo&&Dr())}}function ri(t){Fr!==null&&Fr.tag===0&&!(pt&6)&&Bi();var r=pt;pt|=1;var o=kn.transition,l=ut;try{if(kn.transition=null,ut=1,t)return t()}finally{ut=l,kn.transition=o,pt=r,!(pt&6)&&Dr()}}function Mu(){Dn=ki.current,Rt(ki)}function ii(t,r){t.finishedWork=null,t.finishedLanes=0;var o=t.timeoutHandle;if(o!==-1&&(t.timeoutHandle=-1,Sg(o)),zt!==null)for(o=zt.return;o!==null;){var l=o;switch(Ll(l),l.tag){case 1:l=l.type.childContextTypes,l!=null&&So();break;case 3:Ni(),Rt(xn),Rt(an),Xl();break;case 5:Gl(l);break;case 4:Ni();break;case 13:Rt(Dt);break;case 19:Rt(Dt);break;case 10:kl(l.type._context);break;case 22:case 23:Mu()}o=o.return}if(Kt=t,zt=t=zr(t.current,null),en=Dn=r,jt=0,ba=null,mu=Wo=ni=0,Mn=Aa=null,Qr!==null){for(r=0;r<Qr.length;r++)if(o=Qr[r],l=o.interleaved,l!==null){o.interleaved=null;var c=l.next,h=o.pending;if(h!==null){var M=h.next;h.next=c,l.next=M}o.pending=l}Qr=null}return t}function yh(t,r){do{var o=zt;try{if(Ol(),Uo.current=Oo,Io){for(var l=Lt.memoizedState;l!==null;){var c=l.queue;c!==null&&(c.pending=null),l=l.next}Io=!1}if(ti=0,$t=Xt=Lt=null,ya=!1,Sa=0,pu.current=null,o===null||o.return===null){jt=1,ba=r,zt=null;break}e:{var h=t,M=o.return,D=o,N=r;if(r=en,D.flags|=32768,N!==null&&typeof N=="object"&&typeof N.then=="function"){var Z=N,me=D,xe=me.tag;if(!(me.mode&1)&&(xe===0||xe===11||xe===15)){var pe=me.alternate;pe?(me.updateQueue=pe.updateQueue,me.memoizedState=pe.memoizedState,me.lanes=pe.lanes):(me.updateQueue=null,me.memoizedState=null)}var Ce=Xf(M);if(Ce!==null){Ce.flags&=-257,jf(Ce,M,D,h,r),Ce.mode&1&&Wf(h,Z,r),r=Ce,N=Z;var Be=r.updateQueue;if(Be===null){var He=new Set;He.add(N),r.updateQueue=He}else Be.add(N);break e}else{if(!(r&1)){Wf(h,Z,r),Eu();break e}N=Error(n(426))}}else if(Ct&&D.mode&1){var kt=Xf(M);if(kt!==null){!(kt.flags&65536)&&(kt.flags|=256),jf(kt,M,D,h,r),Nl(Fi(N,D));break e}}h=N=Fi(N,D),jt!==4&&(jt=2),Aa===null?Aa=[h]:Aa.push(h),h=M;do{switch(h.tag){case 3:h.flags|=65536,r&=-r,h.lanes|=r;var q=Vf(h,N,r);mf(h,q);break e;case 1:D=N;var H=h.type,Y=h.stateNode;if(!(h.flags&128)&&(typeof H.getDerivedStateFromError=="function"||Y!==null&&typeof Y.componentDidCatch=="function"&&(Nr===null||!Nr.has(Y)))){h.flags|=65536,r&=-r,h.lanes|=r;var Me=Gf(h,D,r);mf(h,Me);break e}}h=h.return}while(h!==null)}Eh(o)}catch(Ge){r=Ge,zt===o&&o!==null&&(zt=o=o.return);continue}break}while(!0)}function Sh(){var t=Go.current;return Go.current=Oo,t===null?Oo:t}function Eu(){(jt===0||jt===3||jt===2)&&(jt=4),Kt===null||!(ni&268435455)&&!(Wo&268435455)||kr(Kt,en)}function Ko(t,r){var o=pt;pt|=2;var l=Sh();(Kt!==t||en!==r)&&(hr=null,ii(t,r));do try{jg();break}catch(c){yh(t,c)}while(!0);if(Ol(),pt=o,Go.current=l,zt!==null)throw Error(n(261));return Kt=null,en=0,jt}function jg(){for(;zt!==null;)Mh(zt)}function qg(){for(;zt!==null&&!J();)Mh(zt)}function Mh(t){var r=bh(t.alternate,t,Dn);t.memoizedProps=t.pendingProps,r===null?Eh(t):zt=r,pu.current=null}function Eh(t){var r=t;do{var o=r.alternate;if(t=r.return,r.flags&32768){if(o=Bg(o,r),o!==null){o.flags&=32767,zt=o;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{jt=6,zt=null;return}}else if(o=zg(o,r,Dn),o!==null){zt=o;return}if(r=r.sibling,r!==null){zt=r;return}zt=r=t}while(r!==null);jt===0&&(jt=5)}function ai(t,r,o){var l=ut,c=kn.transition;try{kn.transition=null,ut=1,Yg(t,r,o,l)}finally{kn.transition=c,ut=l}return null}function Yg(t,r,o,l){do Bi();while(Fr!==null);if(pt&6)throw Error(n(327));o=t.finishedWork;var c=t.finishedLanes;if(o===null)return null;if(t.finishedWork=null,t.finishedLanes=0,o===t.current)throw Error(n(177));t.callbackNode=null,t.callbackPriority=0;var h=o.lanes|o.childLanes;if(vn(t,h),t===Kt&&(zt=Kt=null,en=0),!(o.subtreeFlags&2064)&&!(o.flags&2064)||jo||(jo=!0,Ah(ze,function(){return Bi(),null})),h=(o.flags&15990)!==0,o.subtreeFlags&15990||h){h=kn.transition,kn.transition=null;var M=ut;ut=1;var D=pt;pt|=4,pu.current=null,Vg(t,o),hh(o,t),pg(Tl),oo=!!El,Tl=El=null,t.current=o,Gg(o),Q(),pt=D,ut=M,kn.transition=h}else t.current=o;if(jo&&(jo=!1,Fr=t,qo=c),h=t.pendingLanes,h===0&&(Nr=null),vt(o.stateNode),En(t,z()),r!==null)for(l=t.onRecoverableError,o=0;o<r.length;o++)c=r[o],l(c.value,{componentStack:c.stack,digest:c.digest});if(Xo)throw Xo=!1,t=vu,vu=null,t;return qo&1&&t.tag!==0&&Bi(),h=t.pendingLanes,h&1?t===_u?Ra++:(Ra=0,_u=t):Ra=0,Dr(),null}function Bi(){if(Fr!==null){var t=cd(qo),r=kn.transition,o=ut;try{if(kn.transition=null,ut=16>t?16:t,Fr===null)var l=!1;else{if(t=Fr,Fr=null,qo=0,pt&6)throw Error(n(331));var c=pt;for(pt|=4,Fe=t.current;Fe!==null;){var h=Fe,M=h.child;if(Fe.flags&16){var D=h.deletions;if(D!==null){for(var N=0;N<D.length;N++){var Z=D[N];for(Fe=Z;Fe!==null;){var me=Fe;switch(me.tag){case 0:case 11:case 15:wa(8,me,h)}var xe=me.child;if(xe!==null)xe.return=me,Fe=xe;else for(;Fe!==null;){me=Fe;var pe=me.sibling,Ce=me.return;if(lh(me),me===Z){Fe=null;break}if(pe!==null){pe.return=Ce,Fe=pe;break}Fe=Ce}}}var Be=h.alternate;if(Be!==null){var He=Be.child;if(He!==null){Be.child=null;do{var kt=He.sibling;He.sibling=null,He=kt}while(He!==null)}}Fe=h}}if(h.subtreeFlags&2064&&M!==null)M.return=h,Fe=M;else e:for(;Fe!==null;){if(h=Fe,h.flags&2048)switch(h.tag){case 0:case 11:case 15:wa(9,h,h.return)}var q=h.sibling;if(q!==null){q.return=h.return,Fe=q;break e}Fe=h.return}}var H=t.current;for(Fe=H;Fe!==null;){M=Fe;var Y=M.child;if(M.subtreeFlags&2064&&Y!==null)Y.return=M,Fe=Y;else e:for(M=H;Fe!==null;){if(D=Fe,D.flags&2048)try{switch(D.tag){case 0:case 11:case 15:Vo(9,D)}}catch(Ge){It(D,D.return,Ge)}if(D===M){Fe=null;break e}var Me=D.sibling;if(Me!==null){Me.return=D.return,Fe=Me;break e}Fe=D.return}}if(pt=c,Dr(),rt&&typeof rt.onPostCommitFiberRoot=="function")try{rt.onPostCommitFiberRoot(je,t)}catch{}l=!0}return l}finally{ut=o,kn.transition=r}}return!1}function Th(t,r,o){r=Fi(o,r),r=Vf(t,r,1),t=Ur(t,r,1),r=gn(),t!==null&&(Ut(t,1,r),En(t,r))}function It(t,r,o){if(t.tag===3)Th(t,t,o);else for(;r!==null;){if(r.tag===3){Th(r,t,o);break}else if(r.tag===1){var l=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof l.componentDidCatch=="function"&&(Nr===null||!Nr.has(l))){t=Fi(o,t),t=Gf(r,t,1),r=Ur(r,t,1),t=gn(),r!==null&&(Ut(r,1,t),En(r,t));break}}r=r.return}}function $g(t,r,o){var l=t.pingCache;l!==null&&l.delete(r),r=gn(),t.pingedLanes|=t.suspendedLanes&o,Kt===t&&(en&o)===o&&(jt===4||jt===3&&(en&130023424)===en&&500>z()-gu?ii(t,0):mu|=o),En(t,r)}function wh(t,r){r===0&&(t.mode&1?(r=Pt,Pt<<=1,!(Pt&130023424)&&(Pt=4194304)):r=1);var o=gn();t=cr(t,r),t!==null&&(Ut(t,r,o),En(t,o))}function Kg(t){var r=t.memoizedState,o=0;r!==null&&(o=r.retryLane),wh(t,o)}function Zg(t,r){var o=0;switch(t.tag){case 13:var l=t.stateNode,c=t.memoizedState;c!==null&&(o=c.retryLane);break;case 19:l=t.stateNode;break;default:throw Error(n(314))}l!==null&&l.delete(r),wh(t,o)}var bh;bh=function(t,r,o){if(t!==null)if(t.memoizedProps!==r.pendingProps||xn.current)Sn=!0;else{if(!(t.lanes&o)&&!(r.flags&128))return Sn=!1,kg(t,r,o);Sn=!!(t.flags&131072)}else Sn=!1,Ct&&r.flags&1048576&&af(r,wo,r.index);switch(r.lanes=0,r.tag){case 2:var l=r.type;Bo(t,r),t=r.pendingProps;var c=Ri(r,an.current);Ii(r,o),c=Yl(null,r,l,t,c,o);var h=$l();return r.flags|=1,typeof c=="object"&&c!==null&&typeof c.render=="function"&&c.$$typeof===void 0?(r.tag=1,r.memoizedState=null,r.updateQueue=null,yn(l)?(h=!0,Mo(r)):h=!1,r.memoizedState=c.state!==null&&c.state!==void 0?c.state:null,Hl(r),c.updater=ko,r.stateNode=c,c._reactInternals=r,tu(r,l,t,o),r=au(null,r,l,!0,h,o)):(r.tag=0,Ct&&h&&Dl(r),mn(null,r,c,o),r=r.child),r;case 16:l=r.elementType;e:{switch(Bo(t,r),t=r.pendingProps,c=l._init,l=c(l._payload),r.type=l,c=r.tag=Qg(l),t=Gn(l,t),c){case 0:r=iu(null,r,l,t,o);break e;case 1:r=Jf(null,r,l,t,o);break e;case 11:r=qf(null,r,l,t,o);break e;case 14:r=Yf(null,r,l,Gn(l.type,t),o);break e}throw Error(n(306,l,""))}return r;case 0:return l=r.type,c=r.pendingProps,c=r.elementType===l?c:Gn(l,c),iu(t,r,l,c,o);case 1:return l=r.type,c=r.pendingProps,c=r.elementType===l?c:Gn(l,c),Jf(t,r,l,c,o);case 3:e:{if(Qf(r),t===null)throw Error(n(387));l=r.pendingProps,h=r.memoizedState,c=h.element,pf(t,r),Do(r,l,null,o);var M=r.memoizedState;if(l=M.element,h.isDehydrated)if(h={element:l,isDehydrated:!1,cache:M.cache,pendingSuspenseBoundaries:M.pendingSuspenseBoundaries,transitions:M.transitions},r.updateQueue.baseState=h,r.memoizedState=h,r.flags&256){c=Fi(Error(n(423)),r),r=eh(t,r,l,o,c);break e}else if(l!==c){c=Fi(Error(n(424)),r),r=eh(t,r,l,o,c);break e}else for(Pn=Rr(r.stateNode.containerInfo.firstChild),Cn=r,Ct=!0,Vn=null,o=ff(r,null,l,o),r.child=o;o;)o.flags=o.flags&-3|4096,o=o.sibling;else{if(Di(),l===c){r=fr(t,r,o);break e}mn(t,r,l,o)}r=r.child}return r;case 5:return vf(r),t===null&&Il(r),l=r.type,c=r.pendingProps,h=t!==null?t.memoizedProps:null,M=c.children,wl(l,c)?M=null:h!==null&&wl(l,h)&&(r.flags|=32),Zf(t,r),mn(t,r,M,o),r.child;case 6:return t===null&&Il(r),null;case 13:return th(t,r,o);case 4:return Vl(r,r.stateNode.containerInfo),l=r.pendingProps,t===null?r.child=Li(r,null,l,o):mn(t,r,l,o),r.child;case 11:return l=r.type,c=r.pendingProps,c=r.elementType===l?c:Gn(l,c),qf(t,r,l,c,o);case 7:return mn(t,r,r.pendingProps,o),r.child;case 8:return mn(t,r,r.pendingProps.children,o),r.child;case 12:return mn(t,r,r.pendingProps.children,o),r.child;case 10:e:{if(l=r.type._context,c=r.pendingProps,h=r.memoizedProps,M=c.value,wt(Ro,l._currentValue),l._currentValue=M,h!==null)if(Hn(h.value,M)){if(h.children===c.children&&!xn.current){r=fr(t,r,o);break e}}else for(h=r.child,h!==null&&(h.return=r);h!==null;){var D=h.dependencies;if(D!==null){M=h.child;for(var N=D.firstContext;N!==null;){if(N.context===l){if(h.tag===1){N=dr(-1,o&-o),N.tag=2;var Z=h.updateQueue;if(Z!==null){Z=Z.shared;var me=Z.pending;me===null?N.next=N:(N.next=me.next,me.next=N),Z.pending=N}}h.lanes|=o,N=h.alternate,N!==null&&(N.lanes|=o),zl(h.return,o,r),D.lanes|=o;break}N=N.next}}else if(h.tag===10)M=h.type===r.type?null:h.child;else if(h.tag===18){if(M=h.return,M===null)throw Error(n(341));M.lanes|=o,D=M.alternate,D!==null&&(D.lanes|=o),zl(M,o,r),M=h.sibling}else M=h.child;if(M!==null)M.return=h;else for(M=h;M!==null;){if(M===r){M=null;break}if(h=M.sibling,h!==null){h.return=M.return,M=h;break}M=M.return}h=M}mn(t,r,c.children,o),r=r.child}return r;case 9:return c=r.type,l=r.pendingProps.children,Ii(r,o),c=Fn(c),l=l(c),r.flags|=1,mn(t,r,l,o),r.child;case 14:return l=r.type,c=Gn(l,r.pendingProps),c=Gn(l.type,c),Yf(t,r,l,c,o);case 15:return $f(t,r,r.type,r.pendingProps,o);case 17:return l=r.type,c=r.pendingProps,c=r.elementType===l?c:Gn(l,c),Bo(t,r),r.tag=1,yn(l)?(t=!0,Mo(r)):t=!1,Ii(r,o),Bf(r,l,c),tu(r,l,c,o),au(null,r,l,!0,t,o);case 19:return rh(t,r,o);case 22:return Kf(t,r,o)}throw Error(n(156,r.tag))};function Ah(t,r){return T(t,r)}function Jg(t,r,o,l){this.tag=t,this.key=o,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=l,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function zn(t,r,o,l){return new Jg(t,r,o,l)}function Tu(t){return t=t.prototype,!(!t||!t.isReactComponent)}function Qg(t){if(typeof t=="function")return Tu(t)?1:0;if(t!=null){if(t=t.$$typeof,t===ie)return 11;if(t===he)return 14}return 2}function zr(t,r){var o=t.alternate;return o===null?(o=zn(t.tag,r,t.key,t.mode),o.elementType=t.elementType,o.type=t.type,o.stateNode=t.stateNode,o.alternate=t,t.alternate=o):(o.pendingProps=r,o.type=t.type,o.flags=0,o.subtreeFlags=0,o.deletions=null),o.flags=t.flags&14680064,o.childLanes=t.childLanes,o.lanes=t.lanes,o.child=t.child,o.memoizedProps=t.memoizedProps,o.memoizedState=t.memoizedState,o.updateQueue=t.updateQueue,r=t.dependencies,o.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},o.sibling=t.sibling,o.index=t.index,o.ref=t.ref,o}function Zo(t,r,o,l,c,h){var M=2;if(l=t,typeof t=="function")Tu(t)&&(M=1);else if(typeof t=="string")M=5;else e:switch(t){case F:return oi(o.children,c,h,r);case j:M=8,c|=8;break;case R:return t=zn(12,o,r,c|2),t.elementType=R,t.lanes=h,t;case ee:return t=zn(13,o,r,c),t.elementType=ee,t.lanes=h,t;case se:return t=zn(19,o,r,c),t.elementType=se,t.lanes=h,t;case ue:return Jo(o,c,h,r);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case A:M=10;break e;case V:M=9;break e;case ie:M=11;break e;case he:M=14;break e;case oe:M=16,l=null;break e}throw Error(n(130,t==null?t:typeof t,""))}return r=zn(M,o,r,c),r.elementType=t,r.type=l,r.lanes=h,r}function oi(t,r,o,l){return t=zn(7,t,l,r),t.lanes=o,t}function Jo(t,r,o,l){return t=zn(22,t,l,r),t.elementType=ue,t.lanes=o,t.stateNode={isHidden:!1},t}function wu(t,r,o){return t=zn(6,t,null,r),t.lanes=o,t}function bu(t,r,o){return r=zn(4,t.children!==null?t.children:[],t.key,r),r.lanes=o,r.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},r}function ev(t,r,o,l,c){this.tag=r,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=rn(0),this.expirationTimes=rn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=rn(0),this.identifierPrefix=l,this.onRecoverableError=c,this.mutableSourceEagerHydrationData=null}function Au(t,r,o,l,c,h,M,D,N){return t=new ev(t,r,o,D,N),r===1?(r=1,h===!0&&(r|=8)):r=0,h=zn(3,null,null,r),t.current=h,h.stateNode=t,h.memoizedState={element:l,isDehydrated:o,cache:null,transitions:null,pendingSuspenseBoundaries:null},Hl(h),t}function tv(t,r,o){var l=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:k,key:l==null?null:""+l,children:t,containerInfo:r,implementation:o}}function Rh(t){if(!t)return Pr;t=t._reactInternals;e:{if(qn(t)!==t||t.tag!==1)throw Error(n(170));var r=t;do{switch(r.tag){case 3:r=r.stateNode.context;break e;case 1:if(yn(r.type)){r=r.stateNode.__reactInternalMemoizedMergedChildContext;break e}}r=r.return}while(r!==null);throw Error(n(171))}if(t.tag===1){var o=t.type;if(yn(o))return tf(t,o,r)}return r}function Ch(t,r,o,l,c,h,M,D,N){return t=Au(o,l,!0,t,c,h,M,D,N),t.context=Rh(null),o=t.current,l=gn(),c=Or(o),h=dr(l,c),h.callback=r??null,Ur(o,h,c),t.current.lanes=c,Ut(t,c,l),En(t,l),t}function Qo(t,r,o,l){var c=r.current,h=gn(),M=Or(c);return o=Rh(o),r.context===null?r.context=o:r.pendingContext=o,r=dr(h,M),r.payload={element:t},l=l===void 0?null:l,l!==null&&(r.callback=l),t=Ur(c,r,M),t!==null&&(jn(t,c,M,h),Po(t,c,M)),M}function es(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function Ph(t,r){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var o=t.retryLane;t.retryLane=o!==0&&o<r?o:r}}function Ru(t,r){Ph(t,r),(t=t.alternate)&&Ph(t,r)}var Dh=typeof reportError=="function"?reportError:function(t){console.error(t)};function Cu(t){this._internalRoot=t}ts.prototype.render=Cu.prototype.render=function(t){var r=this._internalRoot;if(r===null)throw Error(n(409));Qo(t,r,null,null)},ts.prototype.unmount=Cu.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var r=t.containerInfo;ri(function(){Qo(null,t,null,null)}),r[or]=null}};function ts(t){this._internalRoot=t}ts.prototype.unstable_scheduleHydration=function(t){if(t){var r=hd();t={blockedOn:null,target:t,priority:r};for(var o=0;o<wr.length&&r!==0&&r<wr[o].priority;o++);wr.splice(o,0,t),o===0&&gd(t)}};function Pu(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function ns(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function Lh(){}function nv(t,r,o,l,c){if(c){if(typeof l=="function"){var h=l;l=function(){var Z=es(M);h.call(Z)}}var M=Ch(r,l,t,0,null,!1,!1,"",Lh);return t._reactRootContainer=M,t[or]=M.current,fa(t.nodeType===8?t.parentNode:t),ri(),M}for(;c=t.lastChild;)t.removeChild(c);if(typeof l=="function"){var D=l;l=function(){var Z=es(N);D.call(Z)}}var N=Au(t,0,!1,null,null,!1,!1,"",Lh);return t._reactRootContainer=N,t[or]=N.current,fa(t.nodeType===8?t.parentNode:t),ri(function(){Qo(r,N,o,l)}),N}function rs(t,r,o,l,c){var h=o._reactRootContainer;if(h){var M=h;if(typeof c=="function"){var D=c;c=function(){var N=es(M);D.call(N)}}Qo(r,M,t,c)}else M=nv(o,r,t,c,l);return es(M)}dd=function(t){switch(t.tag){case 3:var r=t.stateNode;if(r.current.memoizedState.isDehydrated){var o=Jt(r.pendingLanes);o!==0&&(Yr(r,o|1),En(r,z()),!(pt&6)&&(zi=z()+500,Dr()))}break;case 13:ri(function(){var l=cr(t,1);if(l!==null){var c=gn();jn(l,t,1,c)}}),Ru(t,1)}},nl=function(t){if(t.tag===13){var r=cr(t,134217728);if(r!==null){var o=gn();jn(r,t,134217728,o)}Ru(t,134217728)}},fd=function(t){if(t.tag===13){var r=Or(t),o=cr(t,r);if(o!==null){var l=gn();jn(o,t,r,l)}Ru(t,r)}},hd=function(){return ut},pd=function(t,r){var o=ut;try{return ut=t,r()}finally{ut=o}},we=function(t,r,o){switch(r){case"input":if(ot(t,o),r=o.name,o.type==="radio"&&r!=null){for(o=t;o.parentNode;)o=o.parentNode;for(o=o.querySelectorAll("input[name="+JSON.stringify(""+r)+'][type="radio"]'),r=0;r<o.length;r++){var l=o[r];if(l!==t&&l.form===t.form){var c=yo(l);if(!c)throw Error(n(90));ft(l),ot(l,c)}}}break;case"textarea":fe(t,o);break;case"select":r=o.value,r!=null&&P(t,!!o.multiple,r,!1)}},bt=Su,Wt=ri;var rv={usingClientEntryPoint:!1,Events:[ma,bi,yo,be,it,Su]},Ca={findFiberByHostInstance:$r,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},iv={bundleType:Ca.bundleType,version:Ca.version,rendererPackageName:Ca.rendererPackageName,rendererConfig:Ca.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:C.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=no(t),t===null?null:t.stateNode},findFiberByHostInstance:Ca.findFiberByHostInstance,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var is=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!is.isDisabled&&is.supportsFiber)try{je=is.inject(iv),rt=is}catch{}}return ui.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=rv,ui.createPortal=function(t,r){var o=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Pu(r))throw Error(n(200));return tv(t,r,null,o)},ui.createRoot=function(t,r){if(!Pu(t))throw Error(n(299));var o=!1,l="",c=Dh;return r!=null&&(r.unstable_strictMode===!0&&(o=!0),r.identifierPrefix!==void 0&&(l=r.identifierPrefix),r.onRecoverableError!==void 0&&(c=r.onRecoverableError)),r=Au(t,1,!1,null,null,o,!1,l,c),t[or]=r.current,fa(t.nodeType===8?t.parentNode:t),new Cu(r)},ui.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var r=t._reactInternals;if(r===void 0)throw typeof t.render=="function"?Error(n(188)):(t=Object.keys(t).join(","),Error(n(268,t)));return t=no(r),t=t===null?null:t.stateNode,t},ui.flushSync=function(t){return ri(t)},ui.hydrate=function(t,r,o){if(!ns(r))throw Error(n(200));return rs(null,t,r,!0,o)},ui.hydrateRoot=function(t,r,o){if(!Pu(t))throw Error(n(405));var l=o!=null&&o.hydratedSources||null,c=!1,h="",M=Dh;if(o!=null&&(o.unstable_strictMode===!0&&(c=!0),o.identifierPrefix!==void 0&&(h=o.identifierPrefix),o.onRecoverableError!==void 0&&(M=o.onRecoverableError)),r=Ch(r,null,t,1,o??null,c,!1,h,M),t[or]=r.current,fa(t),l)for(t=0;t<l.length;t++)o=l[t],c=o._getVersion,c=c(o._source),r.mutableSourceEagerHydrationData==null?r.mutableSourceEagerHydrationData=[o,c]:r.mutableSourceEagerHydrationData.push(o,c);return new ts(r)},ui.render=function(t,r,o){if(!ns(r))throw Error(n(200));return rs(null,t,r,!1,o)},ui.unmountComponentAtNode=function(t){if(!ns(t))throw Error(n(40));return t._reactRootContainer?(ri(function(){rs(null,null,t,!1,function(){t._reactRootContainer=null,t[or]=null})}),!0):!1},ui.unstable_batchedUpdates=Su,ui.unstable_renderSubtreeIntoContainer=function(t,r,o,l){if(!ns(o))throw Error(n(200));if(t==null||t._reactInternals===void 0)throw Error(n(38));return rs(t,r,o,!1,l)},ui.version="18.3.1-next-f1338f8080-20240426",ui}var bx;function cM(){if(bx)return lv.exports;bx=1;function a(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(a)}catch(e){console.error(e)}}return a(),lv.exports=uM(),lv.exports}var Ax;function dM(){if(Ax)return sp;Ax=1;var a=cM();return sp.createRoot=a.createRoot,sp.hydrateRoot=a.hydrateRoot,sp}var fM=dM();const hM=()=>Nt.jsxs("header",{className:"header-container",children:[Nt.jsx("h1",{className:"header-title",children:"Arystans' Portfolio"}),Nt.jsx("p",{className:"header-subtitle",children:"FullStack Developer | Node Enthusiast"})]}),pM=({title:a,description:e,github:n})=>{const i=()=>{window.open(n,"_blank")};return Nt.jsxs("div",{className:"project-card",onClick:i,children:[Nt.jsx("h3",{className:"project-title",children:a}),Nt.jsx("p",{className:"project-description",children:e})]})};var dv={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/var Rx;function mM(){return Rx||(Rx=1,function(a){(function(){var e={}.hasOwnProperty;function n(){for(var u="",d=0;d<arguments.length;d++){var f=arguments[d];f&&(u=s(u,i(f)))}return u}function i(u){if(typeof u=="string"||typeof u=="number")return u;if(typeof u!="object")return"";if(Array.isArray(u))return n.apply(null,u);if(u.toString!==Object.prototype.toString&&!u.toString.toString().includes("[native code]"))return u.toString();var d="";for(var f in u)e.call(u,f)&&u[f]&&(d=s(d,f));return d}function s(u,d){return d?u?u+" "+d:u+d:u}a.exports?(n.default=n,a.exports=n):window.classNames=n})()}(dv)),dv.exports}var gM=mM();const GS=VS(gM),vM=["xxl","xl","lg","md","sm","xs"],_M="xs",xM=ws.createContext({prefixes:{},breakpoints:vM,minBreakpoint:_M});function yM(a,e){const{prefixes:n}=ws.useContext(xM);return a||n[e]||e}function SM(a,e){let n=0;return ws.Children.map(a,i=>ws.isValidElement(i)?e(i,n++):i)}const Cx=1e3;function MM(a,e,n){const i=(a-e)/(n-e)*100;return Math.round(i*Cx)/Cx}function Px({min:a,now:e,max:n,label:i,visuallyHidden:s,striped:u,animated:d,className:f,style:p,variant:m,bsPrefix:v,...x},_){return Nt.jsx("div",{ref:_,...x,role:"progressbar",className:GS(f,`${v}-bar`,{[`bg-${m}`]:m,[`${v}-bar-animated`]:d,[`${v}-bar-striped`]:d||u}),style:{width:`${MM(e,a,n)}%`,...p},"aria-valuenow":e,"aria-valuemin":a,"aria-valuemax":n,children:s?Nt.jsx("span",{className:"visually-hidden",children:i}):i})}const Zp=ws.forwardRef(({isChild:a=!1,...e},n)=>{const i={min:0,max:100,animated:!1,visuallyHidden:!1,striped:!1,...e};if(i.bsPrefix=yM(i.bsPrefix,"progress"),a)return Px(i,n);const{min:s,now:u,max:d,label:f,visuallyHidden:p,striped:m,animated:v,bsPrefix:x,variant:_,className:S,children:w,...b}=i;return Nt.jsx("div",{ref:n,...b,className:GS(S,x),children:w?SM(w,y=>ws.cloneElement(y,{isChild:!0})):Px({min:s,now:u,max:d,label:f,visuallyHidden:p,striped:m,animated:v,bsPrefix:x,variant:_},n)})});Zp.displayName="ProgressBar";const EM=()=>Nt.jsxs("div",{className:"stats-container",children:[Nt.jsxs("div",{className:"stat",children:[Nt.jsx("h4",{className:"stat-title",children:"JavaScript"}),Nt.jsx(Zp,{now:85,label:"85%",className:"stat-progress",variant:"info",style:{height:"15px",borderRadius:"20px"}})]}),Nt.jsxs("div",{className:"stat",children:[Nt.jsx("h4",{className:"stat-title",children:"React"}),Nt.jsx(Zp,{now:90,label:"90%",className:"stat-progress",variant:"success",style:{height:"15px",borderRadius:"20px"}})]}),Nt.jsxs("div",{className:"stat",children:[Nt.jsx("h4",{className:"stat-title",children:"CSS / SCSS"}),Nt.jsx(Zp,{now:75,label:"75%",className:"stat-progress",variant:"warning",style:{height:"15px",borderRadius:"20px"}})]})]});var WS={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},Dx=tc.createContext&&tc.createContext(WS),TM=["attr","size","title"];function wM(a,e){if(a==null)return{};var n=bM(a,e),i,s;if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(a);for(s=0;s<u.length;s++)i=u[s],!(e.indexOf(i)>=0)&&Object.prototype.propertyIsEnumerable.call(a,i)&&(n[i]=a[i])}return n}function bM(a,e){if(a==null)return{};var n={};for(var i in a)if(Object.prototype.hasOwnProperty.call(a,i)){if(e.indexOf(i)>=0)continue;n[i]=a[i]}return n}function dm(){return dm=Object.assign?Object.assign.bind():function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(a[i]=n[i])}return a},dm.apply(this,arguments)}function Lx(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(a,s).enumerable})),n.push.apply(n,i)}return n}function fm(a){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Lx(Object(n),!0).forEach(function(i){AM(a,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):Lx(Object(n)).forEach(function(i){Object.defineProperty(a,i,Object.getOwnPropertyDescriptor(n,i))})}return a}function AM(a,e,n){return e=RM(e),e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function RM(a){var e=CM(a,"string");return typeof e=="symbol"?e:e+""}function CM(a,e){if(typeof a!="object"||!a)return a;var n=a[Symbol.toPrimitive];if(n!==void 0){var i=n.call(a,e||"default");if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(a)}function XS(a){return a&&a.map((e,n)=>tc.createElement(e.tag,fm({key:n},e.attr),XS(e.child)))}function Y0(a){return e=>tc.createElement(PM,dm({attr:fm({},a.attr)},e),XS(a.child))}function PM(a){var e=n=>{var{attr:i,size:s,title:u}=a,d=wM(a,TM),f=s||n.size||"1em",p;return n.className&&(p=n.className),a.className&&(p=(p?p+" ":"")+a.className),tc.createElement("svg",dm({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},n.attr,i,d,{className:p,style:fm(fm({color:a.color||n.color},n.style),a.style),height:f,width:f,xmlns:"http://www.w3.org/2000/svg"}),u&&tc.createElement("title",null,u),a.children)};return Dx!==void 0?tc.createElement(Dx.Consumer,null,n=>e(n)):e(WS)}function DM(a){return Y0({tag:"svg",attr:{viewBox:"0 0 496 512"},child:[{tag:"path",attr:{d:"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"},child:[]}]})(a)}function LM(a){return Y0({tag:"svg",attr:{viewBox:"0 0 448 512"},child:[{tag:"path",attr:{d:"M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"},child:[]}]})(a)}function UM(a){return Y0({tag:"svg",attr:{viewBox:"0 0 448 512"},child:[{tag:"path",attr:{d:"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"},child:[]}]})(a)}const IM=()=>Nt.jsxs("div",{className:"social-links-container",children:[Nt.jsx("a",{href:"https://www.linkedin.com/in/arystan-tanekov-089639338?trk=contact-info",target:"_blank",className:"social-button",children:Nt.jsx(UM,{})}),Nt.jsx("a",{href:"https://github.com/avomasrq",target:"_blank",className:"social-button",children:Nt.jsx(DM,{})}),Nt.jsx("a",{href:"https://www.instagram.com/avomasrq?igsh=dHQ4ZDJ6aHdhcXk3&utm_source=qr",target:"_blank",className:"social-button",children:Nt.jsx(LM,{})})]}),NM=()=>Nt.jsxs("div",{className:"about-me-card",children:[Nt.jsx("h2",{className:"about-me-title",children:"About Me"}),Nt.jsx("p",{className:"about-me-description",children:"Hi, I'm a passionate frontend and backend developer with a love for building clean and modern web applications. Right now i study in Tamos education in 10 th grade. I'm in the AP class on a engineering package. I also love sports. I used to do boxing 2 years;however, due to lack of time i train at home. Finally, i really like studying new skills and languages."})]});/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const $0="171",FM=0,Ux=1,OM=2,jS=1,kM=2,ms=3,$s=0,hi=1,vs=2,Xs=0,Bc=1,Ix=2,Nx=3,Fx=4,zM=5,qu=100,BM=101,HM=102,VM=103,GM=104,WM=200,XM=201,jM=202,qM=203,x_=204,y_=205,YM=206,$M=207,KM=208,ZM=209,JM=210,QM=211,eE=212,tE=213,nE=214,S_=0,M_=1,E_=2,jc=3,T_=4,w_=5,b_=6,A_=7,qS=0,rE=1,iE=2,js=0,aE=1,oE=2,sE=3,lE=4,uE=5,cE=6,dE=7,YS=300,qc=301,Yc=302,R_=303,C_=304,Sm=306,P_=1e3,Zu=1001,D_=1002,Ba=1003,fE=1004,lp=1005,Wa=1006,fv=1007,Ju=1008,bs=1009,$S=1010,KS=1011,$h=1012,K0=1013,rc=1014,xs=1015,Zh=1016,Z0=1017,J0=1018,$c=1020,ZS=35902,JS=1021,QS=1022,ka=1023,e1=1024,t1=1025,Hc=1026,Kc=1027,n1=1028,Q0=1029,r1=1030,ex=1031,tx=1033,Jp=33776,Qp=33777,em=33778,tm=33779,L_=35840,U_=35841,I_=35842,N_=35843,F_=36196,O_=37492,k_=37496,z_=37808,B_=37809,H_=37810,V_=37811,G_=37812,W_=37813,X_=37814,j_=37815,q_=37816,Y_=37817,$_=37818,K_=37819,Z_=37820,J_=37821,nm=36492,Q_=36494,e0=36495,i1=36283,t0=36284,n0=36285,r0=36286,hE=3200,pE=3201,mE=0,gE=1,Gs="",$i="srgb",Zc="srgb-linear",hm="linear",Tn="srgb",lc=7680,Ox=519,vE=512,_E=513,xE=514,a1=515,yE=516,SE=517,ME=518,EE=519,kx=35044,zx="300 es",ys=2e3,pm=2001;class od{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const u=s.indexOf(n);u!==-1&&s.splice(u,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const s=i.slice(0);for(let u=0,d=s.length;u<d;u++)s[u].call(this,e);e.target=null}}}const Hr=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],hv=Math.PI/180,i0=180/Math.PI;function Jh(){const a=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Hr[a&255]+Hr[a>>8&255]+Hr[a>>16&255]+Hr[a>>24&255]+"-"+Hr[e&255]+Hr[e>>8&255]+"-"+Hr[e>>16&15|64]+Hr[e>>24&255]+"-"+Hr[n&63|128]+Hr[n>>8&255]+"-"+Hr[n>>16&255]+Hr[n>>24&255]+Hr[i&255]+Hr[i>>8&255]+Hr[i>>16&255]+Hr[i>>24&255]).toLowerCase()}function tn(a,e,n){return Math.max(e,Math.min(n,a))}function TE(a,e){return(a%e+e)%e}function pv(a,e,n){return(1-n)*a+n*e}function Ih(a,e){switch(e.constructor){case Float32Array:return a;case Uint32Array:return a/4294967295;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int32Array:return Math.max(a/2147483647,-1);case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw new Error("Invalid component type.")}}function ci(a,e){switch(e.constructor){case Float32Array:return a;case Uint32Array:return Math.round(a*4294967295);case Uint16Array:return Math.round(a*65535);case Uint8Array:return Math.round(a*255);case Int32Array:return Math.round(a*2147483647);case Int16Array:return Math.round(a*32767);case Int8Array:return Math.round(a*127);default:throw new Error("Invalid component type.")}}class Ln{constructor(e=0,n=0){Ln.prototype.isVector2=!0,this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6],this.y=s[1]*n+s[4]*i+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=tn(this.x,e.x,n.x),this.y=tn(this.y,e.y,n.y),this}clampScalar(e,n){return this.x=tn(this.x,e,n),this.y=tn(this.y,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(tn(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(tn(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),s=Math.sin(n),u=this.x-e.x,d=this.y-e.y;return this.x=u*i-d*s+e.x,this.y=u*s+d*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Bt{constructor(e,n,i,s,u,d,f,p,m){Bt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,n,i,s,u,d,f,p,m)}set(e,n,i,s,u,d,f,p,m){const v=this.elements;return v[0]=e,v[1]=s,v[2]=f,v[3]=n,v[4]=u,v[5]=p,v[6]=i,v[7]=d,v[8]=m,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,u=this.elements,d=i[0],f=i[3],p=i[6],m=i[1],v=i[4],x=i[7],_=i[2],S=i[5],w=i[8],b=s[0],y=s[3],g=s[6],I=s[1],L=s[4],C=s[7],X=s[2],k=s[5],F=s[8];return u[0]=d*b+f*I+p*X,u[3]=d*y+f*L+p*k,u[6]=d*g+f*C+p*F,u[1]=m*b+v*I+x*X,u[4]=m*y+v*L+x*k,u[7]=m*g+v*C+x*F,u[2]=_*b+S*I+w*X,u[5]=_*y+S*L+w*k,u[8]=_*g+S*C+w*F,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],s=e[2],u=e[3],d=e[4],f=e[5],p=e[6],m=e[7],v=e[8];return n*d*v-n*f*m-i*u*v+i*f*p+s*u*m-s*d*p}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],u=e[3],d=e[4],f=e[5],p=e[6],m=e[7],v=e[8],x=v*d-f*m,_=f*p-v*u,S=m*u-d*p,w=n*x+i*_+s*S;if(w===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/w;return e[0]=x*b,e[1]=(s*m-v*i)*b,e[2]=(f*i-s*d)*b,e[3]=_*b,e[4]=(v*n-s*p)*b,e[5]=(s*u-f*n)*b,e[6]=S*b,e[7]=(i*p-m*n)*b,e[8]=(d*n-i*u)*b,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,s,u,d,f){const p=Math.cos(u),m=Math.sin(u);return this.set(i*p,i*m,-i*(p*d+m*f)+d+e,-s*m,s*p,-s*(-m*d+p*f)+f+n,0,0,1),this}scale(e,n){return this.premultiply(mv.makeScale(e,n)),this}rotate(e){return this.premultiply(mv.makeRotation(-e)),this}translate(e,n){return this.premultiply(mv.makeTranslation(e,n)),this}makeTranslation(e,n){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,n,0,0,1),this}makeRotation(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(e,n){return this.set(e,0,0,0,n,0,0,0,1),this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<9;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const mv=new Bt;function o1(a){for(let e=a.length-1;e>=0;--e)if(a[e]>=65535)return!0;return!1}function mm(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function wE(){const a=mm("canvas");return a.style.display="block",a}const Bx={};function Fc(a){a in Bx||(Bx[a]=!0,console.warn(a))}function bE(a,e,n){return new Promise(function(i,s){function u(){switch(a.clientWaitSync(e,a.SYNC_FLUSH_COMMANDS_BIT,0)){case a.WAIT_FAILED:s();break;case a.TIMEOUT_EXPIRED:setTimeout(u,n);break;default:i()}}setTimeout(u,n)})}function AE(a){const e=a.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function RE(a){const e=a.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Hx=new Bt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Vx=new Bt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function CE(){const a={enabled:!0,workingColorSpace:Zc,spaces:{},convert:function(s,u,d){return this.enabled===!1||u===d||!u||!d||(this.spaces[u].transfer===Tn&&(s.r=Es(s.r),s.g=Es(s.g),s.b=Es(s.b)),this.spaces[u].primaries!==this.spaces[d].primaries&&(s.applyMatrix3(this.spaces[u].toXYZ),s.applyMatrix3(this.spaces[d].fromXYZ)),this.spaces[d].transfer===Tn&&(s.r=Vc(s.r),s.g=Vc(s.g),s.b=Vc(s.b))),s},fromWorkingColorSpace:function(s,u){return this.convert(s,this.workingColorSpace,u)},toWorkingColorSpace:function(s,u){return this.convert(s,u,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===Gs?hm:this.spaces[s].transfer},getLuminanceCoefficients:function(s,u=this.workingColorSpace){return s.fromArray(this.spaces[u].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,u,d){return s.copy(this.spaces[u].toXYZ).multiply(this.spaces[d].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return a.define({[Zc]:{primaries:e,whitePoint:i,transfer:hm,toXYZ:Hx,fromXYZ:Vx,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:$i},outputColorSpaceConfig:{drawingBufferColorSpace:$i}},[$i]:{primaries:e,whitePoint:i,transfer:Tn,toXYZ:Hx,fromXYZ:Vx,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:$i}}}),a}const un=CE();function Es(a){return a<.04045?a*.0773993808:Math.pow(a*.9478672986+.0521327014,2.4)}function Vc(a){return a<.0031308?a*12.92:1.055*Math.pow(a,.41666)-.055}let uc;class PE{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{uc===void 0&&(uc=mm("canvas")),uc.width=e.width,uc.height=e.height;const i=uc.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=uc}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const n=mm("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const s=i.getImageData(0,0,e.width,e.height),u=s.data;for(let d=0;d<u.length;d++)u[d]=Es(u[d]/255)*255;return i.putImageData(s,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(Es(n[i]/255)*255):n[i]=Es(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let DE=0;class s1{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:DE++}),this.uuid=Jh(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let u;if(Array.isArray(s)){u=[];for(let d=0,f=s.length;d<f;d++)s[d].isDataTexture?u.push(gv(s[d].image)):u.push(gv(s[d]))}else u=gv(s);i.url=u}return n||(e.images[this.uuid]=i),i}}function gv(a){return typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&a instanceof ImageBitmap?PE.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let LE=0;class pi extends od{constructor(e=pi.DEFAULT_IMAGE,n=pi.DEFAULT_MAPPING,i=Zu,s=Zu,u=Wa,d=Ju,f=ka,p=bs,m=pi.DEFAULT_ANISOTROPY,v=Gs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:LE++}),this.uuid=Jh(),this.name="",this.source=new s1(e),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=u,this.minFilter=d,this.anisotropy=m,this.format=f,this.internalFormat=null,this.type=p,this.offset=new Ln(0,0),this.repeat=new Ln(1,1),this.center=new Ln(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Bt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=v,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==YS)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case P_:e.x=e.x-Math.floor(e.x);break;case Zu:e.x=e.x<0?0:1;break;case D_:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case P_:e.y=e.y-Math.floor(e.y);break;case Zu:e.y=e.y<0?0:1;break;case D_:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}pi.DEFAULT_IMAGE=null;pi.DEFAULT_MAPPING=YS;pi.DEFAULT_ANISOTROPY=1;class Jn{constructor(e=0,n=0,i=0,s=1){Jn.prototype.isVector4=!0,this.x=e,this.y=n,this.z=i,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,s){return this.x=e,this.y=n,this.z=i,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,u=this.w,d=e.elements;return this.x=d[0]*n+d[4]*i+d[8]*s+d[12]*u,this.y=d[1]*n+d[5]*i+d[9]*s+d[13]*u,this.z=d[2]*n+d[6]*i+d[10]*s+d[14]*u,this.w=d[3]*n+d[7]*i+d[11]*s+d[15]*u,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,s,u;const p=e.elements,m=p[0],v=p[4],x=p[8],_=p[1],S=p[5],w=p[9],b=p[2],y=p[6],g=p[10];if(Math.abs(v-_)<.01&&Math.abs(x-b)<.01&&Math.abs(w-y)<.01){if(Math.abs(v+_)<.1&&Math.abs(x+b)<.1&&Math.abs(w+y)<.1&&Math.abs(m+S+g-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const L=(m+1)/2,C=(S+1)/2,X=(g+1)/2,k=(v+_)/4,F=(x+b)/4,j=(w+y)/4;return L>C&&L>X?L<.01?(i=0,s=.707106781,u=.707106781):(i=Math.sqrt(L),s=k/i,u=F/i):C>X?C<.01?(i=.707106781,s=0,u=.707106781):(s=Math.sqrt(C),i=k/s,u=j/s):X<.01?(i=.707106781,s=.707106781,u=0):(u=Math.sqrt(X),i=F/u,s=j/u),this.set(i,s,u,n),this}let I=Math.sqrt((y-w)*(y-w)+(x-b)*(x-b)+(_-v)*(_-v));return Math.abs(I)<.001&&(I=1),this.x=(y-w)/I,this.y=(x-b)/I,this.z=(_-v)/I,this.w=Math.acos((m+S+g-1)/2),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this.w=n[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=tn(this.x,e.x,n.x),this.y=tn(this.y,e.y,n.y),this.z=tn(this.z,e.z,n.z),this.w=tn(this.w,e.w,n.w),this}clampScalar(e,n){return this.x=tn(this.x,e,n),this.y=tn(this.y,e,n),this.z=tn(this.z,e,n),this.w=tn(this.w,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(tn(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class UE extends od{constructor(e=1,n=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=n,this.depth=1,this.scissor=new Jn(0,0,e,n),this.scissorTest=!1,this.viewport=new Jn(0,0,e,n);const s={width:e,height:n,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Wa,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const u=new pi(s,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);u.flipY=!1,u.generateMipmaps=i.generateMipmaps,u.internalFormat=i.internalFormat,this.textures=[];const d=i.count;for(let f=0;f<d;f++)this.textures[f]=u.clone(),this.textures[f].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let s=0,u=this.textures.length;s<u;s++)this.textures[s].image.width=e,this.textures[s].image.height=n,this.textures[s].image.depth=i;this.dispose()}this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,s=e.textures.length;i<s;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const n=Object.assign({},e.texture.image);return this.texture.source=new s1(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ic extends UE{constructor(e=1,n=1,i={}){super(e,n,i),this.isWebGLRenderTarget=!0}}class l1 extends pi{constructor(e=null,n=1,i=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=Ba,this.minFilter=Ba,this.wrapR=Zu,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class IE extends pi{constructor(e=null,n=1,i=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=Ba,this.minFilter=Ba,this.wrapR=Zu,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Qh{constructor(e=0,n=0,i=0,s=1){this.isQuaternion=!0,this._x=e,this._y=n,this._z=i,this._w=s}static slerpFlat(e,n,i,s,u,d,f){let p=i[s+0],m=i[s+1],v=i[s+2],x=i[s+3];const _=u[d+0],S=u[d+1],w=u[d+2],b=u[d+3];if(f===0){e[n+0]=p,e[n+1]=m,e[n+2]=v,e[n+3]=x;return}if(f===1){e[n+0]=_,e[n+1]=S,e[n+2]=w,e[n+3]=b;return}if(x!==b||p!==_||m!==S||v!==w){let y=1-f;const g=p*_+m*S+v*w+x*b,I=g>=0?1:-1,L=1-g*g;if(L>Number.EPSILON){const X=Math.sqrt(L),k=Math.atan2(X,g*I);y=Math.sin(y*k)/X,f=Math.sin(f*k)/X}const C=f*I;if(p=p*y+_*C,m=m*y+S*C,v=v*y+w*C,x=x*y+b*C,y===1-f){const X=1/Math.sqrt(p*p+m*m+v*v+x*x);p*=X,m*=X,v*=X,x*=X}}e[n]=p,e[n+1]=m,e[n+2]=v,e[n+3]=x}static multiplyQuaternionsFlat(e,n,i,s,u,d){const f=i[s],p=i[s+1],m=i[s+2],v=i[s+3],x=u[d],_=u[d+1],S=u[d+2],w=u[d+3];return e[n]=f*w+v*x+p*S-m*_,e[n+1]=p*w+v*_+m*x-f*S,e[n+2]=m*w+v*S+f*_-p*x,e[n+3]=v*w-f*x-p*_-m*S,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,s){return this._x=e,this._y=n,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n=!0){const i=e._x,s=e._y,u=e._z,d=e._order,f=Math.cos,p=Math.sin,m=f(i/2),v=f(s/2),x=f(u/2),_=p(i/2),S=p(s/2),w=p(u/2);switch(d){case"XYZ":this._x=_*v*x+m*S*w,this._y=m*S*x-_*v*w,this._z=m*v*w+_*S*x,this._w=m*v*x-_*S*w;break;case"YXZ":this._x=_*v*x+m*S*w,this._y=m*S*x-_*v*w,this._z=m*v*w-_*S*x,this._w=m*v*x+_*S*w;break;case"ZXY":this._x=_*v*x-m*S*w,this._y=m*S*x+_*v*w,this._z=m*v*w+_*S*x,this._w=m*v*x-_*S*w;break;case"ZYX":this._x=_*v*x-m*S*w,this._y=m*S*x+_*v*w,this._z=m*v*w-_*S*x,this._w=m*v*x+_*S*w;break;case"YZX":this._x=_*v*x+m*S*w,this._y=m*S*x+_*v*w,this._z=m*v*w-_*S*x,this._w=m*v*x-_*S*w;break;case"XZY":this._x=_*v*x-m*S*w,this._y=m*S*x-_*v*w,this._z=m*v*w+_*S*x,this._w=m*v*x+_*S*w;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+d)}return n===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,s=Math.sin(i);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],s=n[4],u=n[8],d=n[1],f=n[5],p=n[9],m=n[2],v=n[6],x=n[10],_=i+f+x;if(_>0){const S=.5/Math.sqrt(_+1);this._w=.25/S,this._x=(v-p)*S,this._y=(u-m)*S,this._z=(d-s)*S}else if(i>f&&i>x){const S=2*Math.sqrt(1+i-f-x);this._w=(v-p)/S,this._x=.25*S,this._y=(s+d)/S,this._z=(u+m)/S}else if(f>x){const S=2*Math.sqrt(1+f-i-x);this._w=(u-m)/S,this._x=(s+d)/S,this._y=.25*S,this._z=(p+v)/S}else{const S=2*Math.sqrt(1+x-i-f);this._w=(d-s)/S,this._x=(u+m)/S,this._y=(p+v)/S,this._z=.25*S}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(tn(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const s=Math.min(1,n/i);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,s=e._y,u=e._z,d=e._w,f=n._x,p=n._y,m=n._z,v=n._w;return this._x=i*v+d*f+s*m-u*p,this._y=s*v+d*p+u*f-i*m,this._z=u*v+d*m+i*p-s*f,this._w=d*v-i*f-s*p-u*m,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,s=this._y,u=this._z,d=this._w;let f=d*e._w+i*e._x+s*e._y+u*e._z;if(f<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,f=-f):this.copy(e),f>=1)return this._w=d,this._x=i,this._y=s,this._z=u,this;const p=1-f*f;if(p<=Number.EPSILON){const S=1-n;return this._w=S*d+n*this._w,this._x=S*i+n*this._x,this._y=S*s+n*this._y,this._z=S*u+n*this._z,this.normalize(),this}const m=Math.sqrt(p),v=Math.atan2(m,f),x=Math.sin((1-n)*v)/m,_=Math.sin(n*v)/m;return this._w=d*x+this._w*_,this._x=i*x+this._x*_,this._y=s*x+this._y*_,this._z=u*x+this._z*_,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=2*Math.PI*Math.random(),n=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),u=Math.sqrt(i);return this.set(s*Math.sin(e),s*Math.cos(e),u*Math.sin(n),u*Math.cos(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Pe{constructor(e=0,n=0,i=0){Pe.prototype.isVector3=!0,this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return this.applyQuaternion(Gx.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(Gx.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,s=this.z,u=e.elements;return this.x=u[0]*n+u[3]*i+u[6]*s,this.y=u[1]*n+u[4]*i+u[7]*s,this.z=u[2]*n+u[5]*i+u[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,u=e.elements,d=1/(u[3]*n+u[7]*i+u[11]*s+u[15]);return this.x=(u[0]*n+u[4]*i+u[8]*s+u[12])*d,this.y=(u[1]*n+u[5]*i+u[9]*s+u[13])*d,this.z=(u[2]*n+u[6]*i+u[10]*s+u[14])*d,this}applyQuaternion(e){const n=this.x,i=this.y,s=this.z,u=e.x,d=e.y,f=e.z,p=e.w,m=2*(d*s-f*i),v=2*(f*n-u*s),x=2*(u*i-d*n);return this.x=n+p*m+d*x-f*v,this.y=i+p*v+f*m-u*x,this.z=s+p*x+u*v-d*m,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,s=this.z,u=e.elements;return this.x=u[0]*n+u[4]*i+u[8]*s,this.y=u[1]*n+u[5]*i+u[9]*s,this.z=u[2]*n+u[6]*i+u[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=tn(this.x,e.x,n.x),this.y=tn(this.y,e.y,n.y),this.z=tn(this.z,e.z,n.z),this}clampScalar(e,n){return this.x=tn(this.x,e,n),this.y=tn(this.y,e,n),this.z=tn(this.z,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(tn(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,s=e.y,u=e.z,d=n.x,f=n.y,p=n.z;return this.x=s*p-u*f,this.y=u*d-i*p,this.z=i*f-s*d,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return vv.copy(this).projectOnVector(e),this.sub(vv)}reflect(e){return this.sub(vv.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(tn(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,s=this.z-e.z;return n*n+i*i+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const s=Math.sin(n)*e;return this.x=s*Math.sin(i),this.y=Math.cos(n)*e,this.z=s*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=s,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,n=Math.random()*2-1,i=Math.sqrt(1-n*n);return this.x=i*Math.cos(e),this.y=n,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const vv=new Pe,Gx=new Qh;class ep{constructor(e=new Pe(1/0,1/0,1/0),n=new Pe(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n+=3)this.expandByPoint(Pa.fromArray(e,n));return this}setFromBufferAttribute(e){this.makeEmpty();for(let n=0,i=e.count;n<i;n++)this.expandByPoint(Pa.fromBufferAttribute(e,n));return this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Pa.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const u=i.getAttribute("position");if(n===!0&&u!==void 0&&e.isInstancedMesh!==!0)for(let d=0,f=u.count;d<f;d++)e.isMesh===!0?e.getVertexPosition(d,Pa):Pa.fromBufferAttribute(u,d),Pa.applyMatrix4(e.matrixWorld),this.expandByPoint(Pa);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),up.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),up.copy(i.boundingBox)),up.applyMatrix4(e.matrixWorld),this.union(up)}const s=e.children;for(let u=0,d=s.length;u<d;u++)this.expandByObject(s[u],n);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Pa),Pa.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Nh),cp.subVectors(this.max,Nh),cc.subVectors(e.a,Nh),dc.subVectors(e.b,Nh),fc.subVectors(e.c,Nh),Ds.subVectors(dc,cc),Ls.subVectors(fc,dc),Du.subVectors(cc,fc);let n=[0,-Ds.z,Ds.y,0,-Ls.z,Ls.y,0,-Du.z,Du.y,Ds.z,0,-Ds.x,Ls.z,0,-Ls.x,Du.z,0,-Du.x,-Ds.y,Ds.x,0,-Ls.y,Ls.x,0,-Du.y,Du.x,0];return!_v(n,cc,dc,fc,cp)||(n=[1,0,0,0,1,0,0,0,1],!_v(n,cc,dc,fc,cp))?!1:(dp.crossVectors(Ds,Ls),n=[dp.x,dp.y,dp.z],_v(n,cc,dc,fc,cp))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Pa).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Pa).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(as[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),as[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),as[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),as[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),as[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),as[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),as[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),as[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(as),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const as=[new Pe,new Pe,new Pe,new Pe,new Pe,new Pe,new Pe,new Pe],Pa=new Pe,up=new ep,cc=new Pe,dc=new Pe,fc=new Pe,Ds=new Pe,Ls=new Pe,Du=new Pe,Nh=new Pe,cp=new Pe,dp=new Pe,Lu=new Pe;function _v(a,e,n,i,s){for(let u=0,d=a.length-3;u<=d;u+=3){Lu.fromArray(a,u);const f=s.x*Math.abs(Lu.x)+s.y*Math.abs(Lu.y)+s.z*Math.abs(Lu.z),p=e.dot(Lu),m=n.dot(Lu),v=i.dot(Lu);if(Math.max(-Math.max(p,m,v),Math.min(p,m,v))>f)return!1}return!0}const NE=new ep,Fh=new Pe,xv=new Pe;class nx{constructor(e=new Pe,n=-1){this.isSphere=!0,this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):NE.setFromPoints(e).getCenter(i);let s=0;for(let u=0,d=e.length;u<d;u++)s=Math.max(s,i.distanceToSquared(e[u]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Fh.subVectors(e,this.center);const n=Fh.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),s=(i-this.radius)*.5;this.center.addScaledVector(Fh,s/i),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(xv.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Fh.copy(e.center).add(xv)),this.expandByPoint(Fh.copy(e.center).sub(xv))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const os=new Pe,yv=new Pe,fp=new Pe,Us=new Pe,Sv=new Pe,hp=new Pe,Mv=new Pe;class FE{constructor(e=new Pe,n=new Pe(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,os)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=os.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(os.copy(this.origin).addScaledVector(this.direction,n),os.distanceToSquared(e))}distanceSqToSegment(e,n,i,s){yv.copy(e).add(n).multiplyScalar(.5),fp.copy(n).sub(e).normalize(),Us.copy(this.origin).sub(yv);const u=e.distanceTo(n)*.5,d=-this.direction.dot(fp),f=Us.dot(this.direction),p=-Us.dot(fp),m=Us.lengthSq(),v=Math.abs(1-d*d);let x,_,S,w;if(v>0)if(x=d*p-f,_=d*f-p,w=u*v,x>=0)if(_>=-w)if(_<=w){const b=1/v;x*=b,_*=b,S=x*(x+d*_+2*f)+_*(d*x+_+2*p)+m}else _=u,x=Math.max(0,-(d*_+f)),S=-x*x+_*(_+2*p)+m;else _=-u,x=Math.max(0,-(d*_+f)),S=-x*x+_*(_+2*p)+m;else _<=-w?(x=Math.max(0,-(-d*u+f)),_=x>0?-u:Math.min(Math.max(-u,-p),u),S=-x*x+_*(_+2*p)+m):_<=w?(x=0,_=Math.min(Math.max(-u,-p),u),S=_*(_+2*p)+m):(x=Math.max(0,-(d*u+f)),_=x>0?u:Math.min(Math.max(-u,-p),u),S=-x*x+_*(_+2*p)+m);else _=d>0?-u:u,x=Math.max(0,-(d*_+f)),S=-x*x+_*(_+2*p)+m;return i&&i.copy(this.origin).addScaledVector(this.direction,x),s&&s.copy(yv).addScaledVector(fp,_),S}intersectSphere(e,n){os.subVectors(e.center,this.origin);const i=os.dot(this.direction),s=os.dot(os)-i*i,u=e.radius*e.radius;if(s>u)return null;const d=Math.sqrt(u-s),f=i-d,p=i+d;return p<0?null:f<0?this.at(p,n):this.at(f,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,s,u,d,f,p;const m=1/this.direction.x,v=1/this.direction.y,x=1/this.direction.z,_=this.origin;return m>=0?(i=(e.min.x-_.x)*m,s=(e.max.x-_.x)*m):(i=(e.max.x-_.x)*m,s=(e.min.x-_.x)*m),v>=0?(u=(e.min.y-_.y)*v,d=(e.max.y-_.y)*v):(u=(e.max.y-_.y)*v,d=(e.min.y-_.y)*v),i>d||u>s||((u>i||isNaN(i))&&(i=u),(d<s||isNaN(s))&&(s=d),x>=0?(f=(e.min.z-_.z)*x,p=(e.max.z-_.z)*x):(f=(e.max.z-_.z)*x,p=(e.min.z-_.z)*x),i>p||f>s)||((f>i||i!==i)&&(i=f),(p<s||s!==s)&&(s=p),s<0)?null:this.at(i>=0?i:s,n)}intersectsBox(e){return this.intersectBox(e,os)!==null}intersectTriangle(e,n,i,s,u){Sv.subVectors(n,e),hp.subVectors(i,e),Mv.crossVectors(Sv,hp);let d=this.direction.dot(Mv),f;if(d>0){if(s)return null;f=1}else if(d<0)f=-1,d=-d;else return null;Us.subVectors(this.origin,e);const p=f*this.direction.dot(hp.crossVectors(Us,hp));if(p<0)return null;const m=f*this.direction.dot(Sv.cross(Us));if(m<0||p+m>d)return null;const v=-f*Us.dot(Mv);return v<0?null:this.at(v/d,u)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class nr{constructor(e,n,i,s,u,d,f,p,m,v,x,_,S,w,b,y){nr.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,n,i,s,u,d,f,p,m,v,x,_,S,w,b,y)}set(e,n,i,s,u,d,f,p,m,v,x,_,S,w,b,y){const g=this.elements;return g[0]=e,g[4]=n,g[8]=i,g[12]=s,g[1]=u,g[5]=d,g[9]=f,g[13]=p,g[2]=m,g[6]=v,g[10]=x,g[14]=_,g[3]=S,g[7]=w,g[11]=b,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new nr().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,s=1/hc.setFromMatrixColumn(e,0).length(),u=1/hc.setFromMatrixColumn(e,1).length(),d=1/hc.setFromMatrixColumn(e,2).length();return n[0]=i[0]*s,n[1]=i[1]*s,n[2]=i[2]*s,n[3]=0,n[4]=i[4]*u,n[5]=i[5]*u,n[6]=i[6]*u,n[7]=0,n[8]=i[8]*d,n[9]=i[9]*d,n[10]=i[10]*d,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){const n=this.elements,i=e.x,s=e.y,u=e.z,d=Math.cos(i),f=Math.sin(i),p=Math.cos(s),m=Math.sin(s),v=Math.cos(u),x=Math.sin(u);if(e.order==="XYZ"){const _=d*v,S=d*x,w=f*v,b=f*x;n[0]=p*v,n[4]=-p*x,n[8]=m,n[1]=S+w*m,n[5]=_-b*m,n[9]=-f*p,n[2]=b-_*m,n[6]=w+S*m,n[10]=d*p}else if(e.order==="YXZ"){const _=p*v,S=p*x,w=m*v,b=m*x;n[0]=_+b*f,n[4]=w*f-S,n[8]=d*m,n[1]=d*x,n[5]=d*v,n[9]=-f,n[2]=S*f-w,n[6]=b+_*f,n[10]=d*p}else if(e.order==="ZXY"){const _=p*v,S=p*x,w=m*v,b=m*x;n[0]=_-b*f,n[4]=-d*x,n[8]=w+S*f,n[1]=S+w*f,n[5]=d*v,n[9]=b-_*f,n[2]=-d*m,n[6]=f,n[10]=d*p}else if(e.order==="ZYX"){const _=d*v,S=d*x,w=f*v,b=f*x;n[0]=p*v,n[4]=w*m-S,n[8]=_*m+b,n[1]=p*x,n[5]=b*m+_,n[9]=S*m-w,n[2]=-m,n[6]=f*p,n[10]=d*p}else if(e.order==="YZX"){const _=d*p,S=d*m,w=f*p,b=f*m;n[0]=p*v,n[4]=b-_*x,n[8]=w*x+S,n[1]=x,n[5]=d*v,n[9]=-f*v,n[2]=-m*v,n[6]=S*x+w,n[10]=_-b*x}else if(e.order==="XZY"){const _=d*p,S=d*m,w=f*p,b=f*m;n[0]=p*v,n[4]=-x,n[8]=m*v,n[1]=_*x+b,n[5]=d*v,n[9]=S*x-w,n[2]=w*x-S,n[6]=f*v,n[10]=b*x+_}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(OE,e,kE)}lookAt(e,n,i){const s=this.elements;return Hi.subVectors(e,n),Hi.lengthSq()===0&&(Hi.z=1),Hi.normalize(),Is.crossVectors(i,Hi),Is.lengthSq()===0&&(Math.abs(i.z)===1?Hi.x+=1e-4:Hi.z+=1e-4,Hi.normalize(),Is.crossVectors(i,Hi)),Is.normalize(),pp.crossVectors(Hi,Is),s[0]=Is.x,s[4]=pp.x,s[8]=Hi.x,s[1]=Is.y,s[5]=pp.y,s[9]=Hi.y,s[2]=Is.z,s[6]=pp.z,s[10]=Hi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,u=this.elements,d=i[0],f=i[4],p=i[8],m=i[12],v=i[1],x=i[5],_=i[9],S=i[13],w=i[2],b=i[6],y=i[10],g=i[14],I=i[3],L=i[7],C=i[11],X=i[15],k=s[0],F=s[4],j=s[8],R=s[12],A=s[1],V=s[5],ie=s[9],ee=s[13],se=s[2],he=s[6],oe=s[10],ue=s[14],B=s[3],ae=s[7],re=s[11],U=s[15];return u[0]=d*k+f*A+p*se+m*B,u[4]=d*F+f*V+p*he+m*ae,u[8]=d*j+f*ie+p*oe+m*re,u[12]=d*R+f*ee+p*ue+m*U,u[1]=v*k+x*A+_*se+S*B,u[5]=v*F+x*V+_*he+S*ae,u[9]=v*j+x*ie+_*oe+S*re,u[13]=v*R+x*ee+_*ue+S*U,u[2]=w*k+b*A+y*se+g*B,u[6]=w*F+b*V+y*he+g*ae,u[10]=w*j+b*ie+y*oe+g*re,u[14]=w*R+b*ee+y*ue+g*U,u[3]=I*k+L*A+C*se+X*B,u[7]=I*F+L*V+C*he+X*ae,u[11]=I*j+L*ie+C*oe+X*re,u[15]=I*R+L*ee+C*ue+X*U,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],s=e[8],u=e[12],d=e[1],f=e[5],p=e[9],m=e[13],v=e[2],x=e[6],_=e[10],S=e[14],w=e[3],b=e[7],y=e[11],g=e[15];return w*(+u*p*x-s*m*x-u*f*_+i*m*_+s*f*S-i*p*S)+b*(+n*p*S-n*m*_+u*d*_-s*d*S+s*m*v-u*p*v)+y*(+n*m*x-n*f*S-u*d*x+i*d*S+u*f*v-i*m*v)+g*(-s*f*v-n*p*x+n*f*_+s*d*x-i*d*_+i*p*v)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=n,s[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],u=e[3],d=e[4],f=e[5],p=e[6],m=e[7],v=e[8],x=e[9],_=e[10],S=e[11],w=e[12],b=e[13],y=e[14],g=e[15],I=x*y*m-b*_*m+b*p*S-f*y*S-x*p*g+f*_*g,L=w*_*m-v*y*m-w*p*S+d*y*S+v*p*g-d*_*g,C=v*b*m-w*x*m+w*f*S-d*b*S-v*f*g+d*x*g,X=w*x*p-v*b*p-w*f*_+d*b*_+v*f*y-d*x*y,k=n*I+i*L+s*C+u*X;if(k===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const F=1/k;return e[0]=I*F,e[1]=(b*_*u-x*y*u-b*s*S+i*y*S+x*s*g-i*_*g)*F,e[2]=(f*y*u-b*p*u+b*s*m-i*y*m-f*s*g+i*p*g)*F,e[3]=(x*p*u-f*_*u-x*s*m+i*_*m+f*s*S-i*p*S)*F,e[4]=L*F,e[5]=(v*y*u-w*_*u+w*s*S-n*y*S-v*s*g+n*_*g)*F,e[6]=(w*p*u-d*y*u-w*s*m+n*y*m+d*s*g-n*p*g)*F,e[7]=(d*_*u-v*p*u+v*s*m-n*_*m-d*s*S+n*p*S)*F,e[8]=C*F,e[9]=(w*x*u-v*b*u-w*i*S+n*b*S+v*i*g-n*x*g)*F,e[10]=(d*b*u-w*f*u+w*i*m-n*b*m-d*i*g+n*f*g)*F,e[11]=(v*f*u-d*x*u-v*i*m+n*x*m+d*i*S-n*f*S)*F,e[12]=X*F,e[13]=(v*b*s-w*x*s+w*i*_-n*b*_-v*i*y+n*x*y)*F,e[14]=(w*f*s-d*b*s-w*i*p+n*b*p+d*i*y-n*f*y)*F,e[15]=(d*x*s-v*f*s+v*i*p-n*x*p-d*i*_+n*f*_)*F,this}scale(e){const n=this.elements,i=e.x,s=e.y,u=e.z;return n[0]*=i,n[4]*=s,n[8]*=u,n[1]*=i,n[5]*=s,n[9]*=u,n[2]*=i,n[6]*=s,n[10]*=u,n[3]*=i,n[7]*=s,n[11]*=u,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,s))}makeTranslation(e,n,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),s=Math.sin(n),u=1-i,d=e.x,f=e.y,p=e.z,m=u*d,v=u*f;return this.set(m*d+i,m*f-s*p,m*p+s*f,0,m*f+s*p,v*f+i,v*p-s*d,0,m*p-s*f,v*p+s*d,u*p*p+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,s,u,d){return this.set(1,i,u,0,e,1,d,0,n,s,1,0,0,0,0,1),this}compose(e,n,i){const s=this.elements,u=n._x,d=n._y,f=n._z,p=n._w,m=u+u,v=d+d,x=f+f,_=u*m,S=u*v,w=u*x,b=d*v,y=d*x,g=f*x,I=p*m,L=p*v,C=p*x,X=i.x,k=i.y,F=i.z;return s[0]=(1-(b+g))*X,s[1]=(S+C)*X,s[2]=(w-L)*X,s[3]=0,s[4]=(S-C)*k,s[5]=(1-(_+g))*k,s[6]=(y+I)*k,s[7]=0,s[8]=(w+L)*F,s[9]=(y-I)*F,s[10]=(1-(_+b))*F,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,n,i){const s=this.elements;let u=hc.set(s[0],s[1],s[2]).length();const d=hc.set(s[4],s[5],s[6]).length(),f=hc.set(s[8],s[9],s[10]).length();this.determinant()<0&&(u=-u),e.x=s[12],e.y=s[13],e.z=s[14],Da.copy(this);const m=1/u,v=1/d,x=1/f;return Da.elements[0]*=m,Da.elements[1]*=m,Da.elements[2]*=m,Da.elements[4]*=v,Da.elements[5]*=v,Da.elements[6]*=v,Da.elements[8]*=x,Da.elements[9]*=x,Da.elements[10]*=x,n.setFromRotationMatrix(Da),i.x=u,i.y=d,i.z=f,this}makePerspective(e,n,i,s,u,d,f=ys){const p=this.elements,m=2*u/(n-e),v=2*u/(i-s),x=(n+e)/(n-e),_=(i+s)/(i-s);let S,w;if(f===ys)S=-(d+u)/(d-u),w=-2*d*u/(d-u);else if(f===pm)S=-d/(d-u),w=-d*u/(d-u);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+f);return p[0]=m,p[4]=0,p[8]=x,p[12]=0,p[1]=0,p[5]=v,p[9]=_,p[13]=0,p[2]=0,p[6]=0,p[10]=S,p[14]=w,p[3]=0,p[7]=0,p[11]=-1,p[15]=0,this}makeOrthographic(e,n,i,s,u,d,f=ys){const p=this.elements,m=1/(n-e),v=1/(i-s),x=1/(d-u),_=(n+e)*m,S=(i+s)*v;let w,b;if(f===ys)w=(d+u)*x,b=-2*x;else if(f===pm)w=u*x,b=-1*x;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+f);return p[0]=2*m,p[4]=0,p[8]=0,p[12]=-_,p[1]=0,p[5]=2*v,p[9]=0,p[13]=-S,p[2]=0,p[6]=0,p[10]=b,p[14]=-w,p[3]=0,p[7]=0,p[11]=0,p[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<16;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const hc=new Pe,Da=new nr,OE=new Pe(0,0,0),kE=new Pe(1,1,1),Is=new Pe,pp=new Pe,Hi=new Pe,Wx=new nr,Xx=new Qh;class As{constructor(e=0,n=0,i=0,s=As.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,s=this._order){return this._x=e,this._y=n,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const s=e.elements,u=s[0],d=s[4],f=s[8],p=s[1],m=s[5],v=s[9],x=s[2],_=s[6],S=s[10];switch(n){case"XYZ":this._y=Math.asin(tn(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(-v,S),this._z=Math.atan2(-d,u)):(this._x=Math.atan2(_,m),this._z=0);break;case"YXZ":this._x=Math.asin(-tn(v,-1,1)),Math.abs(v)<.9999999?(this._y=Math.atan2(f,S),this._z=Math.atan2(p,m)):(this._y=Math.atan2(-x,u),this._z=0);break;case"ZXY":this._x=Math.asin(tn(_,-1,1)),Math.abs(_)<.9999999?(this._y=Math.atan2(-x,S),this._z=Math.atan2(-d,m)):(this._y=0,this._z=Math.atan2(p,u));break;case"ZYX":this._y=Math.asin(-tn(x,-1,1)),Math.abs(x)<.9999999?(this._x=Math.atan2(_,S),this._z=Math.atan2(p,u)):(this._x=0,this._z=Math.atan2(-d,m));break;case"YZX":this._z=Math.asin(tn(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(-v,m),this._y=Math.atan2(-x,u)):(this._x=0,this._y=Math.atan2(f,S));break;case"XZY":this._z=Math.asin(-tn(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(_,m),this._y=Math.atan2(f,u)):(this._x=Math.atan2(-v,S),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return Wx.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Wx,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return Xx.setFromEuler(this),this.setFromQuaternion(Xx,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}As.DEFAULT_ORDER="XYZ";class u1{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let zE=0;const jx=new Pe,pc=new Qh,ss=new nr,mp=new Pe,Oh=new Pe,BE=new Pe,HE=new Qh,qx=new Pe(1,0,0),Yx=new Pe(0,1,0),$x=new Pe(0,0,1),Kx={type:"added"},VE={type:"removed"},mc={type:"childadded",child:null},Ev={type:"childremoved",child:null};class Xi extends od{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:zE++}),this.uuid=Jh(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xi.DEFAULT_UP.clone();const e=new Pe,n=new As,i=new Qh,s=new Pe(1,1,1);function u(){i.setFromEuler(n,!1)}function d(){n.setFromQuaternion(i,void 0,!1)}n._onChange(u),i._onChange(d),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new nr},normalMatrix:{value:new Bt}}),this.matrix=new nr,this.matrixWorld=new nr,this.matrixAutoUpdate=Xi.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Xi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new u1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return pc.setFromAxisAngle(e,n),this.quaternion.multiply(pc),this}rotateOnWorldAxis(e,n){return pc.setFromAxisAngle(e,n),this.quaternion.premultiply(pc),this}rotateX(e){return this.rotateOnAxis(qx,e)}rotateY(e){return this.rotateOnAxis(Yx,e)}rotateZ(e){return this.rotateOnAxis($x,e)}translateOnAxis(e,n){return jx.copy(e).applyQuaternion(this.quaternion),this.position.add(jx.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(qx,e)}translateY(e){return this.translateOnAxis(Yx,e)}translateZ(e){return this.translateOnAxis($x,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ss.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?mp.copy(e):mp.set(e,n,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Oh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ss.lookAt(Oh,mp,this.up):ss.lookAt(mp,Oh,this.up),this.quaternion.setFromRotationMatrix(ss),s&&(ss.extractRotation(s.matrixWorld),pc.setFromRotationMatrix(ss),this.quaternion.premultiply(pc.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Kx),mc.child=e,this.dispatchEvent(mc),mc.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(VE),Ev.child=e,this.dispatchEvent(Ev),Ev.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),ss.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ss.multiply(e.parent.matrixWorld)),e.applyMatrix4(ss),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Kx),mc.child=e,this.dispatchEvent(mc),mc.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,s=this.children.length;i<s;i++){const d=this.children[i].getObjectByProperty(e,n);if(d!==void 0)return d}}getObjectsByProperty(e,n,i=[]){this[e]===n&&i.push(this);const s=this.children;for(let u=0,d=s.length;u<d;u++)s[u].getObjectsByProperty(e,n,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Oh,e,BE),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Oh,HE,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].updateMatrixWorld(e)}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),n===!0){const s=this.children;for(let u=0,d=s.length;u<d;u++)s[u].updateWorldMatrix(!1,!0)}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(f=>({boxInitialized:f.boxInitialized,boxMin:f.box.min.toArray(),boxMax:f.box.max.toArray(),sphereInitialized:f.sphereInitialized,sphereRadius:f.sphere.radius,sphereCenter:f.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function u(f,p){return f[p.uuid]===void 0&&(f[p.uuid]=p.toJSON(e)),p.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=u(e.geometries,this.geometry);const f=this.geometry.parameters;if(f!==void 0&&f.shapes!==void 0){const p=f.shapes;if(Array.isArray(p))for(let m=0,v=p.length;m<v;m++){const x=p[m];u(e.shapes,x)}else u(e.shapes,p)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(u(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const f=[];for(let p=0,m=this.material.length;p<m;p++)f.push(u(e.materials,this.material[p]));s.material=f}else s.material=u(e.materials,this.material);if(this.children.length>0){s.children=[];for(let f=0;f<this.children.length;f++)s.children.push(this.children[f].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let f=0;f<this.animations.length;f++){const p=this.animations[f];s.animations.push(u(e.animations,p))}}if(n){const f=d(e.geometries),p=d(e.materials),m=d(e.textures),v=d(e.images),x=d(e.shapes),_=d(e.skeletons),S=d(e.animations),w=d(e.nodes);f.length>0&&(i.geometries=f),p.length>0&&(i.materials=p),m.length>0&&(i.textures=m),v.length>0&&(i.images=v),x.length>0&&(i.shapes=x),_.length>0&&(i.skeletons=_),S.length>0&&(i.animations=S),w.length>0&&(i.nodes=w)}return i.object=s,i;function d(f){const p=[];for(const m in f){const v=f[m];delete v.metadata,p.push(v)}return p}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const s=e.children[i];this.add(s.clone())}return this}}Xi.DEFAULT_UP=new Pe(0,1,0);Xi.DEFAULT_MATRIX_AUTO_UPDATE=!0;Xi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const La=new Pe,ls=new Pe,Tv=new Pe,us=new Pe,gc=new Pe,vc=new Pe,Zx=new Pe,wv=new Pe,bv=new Pe,Av=new Pe,Rv=new Jn,Cv=new Jn,Pv=new Jn;class Fa{constructor(e=new Pe,n=new Pe,i=new Pe){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,s){s.subVectors(i,n),La.subVectors(e,n),s.cross(La);const u=s.lengthSq();return u>0?s.multiplyScalar(1/Math.sqrt(u)):s.set(0,0,0)}static getBarycoord(e,n,i,s,u){La.subVectors(s,n),ls.subVectors(i,n),Tv.subVectors(e,n);const d=La.dot(La),f=La.dot(ls),p=La.dot(Tv),m=ls.dot(ls),v=ls.dot(Tv),x=d*m-f*f;if(x===0)return u.set(0,0,0),null;const _=1/x,S=(m*p-f*v)*_,w=(d*v-f*p)*_;return u.set(1-S-w,w,S)}static containsPoint(e,n,i,s){return this.getBarycoord(e,n,i,s,us)===null?!1:us.x>=0&&us.y>=0&&us.x+us.y<=1}static getInterpolation(e,n,i,s,u,d,f,p){return this.getBarycoord(e,n,i,s,us)===null?(p.x=0,p.y=0,"z"in p&&(p.z=0),"w"in p&&(p.w=0),null):(p.setScalar(0),p.addScaledVector(u,us.x),p.addScaledVector(d,us.y),p.addScaledVector(f,us.z),p)}static getInterpolatedAttribute(e,n,i,s,u,d){return Rv.setScalar(0),Cv.setScalar(0),Pv.setScalar(0),Rv.fromBufferAttribute(e,n),Cv.fromBufferAttribute(e,i),Pv.fromBufferAttribute(e,s),d.setScalar(0),d.addScaledVector(Rv,u.x),d.addScaledVector(Cv,u.y),d.addScaledVector(Pv,u.z),d}static isFrontFacing(e,n,i,s){return La.subVectors(i,n),ls.subVectors(e,n),La.cross(ls).dot(s)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,s){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,n,i,s){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return La.subVectors(this.c,this.b),ls.subVectors(this.a,this.b),La.cross(ls).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Fa.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return Fa.getBarycoord(e,this.a,this.b,this.c,n)}getInterpolation(e,n,i,s,u){return Fa.getInterpolation(e,this.a,this.b,this.c,n,i,s,u)}containsPoint(e){return Fa.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Fa.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,s=this.b,u=this.c;let d,f;gc.subVectors(s,i),vc.subVectors(u,i),wv.subVectors(e,i);const p=gc.dot(wv),m=vc.dot(wv);if(p<=0&&m<=0)return n.copy(i);bv.subVectors(e,s);const v=gc.dot(bv),x=vc.dot(bv);if(v>=0&&x<=v)return n.copy(s);const _=p*x-v*m;if(_<=0&&p>=0&&v<=0)return d=p/(p-v),n.copy(i).addScaledVector(gc,d);Av.subVectors(e,u);const S=gc.dot(Av),w=vc.dot(Av);if(w>=0&&S<=w)return n.copy(u);const b=S*m-p*w;if(b<=0&&m>=0&&w<=0)return f=m/(m-w),n.copy(i).addScaledVector(vc,f);const y=v*w-S*x;if(y<=0&&x-v>=0&&S-w>=0)return Zx.subVectors(u,s),f=(x-v)/(x-v+(S-w)),n.copy(s).addScaledVector(Zx,f);const g=1/(y+b+_);return d=b*g,f=_*g,n.copy(i).addScaledVector(gc,d).addScaledVector(vc,f)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const c1={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ns={h:0,s:0,l:0},gp={h:0,s:0,l:0};function Dv(a,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?a+(e-a)*6*n:n<1/2?e:n<2/3?a+(e-a)*6*(2/3-n):a}class bn{constructor(e,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,n,i)}set(e,n,i){if(n===void 0&&i===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,n,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=$i){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,un.toWorkingColorSpace(this,n),this}setRGB(e,n,i,s=un.workingColorSpace){return this.r=e,this.g=n,this.b=i,un.toWorkingColorSpace(this,s),this}setHSL(e,n,i,s=un.workingColorSpace){if(e=TE(e,1),n=tn(n,0,1),i=tn(i,0,1),n===0)this.r=this.g=this.b=i;else{const u=i<=.5?i*(1+n):i+n-i*n,d=2*i-u;this.r=Dv(d,u,e+1/3),this.g=Dv(d,u,e),this.b=Dv(d,u,e-1/3)}return un.toWorkingColorSpace(this,s),this}setStyle(e,n=$i){function i(u){u!==void 0&&parseFloat(u)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let u;const d=s[1],f=s[2];switch(d){case"rgb":case"rgba":if(u=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return i(u[4]),this.setRGB(Math.min(255,parseInt(u[1],10))/255,Math.min(255,parseInt(u[2],10))/255,Math.min(255,parseInt(u[3],10))/255,n);if(u=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return i(u[4]),this.setRGB(Math.min(100,parseInt(u[1],10))/100,Math.min(100,parseInt(u[2],10))/100,Math.min(100,parseInt(u[3],10))/100,n);break;case"hsl":case"hsla":if(u=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return i(u[4]),this.setHSL(parseFloat(u[1])/360,parseFloat(u[2])/100,parseFloat(u[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const u=s[1],d=u.length;if(d===3)return this.setRGB(parseInt(u.charAt(0),16)/15,parseInt(u.charAt(1),16)/15,parseInt(u.charAt(2),16)/15,n);if(d===6)return this.setHex(parseInt(u,16),n);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,n);return this}setColorName(e,n=$i){const i=c1[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Es(e.r),this.g=Es(e.g),this.b=Es(e.b),this}copyLinearToSRGB(e){return this.r=Vc(e.r),this.g=Vc(e.g),this.b=Vc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=$i){return un.fromWorkingColorSpace(Vr.copy(this),e),Math.round(tn(Vr.r*255,0,255))*65536+Math.round(tn(Vr.g*255,0,255))*256+Math.round(tn(Vr.b*255,0,255))}getHexString(e=$i){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=un.workingColorSpace){un.fromWorkingColorSpace(Vr.copy(this),n);const i=Vr.r,s=Vr.g,u=Vr.b,d=Math.max(i,s,u),f=Math.min(i,s,u);let p,m;const v=(f+d)/2;if(f===d)p=0,m=0;else{const x=d-f;switch(m=v<=.5?x/(d+f):x/(2-d-f),d){case i:p=(s-u)/x+(s<u?6:0);break;case s:p=(u-i)/x+2;break;case u:p=(i-s)/x+4;break}p/=6}return e.h=p,e.s=m,e.l=v,e}getRGB(e,n=un.workingColorSpace){return un.fromWorkingColorSpace(Vr.copy(this),n),e.r=Vr.r,e.g=Vr.g,e.b=Vr.b,e}getStyle(e=$i){un.fromWorkingColorSpace(Vr.copy(this),e);const n=Vr.r,i=Vr.g,s=Vr.b;return e!==$i?`color(${e} ${n.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(e,n,i){return this.getHSL(Ns),this.setHSL(Ns.h+e,Ns.s+n,Ns.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(Ns),e.getHSL(gp);const i=pv(Ns.h,gp.h,n),s=pv(Ns.s,gp.s,n),u=pv(Ns.l,gp.l,n);return this.setHSL(i,s,u),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const n=this.r,i=this.g,s=this.b,u=e.elements;return this.r=u[0]*n+u[3]*i+u[6]*s,this.g=u[1]*n+u[4]*i+u[7]*s,this.b=u[2]*n+u[5]*i+u[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Vr=new bn;bn.NAMES=c1;let GE=0;class Mm extends od{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:GE++}),this.uuid=Jh(),this.name="",this.type="Material",this.blending=Bc,this.side=$s,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=x_,this.blendDst=y_,this.blendEquation=qu,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new bn(0,0,0),this.blendAlpha=0,this.depthFunc=jc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ox,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=lc,this.stencilZFail=lc,this.stencilZPass=lc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const s=this[n];if(s===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Bc&&(i.blending=this.blending),this.side!==$s&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==x_&&(i.blendSrc=this.blendSrc),this.blendDst!==y_&&(i.blendDst=this.blendDst),this.blendEquation!==qu&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==jc&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Ox&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==lc&&(i.stencilFail=this.stencilFail),this.stencilZFail!==lc&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==lc&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(u){const d=[];for(const f in u){const p=u[f];delete p.metadata,d.push(p)}return d}if(n){const u=s(e.textures),d=s(e.images);u.length>0&&(i.textures=u),d.length>0&&(i.images=d)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const s=n.length;i=new Array(s);for(let u=0;u!==s;++u)i[u]=n[u].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class rx extends Mm{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new bn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new As,this.combine=qS,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const er=new Pe,vp=new Ln;class Ya{constructor(e,n,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i,this.usage=kx,this.updateRanges=[],this.gpuType=xs,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let s=0,u=this.itemSize;s<u;s++)this.array[e+s]=n.array[i+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)vp.fromBufferAttribute(this,n),vp.applyMatrix3(e),this.setXY(n,vp.x,vp.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)er.fromBufferAttribute(this,n),er.applyMatrix3(e),this.setXYZ(n,er.x,er.y,er.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)er.fromBufferAttribute(this,n),er.applyMatrix4(e),this.setXYZ(n,er.x,er.y,er.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)er.fromBufferAttribute(this,n),er.applyNormalMatrix(e),this.setXYZ(n,er.x,er.y,er.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)er.fromBufferAttribute(this,n),er.transformDirection(e),this.setXYZ(n,er.x,er.y,er.z);return this}set(e,n=0){return this.array.set(e,n),this}getComponent(e,n){let i=this.array[e*this.itemSize+n];return this.normalized&&(i=Ih(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=ci(i,this.array)),this.array[e*this.itemSize+n]=i,this}getX(e){let n=this.array[e*this.itemSize];return this.normalized&&(n=Ih(n,this.array)),n}setX(e,n){return this.normalized&&(n=ci(n,this.array)),this.array[e*this.itemSize]=n,this}getY(e){let n=this.array[e*this.itemSize+1];return this.normalized&&(n=Ih(n,this.array)),n}setY(e,n){return this.normalized&&(n=ci(n,this.array)),this.array[e*this.itemSize+1]=n,this}getZ(e){let n=this.array[e*this.itemSize+2];return this.normalized&&(n=Ih(n,this.array)),n}setZ(e,n){return this.normalized&&(n=ci(n,this.array)),this.array[e*this.itemSize+2]=n,this}getW(e){let n=this.array[e*this.itemSize+3];return this.normalized&&(n=Ih(n,this.array)),n}setW(e,n){return this.normalized&&(n=ci(n,this.array)),this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=ci(n,this.array),i=ci(i,this.array)),this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,s){return e*=this.itemSize,this.normalized&&(n=ci(n,this.array),i=ci(i,this.array),s=ci(s,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this}setXYZW(e,n,i,s,u){return e*=this.itemSize,this.normalized&&(n=ci(n,this.array),i=ci(i,this.array),s=ci(s,this.array),u=ci(u,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this.array[e+3]=u,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==kx&&(e.usage=this.usage),e}}class d1 extends Ya{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class f1 extends Ya{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class $a extends Ya{constructor(e,n,i){super(new Float32Array(e),n,i)}}let WE=0;const qi=new nr,Lv=new Xi,_c=new Pe,Vi=new ep,kh=new ep,_r=new Pe;class Qs extends od{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:WE++}),this.uuid=Jh(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(o1(e)?f1:d1)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const u=new Bt().getNormalMatrix(e);i.applyNormalMatrix(u),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return qi.makeRotationFromQuaternion(e),this.applyMatrix4(qi),this}rotateX(e){return qi.makeRotationX(e),this.applyMatrix4(qi),this}rotateY(e){return qi.makeRotationY(e),this.applyMatrix4(qi),this}rotateZ(e){return qi.makeRotationZ(e),this.applyMatrix4(qi),this}translate(e,n,i){return qi.makeTranslation(e,n,i),this.applyMatrix4(qi),this}scale(e,n,i){return qi.makeScale(e,n,i),this.applyMatrix4(qi),this}lookAt(e){return Lv.lookAt(e),Lv.updateMatrix(),this.applyMatrix4(Lv.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(_c).negate(),this.translate(_c.x,_c.y,_c.z),this}setFromPoints(e){const n=this.getAttribute("position");if(n===void 0){const i=[];for(let s=0,u=e.length;s<u;s++){const d=e[s];i.push(d.x,d.y,d.z||0)}this.setAttribute("position",new $a(i,3))}else{const i=Math.min(e.length,n.count);for(let s=0;s<i;s++){const u=e[s];n.setXYZ(s,u.x,u.y,u.z||0)}e.length>n.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),n.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ep);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new Pe(-1/0,-1/0,-1/0),new Pe(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,s=n.length;i<s;i++){const u=n[i];Vi.setFromBufferAttribute(u),this.morphTargetsRelative?(_r.addVectors(this.boundingBox.min,Vi.min),this.boundingBox.expandByPoint(_r),_r.addVectors(this.boundingBox.max,Vi.max),this.boundingBox.expandByPoint(_r)):(this.boundingBox.expandByPoint(Vi.min),this.boundingBox.expandByPoint(Vi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new nx);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new Pe,1/0);return}if(e){const i=this.boundingSphere.center;if(Vi.setFromBufferAttribute(e),n)for(let u=0,d=n.length;u<d;u++){const f=n[u];kh.setFromBufferAttribute(f),this.morphTargetsRelative?(_r.addVectors(Vi.min,kh.min),Vi.expandByPoint(_r),_r.addVectors(Vi.max,kh.max),Vi.expandByPoint(_r)):(Vi.expandByPoint(kh.min),Vi.expandByPoint(kh.max))}Vi.getCenter(i);let s=0;for(let u=0,d=e.count;u<d;u++)_r.fromBufferAttribute(e,u),s=Math.max(s,i.distanceToSquared(_r));if(n)for(let u=0,d=n.length;u<d;u++){const f=n[u],p=this.morphTargetsRelative;for(let m=0,v=f.count;m<v;m++)_r.fromBufferAttribute(f,m),p&&(_c.fromBufferAttribute(e,m),_r.add(_c)),s=Math.max(s,i.distanceToSquared(_r))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=n.position,s=n.normal,u=n.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ya(new Float32Array(4*i.count),4));const d=this.getAttribute("tangent"),f=[],p=[];for(let j=0;j<i.count;j++)f[j]=new Pe,p[j]=new Pe;const m=new Pe,v=new Pe,x=new Pe,_=new Ln,S=new Ln,w=new Ln,b=new Pe,y=new Pe;function g(j,R,A){m.fromBufferAttribute(i,j),v.fromBufferAttribute(i,R),x.fromBufferAttribute(i,A),_.fromBufferAttribute(u,j),S.fromBufferAttribute(u,R),w.fromBufferAttribute(u,A),v.sub(m),x.sub(m),S.sub(_),w.sub(_);const V=1/(S.x*w.y-w.x*S.y);isFinite(V)&&(b.copy(v).multiplyScalar(w.y).addScaledVector(x,-S.y).multiplyScalar(V),y.copy(x).multiplyScalar(S.x).addScaledVector(v,-w.x).multiplyScalar(V),f[j].add(b),f[R].add(b),f[A].add(b),p[j].add(y),p[R].add(y),p[A].add(y))}let I=this.groups;I.length===0&&(I=[{start:0,count:e.count}]);for(let j=0,R=I.length;j<R;++j){const A=I[j],V=A.start,ie=A.count;for(let ee=V,se=V+ie;ee<se;ee+=3)g(e.getX(ee+0),e.getX(ee+1),e.getX(ee+2))}const L=new Pe,C=new Pe,X=new Pe,k=new Pe;function F(j){X.fromBufferAttribute(s,j),k.copy(X);const R=f[j];L.copy(R),L.sub(X.multiplyScalar(X.dot(R))).normalize(),C.crossVectors(k,R);const V=C.dot(p[j])<0?-1:1;d.setXYZW(j,L.x,L.y,L.z,V)}for(let j=0,R=I.length;j<R;++j){const A=I[j],V=A.start,ie=A.count;for(let ee=V,se=V+ie;ee<se;ee+=3)F(e.getX(ee+0)),F(e.getX(ee+1)),F(e.getX(ee+2))}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ya(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let _=0,S=i.count;_<S;_++)i.setXYZ(_,0,0,0);const s=new Pe,u=new Pe,d=new Pe,f=new Pe,p=new Pe,m=new Pe,v=new Pe,x=new Pe;if(e)for(let _=0,S=e.count;_<S;_+=3){const w=e.getX(_+0),b=e.getX(_+1),y=e.getX(_+2);s.fromBufferAttribute(n,w),u.fromBufferAttribute(n,b),d.fromBufferAttribute(n,y),v.subVectors(d,u),x.subVectors(s,u),v.cross(x),f.fromBufferAttribute(i,w),p.fromBufferAttribute(i,b),m.fromBufferAttribute(i,y),f.add(v),p.add(v),m.add(v),i.setXYZ(w,f.x,f.y,f.z),i.setXYZ(b,p.x,p.y,p.z),i.setXYZ(y,m.x,m.y,m.z)}else for(let _=0,S=n.count;_<S;_+=3)s.fromBufferAttribute(n,_+0),u.fromBufferAttribute(n,_+1),d.fromBufferAttribute(n,_+2),v.subVectors(d,u),x.subVectors(s,u),v.cross(x),i.setXYZ(_+0,v.x,v.y,v.z),i.setXYZ(_+1,v.x,v.y,v.z),i.setXYZ(_+2,v.x,v.y,v.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)_r.fromBufferAttribute(e,n),_r.normalize(),e.setXYZ(n,_r.x,_r.y,_r.z)}toNonIndexed(){function e(f,p){const m=f.array,v=f.itemSize,x=f.normalized,_=new m.constructor(p.length*v);let S=0,w=0;for(let b=0,y=p.length;b<y;b++){f.isInterleavedBufferAttribute?S=p[b]*f.data.stride+f.offset:S=p[b]*v;for(let g=0;g<v;g++)_[w++]=m[S++]}return new Ya(_,v,x)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new Qs,i=this.index.array,s=this.attributes;for(const f in s){const p=s[f],m=e(p,i);n.setAttribute(f,m)}const u=this.morphAttributes;for(const f in u){const p=[],m=u[f];for(let v=0,x=m.length;v<x;v++){const _=m[v],S=e(_,i);p.push(S)}n.morphAttributes[f]=p}n.morphTargetsRelative=this.morphTargetsRelative;const d=this.groups;for(let f=0,p=d.length;f<p;f++){const m=d[f];n.addGroup(m.start,m.count,m.materialIndex)}return n}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const p=this.parameters;for(const m in p)p[m]!==void 0&&(e[m]=p[m]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const p in i){const m=i[p];e.data.attributes[p]=m.toJSON(e.data)}const s={};let u=!1;for(const p in this.morphAttributes){const m=this.morphAttributes[p],v=[];for(let x=0,_=m.length;x<_;x++){const S=m[x];v.push(S.toJSON(e.data))}v.length>0&&(s[p]=v,u=!0)}u&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const d=this.groups;d.length>0&&(e.data.groups=JSON.parse(JSON.stringify(d)));const f=this.boundingSphere;return f!==null&&(e.data.boundingSphere={center:f.center.toArray(),radius:f.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(n));const s=e.attributes;for(const m in s){const v=s[m];this.setAttribute(m,v.clone(n))}const u=e.morphAttributes;for(const m in u){const v=[],x=u[m];for(let _=0,S=x.length;_<S;_++)v.push(x[_].clone(n));this.morphAttributes[m]=v}this.morphTargetsRelative=e.morphTargetsRelative;const d=e.groups;for(let m=0,v=d.length;m<v;m++){const x=d[m];this.addGroup(x.start,x.count,x.materialIndex)}const f=e.boundingBox;f!==null&&(this.boundingBox=f.clone());const p=e.boundingSphere;return p!==null&&(this.boundingSphere=p.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Jx=new nr,Uu=new FE,_p=new nx,Qx=new Pe,xp=new Pe,yp=new Pe,Sp=new Pe,Uv=new Pe,Mp=new Pe,ey=new Pe,Ep=new Pe;class Xa extends Xi{constructor(e=new Qs,n=new rx){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let u=0,d=s.length;u<d;u++){const f=s[u].name||String(u);this.morphTargetInfluences.push(0),this.morphTargetDictionary[f]=u}}}}getVertexPosition(e,n){const i=this.geometry,s=i.attributes.position,u=i.morphAttributes.position,d=i.morphTargetsRelative;n.fromBufferAttribute(s,e);const f=this.morphTargetInfluences;if(u&&f){Mp.set(0,0,0);for(let p=0,m=u.length;p<m;p++){const v=f[p],x=u[p];v!==0&&(Uv.fromBufferAttribute(x,e),d?Mp.addScaledVector(Uv,v):Mp.addScaledVector(Uv.sub(n),v))}n.add(Mp)}return n}raycast(e,n){const i=this.geometry,s=this.material,u=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),_p.copy(i.boundingSphere),_p.applyMatrix4(u),Uu.copy(e.ray).recast(e.near),!(_p.containsPoint(Uu.origin)===!1&&(Uu.intersectSphere(_p,Qx)===null||Uu.origin.distanceToSquared(Qx)>(e.far-e.near)**2))&&(Jx.copy(u).invert(),Uu.copy(e.ray).applyMatrix4(Jx),!(i.boundingBox!==null&&Uu.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,n,Uu)))}_computeIntersections(e,n,i){let s;const u=this.geometry,d=this.material,f=u.index,p=u.attributes.position,m=u.attributes.uv,v=u.attributes.uv1,x=u.attributes.normal,_=u.groups,S=u.drawRange;if(f!==null)if(Array.isArray(d))for(let w=0,b=_.length;w<b;w++){const y=_[w],g=d[y.materialIndex],I=Math.max(y.start,S.start),L=Math.min(f.count,Math.min(y.start+y.count,S.start+S.count));for(let C=I,X=L;C<X;C+=3){const k=f.getX(C),F=f.getX(C+1),j=f.getX(C+2);s=Tp(this,g,e,i,m,v,x,k,F,j),s&&(s.faceIndex=Math.floor(C/3),s.face.materialIndex=y.materialIndex,n.push(s))}}else{const w=Math.max(0,S.start),b=Math.min(f.count,S.start+S.count);for(let y=w,g=b;y<g;y+=3){const I=f.getX(y),L=f.getX(y+1),C=f.getX(y+2);s=Tp(this,d,e,i,m,v,x,I,L,C),s&&(s.faceIndex=Math.floor(y/3),n.push(s))}}else if(p!==void 0)if(Array.isArray(d))for(let w=0,b=_.length;w<b;w++){const y=_[w],g=d[y.materialIndex],I=Math.max(y.start,S.start),L=Math.min(p.count,Math.min(y.start+y.count,S.start+S.count));for(let C=I,X=L;C<X;C+=3){const k=C,F=C+1,j=C+2;s=Tp(this,g,e,i,m,v,x,k,F,j),s&&(s.faceIndex=Math.floor(C/3),s.face.materialIndex=y.materialIndex,n.push(s))}}else{const w=Math.max(0,S.start),b=Math.min(p.count,S.start+S.count);for(let y=w,g=b;y<g;y+=3){const I=y,L=y+1,C=y+2;s=Tp(this,d,e,i,m,v,x,I,L,C),s&&(s.faceIndex=Math.floor(y/3),n.push(s))}}}}function XE(a,e,n,i,s,u,d,f){let p;if(e.side===hi?p=i.intersectTriangle(d,u,s,!0,f):p=i.intersectTriangle(s,u,d,e.side===$s,f),p===null)return null;Ep.copy(f),Ep.applyMatrix4(a.matrixWorld);const m=n.ray.origin.distanceTo(Ep);return m<n.near||m>n.far?null:{distance:m,point:Ep.clone(),object:a}}function Tp(a,e,n,i,s,u,d,f,p,m){a.getVertexPosition(f,xp),a.getVertexPosition(p,yp),a.getVertexPosition(m,Sp);const v=XE(a,e,n,i,xp,yp,Sp,ey);if(v){const x=new Pe;Fa.getBarycoord(ey,xp,yp,Sp,x),s&&(v.uv=Fa.getInterpolatedAttribute(s,f,p,m,x,new Ln)),u&&(v.uv1=Fa.getInterpolatedAttribute(u,f,p,m,x,new Ln)),d&&(v.normal=Fa.getInterpolatedAttribute(d,f,p,m,x,new Pe),v.normal.dot(i.direction)>0&&v.normal.multiplyScalar(-1));const _={a:f,b:p,c:m,normal:new Pe,materialIndex:0};Fa.getNormal(xp,yp,Sp,_.normal),v.face=_,v.barycoord=x}return v}class tp extends Qs{constructor(e=1,n=1,i=1,s=1,u=1,d=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:s,heightSegments:u,depthSegments:d};const f=this;s=Math.floor(s),u=Math.floor(u),d=Math.floor(d);const p=[],m=[],v=[],x=[];let _=0,S=0;w("z","y","x",-1,-1,i,n,e,d,u,0),w("z","y","x",1,-1,i,n,-e,d,u,1),w("x","z","y",1,1,e,i,n,s,d,2),w("x","z","y",1,-1,e,i,-n,s,d,3),w("x","y","z",1,-1,e,n,i,s,u,4),w("x","y","z",-1,-1,e,n,-i,s,u,5),this.setIndex(p),this.setAttribute("position",new $a(m,3)),this.setAttribute("normal",new $a(v,3)),this.setAttribute("uv",new $a(x,2));function w(b,y,g,I,L,C,X,k,F,j,R){const A=C/F,V=X/j,ie=C/2,ee=X/2,se=k/2,he=F+1,oe=j+1;let ue=0,B=0;const ae=new Pe;for(let re=0;re<oe;re++){const U=re*V-ee;for(let te=0;te<he;te++){const Ue=te*A-ie;ae[b]=Ue*I,ae[y]=U*L,ae[g]=se,m.push(ae.x,ae.y,ae.z),ae[b]=0,ae[y]=0,ae[g]=k>0?1:-1,v.push(ae.x,ae.y,ae.z),x.push(te/F),x.push(1-re/j),ue+=1}}for(let re=0;re<j;re++)for(let U=0;U<F;U++){const te=_+U+he*re,Ue=_+U+he*(re+1),K=_+(U+1)+he*(re+1),le=_+(U+1)+he*re;p.push(te,Ue,le),p.push(Ue,K,le),B+=6}f.addGroup(S,B,R),S+=B,_+=ue}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new tp(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Jc(a){const e={};for(const n in a){e[n]={};for(const i in a[n]){const s=a[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function si(a){const e={};for(let n=0;n<a.length;n++){const i=Jc(a[n]);for(const s in i)e[s]=i[s]}return e}function jE(a){const e=[];for(let n=0;n<a.length;n++)e.push(a[n].clone());return e}function h1(a){const e=a.getRenderTarget();return e===null?a.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:un.workingColorSpace}const qE={clone:Jc,merge:si};var YE=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,$E=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ks extends Mm{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=YE,this.fragmentShader=$E,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Jc(e.uniforms),this.uniformsGroups=jE(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const s in this.uniforms){const d=this.uniforms[s].value;d&&d.isTexture?n.uniforms[s]={type:"t",value:d.toJSON(e).uuid}:d&&d.isColor?n.uniforms[s]={type:"c",value:d.getHex()}:d&&d.isVector2?n.uniforms[s]={type:"v2",value:d.toArray()}:d&&d.isVector3?n.uniforms[s]={type:"v3",value:d.toArray()}:d&&d.isVector4?n.uniforms[s]={type:"v4",value:d.toArray()}:d&&d.isMatrix3?n.uniforms[s]={type:"m3",value:d.toArray()}:d&&d.isMatrix4?n.uniforms[s]={type:"m4",value:d.toArray()}:n.uniforms[s]={value:d}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}class p1 extends Xi{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new nr,this.projectionMatrix=new nr,this.projectionMatrixInverse=new nr,this.coordinateSystem=ys}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Fs=new Pe,ty=new Ln,ny=new Ln;class Zi extends p1{constructor(e=50,n=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=i0*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(hv*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return i0*2*Math.atan(Math.tan(hv*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,n,i){Fs.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Fs.x,Fs.y).multiplyScalar(-e/Fs.z),Fs.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Fs.x,Fs.y).multiplyScalar(-e/Fs.z)}getViewSize(e,n){return this.getViewBounds(e,ty,ny),n.subVectors(ny,ty)}setViewOffset(e,n,i,s,u,d){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=u,this.view.height=d,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(hv*.5*this.fov)/this.zoom,i=2*n,s=this.aspect*i,u=-.5*s;const d=this.view;if(this.view!==null&&this.view.enabled){const p=d.fullWidth,m=d.fullHeight;u+=d.offsetX*s/p,n-=d.offsetY*i/m,s*=d.width/p,i*=d.height/m}const f=this.filmOffset;f!==0&&(u+=e*f/this.getFilmWidth()),this.projectionMatrix.makePerspective(u,u+s,n,n-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}const xc=-90,yc=1;class KE extends Xi{constructor(e,n,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new Zi(xc,yc,e,n);s.layers=this.layers,this.add(s);const u=new Zi(xc,yc,e,n);u.layers=this.layers,this.add(u);const d=new Zi(xc,yc,e,n);d.layers=this.layers,this.add(d);const f=new Zi(xc,yc,e,n);f.layers=this.layers,this.add(f);const p=new Zi(xc,yc,e,n);p.layers=this.layers,this.add(p);const m=new Zi(xc,yc,e,n);m.layers=this.layers,this.add(m)}updateCoordinateSystem(){const e=this.coordinateSystem,n=this.children.concat(),[i,s,u,d,f,p]=n;for(const m of n)this.remove(m);if(e===ys)i.up.set(0,1,0),i.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),u.up.set(0,0,-1),u.lookAt(0,1,0),d.up.set(0,0,1),d.lookAt(0,-1,0),f.up.set(0,1,0),f.lookAt(0,0,1),p.up.set(0,1,0),p.lookAt(0,0,-1);else if(e===pm)i.up.set(0,-1,0),i.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),u.up.set(0,0,1),u.lookAt(0,1,0),d.up.set(0,0,-1),d.lookAt(0,-1,0),f.up.set(0,-1,0),f.lookAt(0,0,1),p.up.set(0,-1,0),p.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const m of n)this.add(m),m.updateMatrixWorld()}update(e,n){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[u,d,f,p,m,v]=this.children,x=e.getRenderTarget(),_=e.getActiveCubeFace(),S=e.getActiveMipmapLevel(),w=e.xr.enabled;e.xr.enabled=!1;const b=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,s),e.render(n,u),e.setRenderTarget(i,1,s),e.render(n,d),e.setRenderTarget(i,2,s),e.render(n,f),e.setRenderTarget(i,3,s),e.render(n,p),e.setRenderTarget(i,4,s),e.render(n,m),i.texture.generateMipmaps=b,e.setRenderTarget(i,5,s),e.render(n,v),e.setRenderTarget(x,_,S),e.xr.enabled=w,i.texture.needsPMREMUpdate=!0}}class m1 extends pi{constructor(e,n,i,s,u,d,f,p,m,v){e=e!==void 0?e:[],n=n!==void 0?n:qc,super(e,n,i,s,u,d,f,p,m,v),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class ZE extends ic{constructor(e=1,n={}){super(e,e,n),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},s=[i,i,i,i,i,i];this.texture=new m1(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Wa}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new tp(5,5,5),u=new Ks({name:"CubemapFromEquirect",uniforms:Jc(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:hi,blending:Xs});u.uniforms.tEquirect.value=n;const d=new Xa(s,u),f=n.minFilter;return n.minFilter===Ju&&(n.minFilter=Wa),new KE(1,10,this).update(e,d),n.minFilter=f,d.geometry.dispose(),d.material.dispose(),this}clear(e,n,i,s){const u=e.getRenderTarget();for(let d=0;d<6;d++)e.setRenderTarget(this,d),e.clear(n,i,s);e.setRenderTarget(u)}}class JE extends Xi{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new As,this.environmentIntensity=1,this.environmentRotation=new As,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(n.object.environmentIntensity=this.environmentIntensity),n.object.environmentRotation=this.environmentRotation.toArray(),n}}const Iv=new Pe,QE=new Pe,eT=new Bt;class Gu{constructor(e=new Pe(1,0,0),n=0){this.isPlane=!0,this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,s){return this.normal.set(e,n,i),this.constant=s,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const s=Iv.subVectors(i,n).cross(QE.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,n){const i=e.delta(Iv),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const u=-(e.start.dot(this.normal)+this.constant)/s;return u<0||u>1?null:n.copy(e.start).addScaledVector(i,u)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||eT.getNormalMatrix(e),s=this.coplanarPoint(Iv).applyMatrix4(e),u=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(u),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Iu=new nx,wp=new Pe;class g1{constructor(e=new Gu,n=new Gu,i=new Gu,s=new Gu,u=new Gu,d=new Gu){this.planes=[e,n,i,s,u,d]}set(e,n,i,s,u,d){const f=this.planes;return f[0].copy(e),f[1].copy(n),f[2].copy(i),f[3].copy(s),f[4].copy(u),f[5].copy(d),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,n=ys){const i=this.planes,s=e.elements,u=s[0],d=s[1],f=s[2],p=s[3],m=s[4],v=s[5],x=s[6],_=s[7],S=s[8],w=s[9],b=s[10],y=s[11],g=s[12],I=s[13],L=s[14],C=s[15];if(i[0].setComponents(p-u,_-m,y-S,C-g).normalize(),i[1].setComponents(p+u,_+m,y+S,C+g).normalize(),i[2].setComponents(p+d,_+v,y+w,C+I).normalize(),i[3].setComponents(p-d,_-v,y-w,C-I).normalize(),i[4].setComponents(p-f,_-x,y-b,C-L).normalize(),n===ys)i[5].setComponents(p+f,_+x,y+b,C+L).normalize();else if(n===pm)i[5].setComponents(f,x,b,L).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+n);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Iu.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const n=e.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),Iu.copy(n.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Iu)}intersectsSprite(e){return Iu.center.set(0,0,0),Iu.radius=.7071067811865476,Iu.applyMatrix4(e.matrixWorld),this.intersectsSphere(Iu)}intersectsSphere(e){const n=this.planes,i=e.center,s=-e.radius;for(let u=0;u<6;u++)if(n[u].distanceToPoint(i)<s)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const s=n[i];if(wp.x=s.normal.x>0?e.max.x:e.min.x,wp.y=s.normal.y>0?e.max.y:e.min.y,wp.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(wp)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Xh extends Xi{constructor(){super(),this.isGroup=!0,this.type="Group"}}class v1 extends pi{constructor(e,n,i,s,u,d,f,p,m,v=Hc){if(v!==Hc&&v!==Kc)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&v===Hc&&(i=rc),i===void 0&&v===Kc&&(i=$c),super(null,s,u,d,f,p,v,i,m),this.isDepthTexture=!0,this.image={width:e,height:n},this.magFilter=f!==void 0?f:Ba,this.minFilter=p!==void 0?p:Ba,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const n=super.toJSON(e);return this.compareFunction!==null&&(n.compareFunction=this.compareFunction),n}}class Em extends Qs{constructor(e=1,n=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:s};const u=e/2,d=n/2,f=Math.floor(i),p=Math.floor(s),m=f+1,v=p+1,x=e/f,_=n/p,S=[],w=[],b=[],y=[];for(let g=0;g<v;g++){const I=g*_-d;for(let L=0;L<m;L++){const C=L*x-u;w.push(C,-I,0),b.push(0,0,1),y.push(L/f),y.push(1-g/p)}}for(let g=0;g<p;g++)for(let I=0;I<f;I++){const L=I+m*g,C=I+m*(g+1),X=I+1+m*(g+1),k=I+1+m*g;S.push(L,C,k),S.push(C,X,k)}this.setIndex(S),this.setAttribute("position",new $a(w,3)),this.setAttribute("normal",new $a(b,3)),this.setAttribute("uv",new $a(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Em(e.width,e.height,e.widthSegments,e.heightSegments)}}class ix extends Qs{constructor(e=1,n=32,i=16,s=0,u=Math.PI*2,d=0,f=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:s,phiLength:u,thetaStart:d,thetaLength:f},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const p=Math.min(d+f,Math.PI);let m=0;const v=[],x=new Pe,_=new Pe,S=[],w=[],b=[],y=[];for(let g=0;g<=i;g++){const I=[],L=g/i;let C=0;g===0&&d===0?C=.5/n:g===i&&p===Math.PI&&(C=-.5/n);for(let X=0;X<=n;X++){const k=X/n;x.x=-e*Math.cos(s+k*u)*Math.sin(d+L*f),x.y=e*Math.cos(d+L*f),x.z=e*Math.sin(s+k*u)*Math.sin(d+L*f),w.push(x.x,x.y,x.z),_.copy(x).normalize(),b.push(_.x,_.y,_.z),y.push(k+C,1-L),I.push(m++)}v.push(I)}for(let g=0;g<i;g++)for(let I=0;I<n;I++){const L=v[g][I+1],C=v[g][I],X=v[g+1][I],k=v[g+1][I+1];(g!==0||d>0)&&S.push(L,C,k),(g!==i-1||p<Math.PI)&&S.push(C,X,k)}this.setIndex(S),this.setAttribute("position",new $a(w,3)),this.setAttribute("normal",new $a(b,3)),this.setAttribute("uv",new $a(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ix(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class tT extends Mm{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=hE,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class nT extends Mm{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class rT extends p1{constructor(e=-1,n=1,i=1,s=-1,u=.1,d=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=s,this.near=u,this.far=d,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,s,u,d){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=u,this.view.height=d,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let u=i-e,d=i+e,f=s+n,p=s-n;if(this.view!==null&&this.view.enabled){const m=(this.right-this.left)/this.view.fullWidth/this.zoom,v=(this.top-this.bottom)/this.view.fullHeight/this.zoom;u+=m*this.view.offsetX,d=u+m*this.view.width,f-=v*this.view.offsetY,p=f-v*this.view.height}this.projectionMatrix.makeOrthographic(u,d,f,p,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}class iT extends Zi{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}function ry(a,e,n,i){const s=aT(i);switch(n){case JS:return a*e;case e1:return a*e;case t1:return a*e*2;case n1:return a*e/s.components*s.byteLength;case Q0:return a*e/s.components*s.byteLength;case r1:return a*e*2/s.components*s.byteLength;case ex:return a*e*2/s.components*s.byteLength;case QS:return a*e*3/s.components*s.byteLength;case ka:return a*e*4/s.components*s.byteLength;case tx:return a*e*4/s.components*s.byteLength;case Jp:case Qp:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*8;case em:case tm:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*16;case U_:case N_:return Math.max(a,16)*Math.max(e,8)/4;case L_:case I_:return Math.max(a,8)*Math.max(e,8)/2;case F_:case O_:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*8;case k_:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*16;case z_:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*16;case B_:return Math.floor((a+4)/5)*Math.floor((e+3)/4)*16;case H_:return Math.floor((a+4)/5)*Math.floor((e+4)/5)*16;case V_:return Math.floor((a+5)/6)*Math.floor((e+4)/5)*16;case G_:return Math.floor((a+5)/6)*Math.floor((e+5)/6)*16;case W_:return Math.floor((a+7)/8)*Math.floor((e+4)/5)*16;case X_:return Math.floor((a+7)/8)*Math.floor((e+5)/6)*16;case j_:return Math.floor((a+7)/8)*Math.floor((e+7)/8)*16;case q_:return Math.floor((a+9)/10)*Math.floor((e+4)/5)*16;case Y_:return Math.floor((a+9)/10)*Math.floor((e+5)/6)*16;case $_:return Math.floor((a+9)/10)*Math.floor((e+7)/8)*16;case K_:return Math.floor((a+9)/10)*Math.floor((e+9)/10)*16;case Z_:return Math.floor((a+11)/12)*Math.floor((e+9)/10)*16;case J_:return Math.floor((a+11)/12)*Math.floor((e+11)/12)*16;case nm:case Q_:case e0:return Math.ceil(a/4)*Math.ceil(e/4)*16;case i1:case t0:return Math.ceil(a/4)*Math.ceil(e/4)*8;case n0:case r0:return Math.ceil(a/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}function aT(a){switch(a){case bs:case $S:return{byteLength:1,components:1};case $h:case KS:case Zh:return{byteLength:2,components:1};case Z0:case J0:return{byteLength:2,components:4};case rc:case K0:case xs:return{byteLength:4,components:1};case ZS:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${a}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:$0}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=$0);/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function _1(){let a=null,e=!1,n=null,i=null;function s(u,d){n(u,d),i=a.requestAnimationFrame(s)}return{start:function(){e!==!0&&n!==null&&(i=a.requestAnimationFrame(s),e=!0)},stop:function(){a.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(u){n=u},setContext:function(u){a=u}}}function oT(a){const e=new WeakMap;function n(f,p){const m=f.array,v=f.usage,x=m.byteLength,_=a.createBuffer();a.bindBuffer(p,_),a.bufferData(p,m,v),f.onUploadCallback();let S;if(m instanceof Float32Array)S=a.FLOAT;else if(m instanceof Uint16Array)f.isFloat16BufferAttribute?S=a.HALF_FLOAT:S=a.UNSIGNED_SHORT;else if(m instanceof Int16Array)S=a.SHORT;else if(m instanceof Uint32Array)S=a.UNSIGNED_INT;else if(m instanceof Int32Array)S=a.INT;else if(m instanceof Int8Array)S=a.BYTE;else if(m instanceof Uint8Array)S=a.UNSIGNED_BYTE;else if(m instanceof Uint8ClampedArray)S=a.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:_,type:S,bytesPerElement:m.BYTES_PER_ELEMENT,version:f.version,size:x}}function i(f,p,m){const v=p.array,x=p.updateRanges;if(a.bindBuffer(m,f),x.length===0)a.bufferSubData(m,0,v);else{x.sort((S,w)=>S.start-w.start);let _=0;for(let S=1;S<x.length;S++){const w=x[_],b=x[S];b.start<=w.start+w.count+1?w.count=Math.max(w.count,b.start+b.count-w.start):(++_,x[_]=b)}x.length=_+1;for(let S=0,w=x.length;S<w;S++){const b=x[S];a.bufferSubData(m,b.start*v.BYTES_PER_ELEMENT,v,b.start,b.count)}p.clearUpdateRanges()}p.onUploadCallback()}function s(f){return f.isInterleavedBufferAttribute&&(f=f.data),e.get(f)}function u(f){f.isInterleavedBufferAttribute&&(f=f.data);const p=e.get(f);p&&(a.deleteBuffer(p.buffer),e.delete(f))}function d(f,p){if(f.isInterleavedBufferAttribute&&(f=f.data),f.isGLBufferAttribute){const v=e.get(f);(!v||v.version<f.version)&&e.set(f,{buffer:f.buffer,type:f.type,bytesPerElement:f.elementSize,version:f.version});return}const m=e.get(f);if(m===void 0)e.set(f,n(f,p));else if(m.version<f.version){if(m.size!==f.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(m.buffer,f,p),m.version=f.version}}return{get:s,remove:u,update:d}}var sT=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,lT=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,uT=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,cT=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,dT=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,fT=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,hT=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,pT=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,mT=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,gT=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,vT=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,_T=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,xT=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,yT=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,ST=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,MT=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,ET=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,TT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,wT=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,bT=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,AT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,RT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,CT=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,PT=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,DT=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,LT=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,UT=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,IT=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,NT=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,FT=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,OT="gl_FragColor = linearToOutputTexel( gl_FragColor );",kT=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,zT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,BT=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,HT=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,VT=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,GT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,WT=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,XT=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,jT=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,qT=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,YT=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,$T=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,KT=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,ZT=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,JT=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,QT=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,ew=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,tw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,nw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,rw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,iw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,aw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,ow=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,sw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,uw=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,cw=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,dw=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,fw=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,hw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,pw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,mw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,gw=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,vw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,_w=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,xw=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,yw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Sw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Mw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,Ew=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Tw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,ww=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,bw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Aw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Rw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Cw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Pw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Dw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Lw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Uw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Iw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Nw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Fw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Ow=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,kw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,zw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Bw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Hw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Vw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Gw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Ww=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Xw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,jw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,qw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Yw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,$w=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Kw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Zw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Jw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Qw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,eb=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,tb=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,nb=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,rb=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ib=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,ab=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const ob=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,sb=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,lb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ub=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,db=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,fb=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,hb=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,pb=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,mb=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,gb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,vb=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_b=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,xb=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,yb=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Sb=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Mb=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Eb=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tb=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,wb=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bb=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Ab=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Rb=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Cb=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pb=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Db=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lb=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ub=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ib=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Nb=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Fb=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ob=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,kb=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,zb=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Vt={alphahash_fragment:sT,alphahash_pars_fragment:lT,alphamap_fragment:uT,alphamap_pars_fragment:cT,alphatest_fragment:dT,alphatest_pars_fragment:fT,aomap_fragment:hT,aomap_pars_fragment:pT,batching_pars_vertex:mT,batching_vertex:gT,begin_vertex:vT,beginnormal_vertex:_T,bsdfs:xT,iridescence_fragment:yT,bumpmap_pars_fragment:ST,clipping_planes_fragment:MT,clipping_planes_pars_fragment:ET,clipping_planes_pars_vertex:TT,clipping_planes_vertex:wT,color_fragment:bT,color_pars_fragment:AT,color_pars_vertex:RT,color_vertex:CT,common:PT,cube_uv_reflection_fragment:DT,defaultnormal_vertex:LT,displacementmap_pars_vertex:UT,displacementmap_vertex:IT,emissivemap_fragment:NT,emissivemap_pars_fragment:FT,colorspace_fragment:OT,colorspace_pars_fragment:kT,envmap_fragment:zT,envmap_common_pars_fragment:BT,envmap_pars_fragment:HT,envmap_pars_vertex:VT,envmap_physical_pars_fragment:QT,envmap_vertex:GT,fog_vertex:WT,fog_pars_vertex:XT,fog_fragment:jT,fog_pars_fragment:qT,gradientmap_pars_fragment:YT,lightmap_pars_fragment:$T,lights_lambert_fragment:KT,lights_lambert_pars_fragment:ZT,lights_pars_begin:JT,lights_toon_fragment:ew,lights_toon_pars_fragment:tw,lights_phong_fragment:nw,lights_phong_pars_fragment:rw,lights_physical_fragment:iw,lights_physical_pars_fragment:aw,lights_fragment_begin:ow,lights_fragment_maps:sw,lights_fragment_end:lw,logdepthbuf_fragment:uw,logdepthbuf_pars_fragment:cw,logdepthbuf_pars_vertex:dw,logdepthbuf_vertex:fw,map_fragment:hw,map_pars_fragment:pw,map_particle_fragment:mw,map_particle_pars_fragment:gw,metalnessmap_fragment:vw,metalnessmap_pars_fragment:_w,morphinstance_vertex:xw,morphcolor_vertex:yw,morphnormal_vertex:Sw,morphtarget_pars_vertex:Mw,morphtarget_vertex:Ew,normal_fragment_begin:Tw,normal_fragment_maps:ww,normal_pars_fragment:bw,normal_pars_vertex:Aw,normal_vertex:Rw,normalmap_pars_fragment:Cw,clearcoat_normal_fragment_begin:Pw,clearcoat_normal_fragment_maps:Dw,clearcoat_pars_fragment:Lw,iridescence_pars_fragment:Uw,opaque_fragment:Iw,packing:Nw,premultiplied_alpha_fragment:Fw,project_vertex:Ow,dithering_fragment:kw,dithering_pars_fragment:zw,roughnessmap_fragment:Bw,roughnessmap_pars_fragment:Hw,shadowmap_pars_fragment:Vw,shadowmap_pars_vertex:Gw,shadowmap_vertex:Ww,shadowmask_pars_fragment:Xw,skinbase_vertex:jw,skinning_pars_vertex:qw,skinning_vertex:Yw,skinnormal_vertex:$w,specularmap_fragment:Kw,specularmap_pars_fragment:Zw,tonemapping_fragment:Jw,tonemapping_pars_fragment:Qw,transmission_fragment:eb,transmission_pars_fragment:tb,uv_pars_fragment:nb,uv_pars_vertex:rb,uv_vertex:ib,worldpos_vertex:ab,background_vert:ob,background_frag:sb,backgroundCube_vert:lb,backgroundCube_frag:ub,cube_vert:cb,cube_frag:db,depth_vert:fb,depth_frag:hb,distanceRGBA_vert:pb,distanceRGBA_frag:mb,equirect_vert:gb,equirect_frag:vb,linedashed_vert:_b,linedashed_frag:xb,meshbasic_vert:yb,meshbasic_frag:Sb,meshlambert_vert:Mb,meshlambert_frag:Eb,meshmatcap_vert:Tb,meshmatcap_frag:wb,meshnormal_vert:bb,meshnormal_frag:Ab,meshphong_vert:Rb,meshphong_frag:Cb,meshphysical_vert:Pb,meshphysical_frag:Db,meshtoon_vert:Lb,meshtoon_frag:Ub,points_vert:Ib,points_frag:Nb,shadow_vert:Fb,shadow_frag:Ob,sprite_vert:kb,sprite_frag:zb},ct={common:{diffuse:{value:new bn(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Bt},alphaMap:{value:null},alphaMapTransform:{value:new Bt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Bt}},envmap:{envMap:{value:null},envMapRotation:{value:new Bt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Bt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Bt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Bt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Bt},normalScale:{value:new Ln(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Bt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Bt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Bt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Bt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new bn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new bn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Bt},alphaTest:{value:0},uvTransform:{value:new Bt}},sprite:{diffuse:{value:new bn(16777215)},opacity:{value:1},center:{value:new Ln(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Bt},alphaMap:{value:null},alphaMapTransform:{value:new Bt},alphaTest:{value:0}}},Va={basic:{uniforms:si([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.fog]),vertexShader:Vt.meshbasic_vert,fragmentShader:Vt.meshbasic_frag},lambert:{uniforms:si([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,ct.lights,{emissive:{value:new bn(0)}}]),vertexShader:Vt.meshlambert_vert,fragmentShader:Vt.meshlambert_frag},phong:{uniforms:si([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,ct.lights,{emissive:{value:new bn(0)},specular:{value:new bn(1118481)},shininess:{value:30}}]),vertexShader:Vt.meshphong_vert,fragmentShader:Vt.meshphong_frag},standard:{uniforms:si([ct.common,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.roughnessmap,ct.metalnessmap,ct.fog,ct.lights,{emissive:{value:new bn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Vt.meshphysical_vert,fragmentShader:Vt.meshphysical_frag},toon:{uniforms:si([ct.common,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.gradientmap,ct.fog,ct.lights,{emissive:{value:new bn(0)}}]),vertexShader:Vt.meshtoon_vert,fragmentShader:Vt.meshtoon_frag},matcap:{uniforms:si([ct.common,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,{matcap:{value:null}}]),vertexShader:Vt.meshmatcap_vert,fragmentShader:Vt.meshmatcap_frag},points:{uniforms:si([ct.points,ct.fog]),vertexShader:Vt.points_vert,fragmentShader:Vt.points_frag},dashed:{uniforms:si([ct.common,ct.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Vt.linedashed_vert,fragmentShader:Vt.linedashed_frag},depth:{uniforms:si([ct.common,ct.displacementmap]),vertexShader:Vt.depth_vert,fragmentShader:Vt.depth_frag},normal:{uniforms:si([ct.common,ct.bumpmap,ct.normalmap,ct.displacementmap,{opacity:{value:1}}]),vertexShader:Vt.meshnormal_vert,fragmentShader:Vt.meshnormal_frag},sprite:{uniforms:si([ct.sprite,ct.fog]),vertexShader:Vt.sprite_vert,fragmentShader:Vt.sprite_frag},background:{uniforms:{uvTransform:{value:new Bt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Vt.background_vert,fragmentShader:Vt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Bt}},vertexShader:Vt.backgroundCube_vert,fragmentShader:Vt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Vt.cube_vert,fragmentShader:Vt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Vt.equirect_vert,fragmentShader:Vt.equirect_frag},distanceRGBA:{uniforms:si([ct.common,ct.displacementmap,{referencePosition:{value:new Pe},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Vt.distanceRGBA_vert,fragmentShader:Vt.distanceRGBA_frag},shadow:{uniforms:si([ct.lights,ct.fog,{color:{value:new bn(0)},opacity:{value:1}}]),vertexShader:Vt.shadow_vert,fragmentShader:Vt.shadow_frag}};Va.physical={uniforms:si([Va.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Bt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Bt},clearcoatNormalScale:{value:new Ln(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Bt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Bt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Bt},sheen:{value:0},sheenColor:{value:new bn(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Bt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Bt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Bt},transmissionSamplerSize:{value:new Ln},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Bt},attenuationDistance:{value:0},attenuationColor:{value:new bn(0)},specularColor:{value:new bn(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Bt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Bt},anisotropyVector:{value:new Ln},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Bt}}]),vertexShader:Vt.meshphysical_vert,fragmentShader:Vt.meshphysical_frag};const bp={r:0,b:0,g:0},Nu=new As,Bb=new nr;function Hb(a,e,n,i,s,u,d){const f=new bn(0);let p=u===!0?0:1,m,v,x=null,_=0,S=null;function w(L){let C=L.isScene===!0?L.background:null;return C&&C.isTexture&&(C=(L.backgroundBlurriness>0?n:e).get(C)),C}function b(L){let C=!1;const X=w(L);X===null?g(f,p):X&&X.isColor&&(g(X,1),C=!0);const k=a.xr.getEnvironmentBlendMode();k==="additive"?i.buffers.color.setClear(0,0,0,1,d):k==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,d),(a.autoClear||C)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil))}function y(L,C){const X=w(C);X&&(X.isCubeTexture||X.mapping===Sm)?(v===void 0&&(v=new Xa(new tp(1,1,1),new Ks({name:"BackgroundCubeMaterial",uniforms:Jc(Va.backgroundCube.uniforms),vertexShader:Va.backgroundCube.vertexShader,fragmentShader:Va.backgroundCube.fragmentShader,side:hi,depthTest:!1,depthWrite:!1,fog:!1})),v.geometry.deleteAttribute("normal"),v.geometry.deleteAttribute("uv"),v.onBeforeRender=function(k,F,j){this.matrixWorld.copyPosition(j.matrixWorld)},Object.defineProperty(v.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(v)),Nu.copy(C.backgroundRotation),Nu.x*=-1,Nu.y*=-1,Nu.z*=-1,X.isCubeTexture&&X.isRenderTargetTexture===!1&&(Nu.y*=-1,Nu.z*=-1),v.material.uniforms.envMap.value=X,v.material.uniforms.flipEnvMap.value=X.isCubeTexture&&X.isRenderTargetTexture===!1?-1:1,v.material.uniforms.backgroundBlurriness.value=C.backgroundBlurriness,v.material.uniforms.backgroundIntensity.value=C.backgroundIntensity,v.material.uniforms.backgroundRotation.value.setFromMatrix4(Bb.makeRotationFromEuler(Nu)),v.material.toneMapped=un.getTransfer(X.colorSpace)!==Tn,(x!==X||_!==X.version||S!==a.toneMapping)&&(v.material.needsUpdate=!0,x=X,_=X.version,S=a.toneMapping),v.layers.enableAll(),L.unshift(v,v.geometry,v.material,0,0,null)):X&&X.isTexture&&(m===void 0&&(m=new Xa(new Em(2,2),new Ks({name:"BackgroundMaterial",uniforms:Jc(Va.background.uniforms),vertexShader:Va.background.vertexShader,fragmentShader:Va.background.fragmentShader,side:$s,depthTest:!1,depthWrite:!1,fog:!1})),m.geometry.deleteAttribute("normal"),Object.defineProperty(m.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(m)),m.material.uniforms.t2D.value=X,m.material.uniforms.backgroundIntensity.value=C.backgroundIntensity,m.material.toneMapped=un.getTransfer(X.colorSpace)!==Tn,X.matrixAutoUpdate===!0&&X.updateMatrix(),m.material.uniforms.uvTransform.value.copy(X.matrix),(x!==X||_!==X.version||S!==a.toneMapping)&&(m.material.needsUpdate=!0,x=X,_=X.version,S=a.toneMapping),m.layers.enableAll(),L.unshift(m,m.geometry,m.material,0,0,null))}function g(L,C){L.getRGB(bp,h1(a)),i.buffers.color.setClear(bp.r,bp.g,bp.b,C,d)}function I(){v!==void 0&&(v.geometry.dispose(),v.material.dispose()),m!==void 0&&(m.geometry.dispose(),m.material.dispose())}return{getClearColor:function(){return f},setClearColor:function(L,C=1){f.set(L),p=C,g(f,p)},getClearAlpha:function(){return p},setClearAlpha:function(L){p=L,g(f,p)},render:b,addToRenderList:y,dispose:I}}function Vb(a,e){const n=a.getParameter(a.MAX_VERTEX_ATTRIBS),i={},s=_(null);let u=s,d=!1;function f(A,V,ie,ee,se){let he=!1;const oe=x(ee,ie,V);u!==oe&&(u=oe,m(u.object)),he=S(A,ee,ie,se),he&&w(A,ee,ie,se),se!==null&&e.update(se,a.ELEMENT_ARRAY_BUFFER),(he||d)&&(d=!1,C(A,V,ie,ee),se!==null&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,e.get(se).buffer))}function p(){return a.createVertexArray()}function m(A){return a.bindVertexArray(A)}function v(A){return a.deleteVertexArray(A)}function x(A,V,ie){const ee=ie.wireframe===!0;let se=i[A.id];se===void 0&&(se={},i[A.id]=se);let he=se[V.id];he===void 0&&(he={},se[V.id]=he);let oe=he[ee];return oe===void 0&&(oe=_(p()),he[ee]=oe),oe}function _(A){const V=[],ie=[],ee=[];for(let se=0;se<n;se++)V[se]=0,ie[se]=0,ee[se]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:V,enabledAttributes:ie,attributeDivisors:ee,object:A,attributes:{},index:null}}function S(A,V,ie,ee){const se=u.attributes,he=V.attributes;let oe=0;const ue=ie.getAttributes();for(const B in ue)if(ue[B].location>=0){const re=se[B];let U=he[B];if(U===void 0&&(B==="instanceMatrix"&&A.instanceMatrix&&(U=A.instanceMatrix),B==="instanceColor"&&A.instanceColor&&(U=A.instanceColor)),re===void 0||re.attribute!==U||U&&re.data!==U.data)return!0;oe++}return u.attributesNum!==oe||u.index!==ee}function w(A,V,ie,ee){const se={},he=V.attributes;let oe=0;const ue=ie.getAttributes();for(const B in ue)if(ue[B].location>=0){let re=he[B];re===void 0&&(B==="instanceMatrix"&&A.instanceMatrix&&(re=A.instanceMatrix),B==="instanceColor"&&A.instanceColor&&(re=A.instanceColor));const U={};U.attribute=re,re&&re.data&&(U.data=re.data),se[B]=U,oe++}u.attributes=se,u.attributesNum=oe,u.index=ee}function b(){const A=u.newAttributes;for(let V=0,ie=A.length;V<ie;V++)A[V]=0}function y(A){g(A,0)}function g(A,V){const ie=u.newAttributes,ee=u.enabledAttributes,se=u.attributeDivisors;ie[A]=1,ee[A]===0&&(a.enableVertexAttribArray(A),ee[A]=1),se[A]!==V&&(a.vertexAttribDivisor(A,V),se[A]=V)}function I(){const A=u.newAttributes,V=u.enabledAttributes;for(let ie=0,ee=V.length;ie<ee;ie++)V[ie]!==A[ie]&&(a.disableVertexAttribArray(ie),V[ie]=0)}function L(A,V,ie,ee,se,he,oe){oe===!0?a.vertexAttribIPointer(A,V,ie,se,he):a.vertexAttribPointer(A,V,ie,ee,se,he)}function C(A,V,ie,ee){b();const se=ee.attributes,he=ie.getAttributes(),oe=V.defaultAttributeValues;for(const ue in he){const B=he[ue];if(B.location>=0){let ae=se[ue];if(ae===void 0&&(ue==="instanceMatrix"&&A.instanceMatrix&&(ae=A.instanceMatrix),ue==="instanceColor"&&A.instanceColor&&(ae=A.instanceColor)),ae!==void 0){const re=ae.normalized,U=ae.itemSize,te=e.get(ae);if(te===void 0)continue;const Ue=te.buffer,K=te.type,le=te.bytesPerElement,Se=K===a.INT||K===a.UNSIGNED_INT||ae.gpuType===K0;if(ae.isInterleavedBufferAttribute){const ve=ae.data,Ee=ve.stride,Ie=ae.offset;if(ve.isInstancedInterleavedBuffer){for(let Ze=0;Ze<B.locationSize;Ze++)g(B.location+Ze,ve.meshPerAttribute);A.isInstancedMesh!==!0&&ee._maxInstanceCount===void 0&&(ee._maxInstanceCount=ve.meshPerAttribute*ve.count)}else for(let Ze=0;Ze<B.locationSize;Ze++)y(B.location+Ze);a.bindBuffer(a.ARRAY_BUFFER,Ue);for(let Ze=0;Ze<B.locationSize;Ze++)L(B.location+Ze,U/B.locationSize,K,re,Ee*le,(Ie+U/B.locationSize*Ze)*le,Se)}else{if(ae.isInstancedBufferAttribute){for(let ve=0;ve<B.locationSize;ve++)g(B.location+ve,ae.meshPerAttribute);A.isInstancedMesh!==!0&&ee._maxInstanceCount===void 0&&(ee._maxInstanceCount=ae.meshPerAttribute*ae.count)}else for(let ve=0;ve<B.locationSize;ve++)y(B.location+ve);a.bindBuffer(a.ARRAY_BUFFER,Ue);for(let ve=0;ve<B.locationSize;ve++)L(B.location+ve,U/B.locationSize,K,re,U*le,U/B.locationSize*ve*le,Se)}}else if(oe!==void 0){const re=oe[ue];if(re!==void 0)switch(re.length){case 2:a.vertexAttrib2fv(B.location,re);break;case 3:a.vertexAttrib3fv(B.location,re);break;case 4:a.vertexAttrib4fv(B.location,re);break;default:a.vertexAttrib1fv(B.location,re)}}}}I()}function X(){j();for(const A in i){const V=i[A];for(const ie in V){const ee=V[ie];for(const se in ee)v(ee[se].object),delete ee[se];delete V[ie]}delete i[A]}}function k(A){if(i[A.id]===void 0)return;const V=i[A.id];for(const ie in V){const ee=V[ie];for(const se in ee)v(ee[se].object),delete ee[se];delete V[ie]}delete i[A.id]}function F(A){for(const V in i){const ie=i[V];if(ie[A.id]===void 0)continue;const ee=ie[A.id];for(const se in ee)v(ee[se].object),delete ee[se];delete ie[A.id]}}function j(){R(),d=!0,u!==s&&(u=s,m(u.object))}function R(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:f,reset:j,resetDefaultState:R,dispose:X,releaseStatesOfGeometry:k,releaseStatesOfProgram:F,initAttributes:b,enableAttribute:y,disableUnusedAttributes:I}}function Gb(a,e,n){let i;function s(m){i=m}function u(m,v){a.drawArrays(i,m,v),n.update(v,i,1)}function d(m,v,x){x!==0&&(a.drawArraysInstanced(i,m,v,x),n.update(v,i,x))}function f(m,v,x){if(x===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,m,0,v,0,x);let S=0;for(let w=0;w<x;w++)S+=v[w];n.update(S,i,1)}function p(m,v,x,_){if(x===0)return;const S=e.get("WEBGL_multi_draw");if(S===null)for(let w=0;w<m.length;w++)d(m[w],v[w],_[w]);else{S.multiDrawArraysInstancedWEBGL(i,m,0,v,0,_,0,x);let w=0;for(let b=0;b<x;b++)w+=v[b]*_[b];n.update(w,i,1)}}this.setMode=s,this.render=u,this.renderInstances=d,this.renderMultiDraw=f,this.renderMultiDrawInstances=p}function Wb(a,e,n,i){let s;function u(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const F=e.get("EXT_texture_filter_anisotropic");s=a.getParameter(F.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function d(F){return!(F!==ka&&i.convert(F)!==a.getParameter(a.IMPLEMENTATION_COLOR_READ_FORMAT))}function f(F){const j=F===Zh&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(F!==bs&&i.convert(F)!==a.getParameter(a.IMPLEMENTATION_COLOR_READ_TYPE)&&F!==xs&&!j)}function p(F){if(F==="highp"){if(a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision>0)return"highp";F="mediump"}return F==="mediump"&&a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let m=n.precision!==void 0?n.precision:"highp";const v=p(m);v!==m&&(console.warn("THREE.WebGLRenderer:",m,"not supported, using",v,"instead."),m=v);const x=n.logarithmicDepthBuffer===!0,_=n.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),S=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),w=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=a.getParameter(a.MAX_TEXTURE_SIZE),y=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE),g=a.getParameter(a.MAX_VERTEX_ATTRIBS),I=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),L=a.getParameter(a.MAX_VARYING_VECTORS),C=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),X=w>0,k=a.getParameter(a.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:u,getMaxPrecision:p,textureFormatReadable:d,textureTypeReadable:f,precision:m,logarithmicDepthBuffer:x,reverseDepthBuffer:_,maxTextures:S,maxVertexTextures:w,maxTextureSize:b,maxCubemapSize:y,maxAttributes:g,maxVertexUniforms:I,maxVaryings:L,maxFragmentUniforms:C,vertexTextures:X,maxSamples:k}}function Xb(a){const e=this;let n=null,i=0,s=!1,u=!1;const d=new Gu,f=new Bt,p={value:null,needsUpdate:!1};this.uniform=p,this.numPlanes=0,this.numIntersection=0,this.init=function(x,_){const S=x.length!==0||_||i!==0||s;return s=_,i=x.length,S},this.beginShadows=function(){u=!0,v(null)},this.endShadows=function(){u=!1},this.setGlobalState=function(x,_){n=v(x,_,0)},this.setState=function(x,_,S){const w=x.clippingPlanes,b=x.clipIntersection,y=x.clipShadows,g=a.get(x);if(!s||w===null||w.length===0||u&&!y)u?v(null):m();else{const I=u?0:i,L=I*4;let C=g.clippingState||null;p.value=C,C=v(w,_,L,S);for(let X=0;X!==L;++X)C[X]=n[X];g.clippingState=C,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=I}};function m(){p.value!==n&&(p.value=n,p.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function v(x,_,S,w){const b=x!==null?x.length:0;let y=null;if(b!==0){if(y=p.value,w!==!0||y===null){const g=S+b*4,I=_.matrixWorldInverse;f.getNormalMatrix(I),(y===null||y.length<g)&&(y=new Float32Array(g));for(let L=0,C=S;L!==b;++L,C+=4)d.copy(x[L]).applyMatrix4(I,f),d.normal.toArray(y,C),y[C+3]=d.constant}p.value=y,p.needsUpdate=!0}return e.numPlanes=b,e.numIntersection=0,y}}function jb(a){let e=new WeakMap;function n(d,f){return f===R_?d.mapping=qc:f===C_&&(d.mapping=Yc),d}function i(d){if(d&&d.isTexture){const f=d.mapping;if(f===R_||f===C_)if(e.has(d)){const p=e.get(d).texture;return n(p,d.mapping)}else{const p=d.image;if(p&&p.height>0){const m=new ZE(p.height);return m.fromEquirectangularTexture(a,d),e.set(d,m),d.addEventListener("dispose",s),n(m.texture,d.mapping)}else return null}}return d}function s(d){const f=d.target;f.removeEventListener("dispose",s);const p=e.get(f);p!==void 0&&(e.delete(f),p.dispose())}function u(){e=new WeakMap}return{get:i,dispose:u}}const kc=4,iy=[.125,.215,.35,.446,.526,.582],Yu=20,Nv=new rT,ay=new bn;let Fv=null,Ov=0,kv=0,zv=!1;const Wu=(1+Math.sqrt(5))/2,Sc=1/Wu,oy=[new Pe(-Wu,Sc,0),new Pe(Wu,Sc,0),new Pe(-Sc,0,Wu),new Pe(Sc,0,Wu),new Pe(0,Wu,-Sc),new Pe(0,Wu,Sc),new Pe(-1,1,-1),new Pe(1,1,-1),new Pe(-1,1,1),new Pe(1,1,1)];class sy{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,s=100){Fv=this._renderer.getRenderTarget(),Ov=this._renderer.getActiveCubeFace(),kv=this._renderer.getActiveMipmapLevel(),zv=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const u=this._allocateTargets();return u.depthBuffer=!0,this._sceneToCubeUV(e,i,s,u),n>0&&this._blur(u,0,0,n),this._applyPMREM(u),this._cleanup(u),u}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=cy(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=uy(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Fv,Ov,kv),this._renderer.xr.enabled=zv,e.scissorTest=!1,Ap(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===qc||e.mapping===Yc?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Fv=this._renderer.getRenderTarget(),Ov=this._renderer.getActiveCubeFace(),kv=this._renderer.getActiveMipmapLevel(),zv=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:Wa,minFilter:Wa,generateMipmaps:!1,type:Zh,format:ka,colorSpace:Zc,depthBuffer:!1},s=ly(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ly(e,n,i);const{_lodMax:u}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=qb(u)),this._blurMaterial=Yb(u,e,n)}return s}_compileMaterial(e){const n=new Xa(this._lodPlanes[0],e);this._renderer.compile(n,Nv)}_sceneToCubeUV(e,n,i,s){const f=new Zi(90,1,n,i),p=[1,-1,1,1,1,1],m=[1,1,1,-1,-1,-1],v=this._renderer,x=v.autoClear,_=v.toneMapping;v.getClearColor(ay),v.toneMapping=js,v.autoClear=!1;const S=new rx({name:"PMREM.Background",side:hi,depthWrite:!1,depthTest:!1}),w=new Xa(new tp,S);let b=!1;const y=e.background;y?y.isColor&&(S.color.copy(y),e.background=null,b=!0):(S.color.copy(ay),b=!0);for(let g=0;g<6;g++){const I=g%3;I===0?(f.up.set(0,p[g],0),f.lookAt(m[g],0,0)):I===1?(f.up.set(0,0,p[g]),f.lookAt(0,m[g],0)):(f.up.set(0,p[g],0),f.lookAt(0,0,m[g]));const L=this._cubeSize;Ap(s,I*L,g>2?L:0,L,L),v.setRenderTarget(s),b&&v.render(w,f),v.render(e,f)}w.geometry.dispose(),w.material.dispose(),v.toneMapping=_,v.autoClear=x,e.background=y}_textureToCubeUV(e,n){const i=this._renderer,s=e.mapping===qc||e.mapping===Yc;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=cy()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=uy());const u=s?this._cubemapMaterial:this._equirectMaterial,d=new Xa(this._lodPlanes[0],u),f=u.uniforms;f.envMap.value=e;const p=this._cubeSize;Ap(n,0,0,3*p,2*p),i.setRenderTarget(n),i.render(d,Nv)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;const s=this._lodPlanes.length;for(let u=1;u<s;u++){const d=Math.sqrt(this._sigmas[u]*this._sigmas[u]-this._sigmas[u-1]*this._sigmas[u-1]),f=oy[(s-u-1)%oy.length];this._blur(e,u-1,u,d,f)}n.autoClear=i}_blur(e,n,i,s,u){const d=this._pingPongRenderTarget;this._halfBlur(e,d,n,i,s,"latitudinal",u),this._halfBlur(d,e,i,i,s,"longitudinal",u)}_halfBlur(e,n,i,s,u,d,f){const p=this._renderer,m=this._blurMaterial;d!=="latitudinal"&&d!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const v=3,x=new Xa(this._lodPlanes[s],m),_=m.uniforms,S=this._sizeLods[i]-1,w=isFinite(u)?Math.PI/(2*S):2*Math.PI/(2*Yu-1),b=u/w,y=isFinite(u)?1+Math.floor(v*b):Yu;y>Yu&&console.warn(`sigmaRadians, ${u}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Yu}`);const g=[];let I=0;for(let F=0;F<Yu;++F){const j=F/b,R=Math.exp(-j*j/2);g.push(R),F===0?I+=R:F<y&&(I+=2*R)}for(let F=0;F<g.length;F++)g[F]=g[F]/I;_.envMap.value=e.texture,_.samples.value=y,_.weights.value=g,_.latitudinal.value=d==="latitudinal",f&&(_.poleAxis.value=f);const{_lodMax:L}=this;_.dTheta.value=w,_.mipInt.value=L-i;const C=this._sizeLods[s],X=3*C*(s>L-kc?s-L+kc:0),k=4*(this._cubeSize-C);Ap(n,X,k,3*C,2*C),p.setRenderTarget(n),p.render(x,Nv)}}function qb(a){const e=[],n=[],i=[];let s=a;const u=a-kc+1+iy.length;for(let d=0;d<u;d++){const f=Math.pow(2,s);n.push(f);let p=1/f;d>a-kc?p=iy[d-a+kc-1]:d===0&&(p=0),i.push(p);const m=1/(f-2),v=-m,x=1+m,_=[v,v,x,v,x,x,v,v,x,x,v,x],S=6,w=6,b=3,y=2,g=1,I=new Float32Array(b*w*S),L=new Float32Array(y*w*S),C=new Float32Array(g*w*S);for(let k=0;k<S;k++){const F=k%3*2/3-1,j=k>2?0:-1,R=[F,j,0,F+2/3,j,0,F+2/3,j+1,0,F,j,0,F+2/3,j+1,0,F,j+1,0];I.set(R,b*w*k),L.set(_,y*w*k);const A=[k,k,k,k,k,k];C.set(A,g*w*k)}const X=new Qs;X.setAttribute("position",new Ya(I,b)),X.setAttribute("uv",new Ya(L,y)),X.setAttribute("faceIndex",new Ya(C,g)),e.push(X),s>kc&&s--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function ly(a,e,n){const i=new ic(a,e,n);return i.texture.mapping=Sm,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Ap(a,e,n,i,s){a.viewport.set(e,n,i,s),a.scissor.set(e,n,i,s)}function Yb(a,e,n){const i=new Float32Array(Yu),s=new Pe(0,1,0);return new Ks({name:"SphericalGaussianBlur",defines:{n:Yu,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:ax(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Xs,depthTest:!1,depthWrite:!1})}function uy(){return new Ks({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ax(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Xs,depthTest:!1,depthWrite:!1})}function cy(){return new Ks({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ax(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Xs,depthTest:!1,depthWrite:!1})}function ax(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function $b(a){let e=new WeakMap,n=null;function i(f){if(f&&f.isTexture){const p=f.mapping,m=p===R_||p===C_,v=p===qc||p===Yc;if(m||v){let x=e.get(f);const _=x!==void 0?x.texture.pmremVersion:0;if(f.isRenderTargetTexture&&f.pmremVersion!==_)return n===null&&(n=new sy(a)),x=m?n.fromEquirectangular(f,x):n.fromCubemap(f,x),x.texture.pmremVersion=f.pmremVersion,e.set(f,x),x.texture;if(x!==void 0)return x.texture;{const S=f.image;return m&&S&&S.height>0||v&&S&&s(S)?(n===null&&(n=new sy(a)),x=m?n.fromEquirectangular(f):n.fromCubemap(f),x.texture.pmremVersion=f.pmremVersion,e.set(f,x),f.addEventListener("dispose",u),x.texture):null}}}return f}function s(f){let p=0;const m=6;for(let v=0;v<m;v++)f[v]!==void 0&&p++;return p===m}function u(f){const p=f.target;p.removeEventListener("dispose",u);const m=e.get(p);m!==void 0&&(e.delete(p),m.dispose())}function d(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:d}}function Kb(a){const e={};function n(i){if(e[i]!==void 0)return e[i];let s;switch(i){case"WEBGL_depth_texture":s=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=a.getExtension(i)}return e[i]=s,s}return{has:function(i){return n(i)!==null},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(i){const s=n(i);return s===null&&Fc("THREE.WebGLRenderer: "+i+" extension not supported."),s}}}function Zb(a,e,n,i){const s={},u=new WeakMap;function d(x){const _=x.target;_.index!==null&&e.remove(_.index);for(const w in _.attributes)e.remove(_.attributes[w]);_.removeEventListener("dispose",d),delete s[_.id];const S=u.get(_);S&&(e.remove(S),u.delete(_)),i.releaseStatesOfGeometry(_),_.isInstancedBufferGeometry===!0&&delete _._maxInstanceCount,n.memory.geometries--}function f(x,_){return s[_.id]===!0||(_.addEventListener("dispose",d),s[_.id]=!0,n.memory.geometries++),_}function p(x){const _=x.attributes;for(const S in _)e.update(_[S],a.ARRAY_BUFFER)}function m(x){const _=[],S=x.index,w=x.attributes.position;let b=0;if(S!==null){const I=S.array;b=S.version;for(let L=0,C=I.length;L<C;L+=3){const X=I[L+0],k=I[L+1],F=I[L+2];_.push(X,k,k,F,F,X)}}else if(w!==void 0){const I=w.array;b=w.version;for(let L=0,C=I.length/3-1;L<C;L+=3){const X=L+0,k=L+1,F=L+2;_.push(X,k,k,F,F,X)}}else return;const y=new(o1(_)?f1:d1)(_,1);y.version=b;const g=u.get(x);g&&e.remove(g),u.set(x,y)}function v(x){const _=u.get(x);if(_){const S=x.index;S!==null&&_.version<S.version&&m(x)}else m(x);return u.get(x)}return{get:f,update:p,getWireframeAttribute:v}}function Jb(a,e,n){let i;function s(_){i=_}let u,d;function f(_){u=_.type,d=_.bytesPerElement}function p(_,S){a.drawElements(i,S,u,_*d),n.update(S,i,1)}function m(_,S,w){w!==0&&(a.drawElementsInstanced(i,S,u,_*d,w),n.update(S,i,w))}function v(_,S,w){if(w===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,S,0,u,_,0,w);let y=0;for(let g=0;g<w;g++)y+=S[g];n.update(y,i,1)}function x(_,S,w,b){if(w===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let g=0;g<_.length;g++)m(_[g]/d,S[g],b[g]);else{y.multiDrawElementsInstancedWEBGL(i,S,0,u,_,0,b,0,w);let g=0;for(let I=0;I<w;I++)g+=S[I]*b[I];n.update(g,i,1)}}this.setMode=s,this.setIndex=f,this.render=p,this.renderInstances=m,this.renderMultiDraw=v,this.renderMultiDrawInstances=x}function Qb(a){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(u,d,f){switch(n.calls++,d){case a.TRIANGLES:n.triangles+=f*(u/3);break;case a.LINES:n.lines+=f*(u/2);break;case a.LINE_STRIP:n.lines+=f*(u-1);break;case a.LINE_LOOP:n.lines+=f*u;break;case a.POINTS:n.points+=f*u;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",d);break}}function s(){n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:s,update:i}}function eA(a,e,n){const i=new WeakMap,s=new Jn;function u(d,f,p){const m=d.morphTargetInfluences,v=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,x=v!==void 0?v.length:0;let _=i.get(f);if(_===void 0||_.count!==x){let A=function(){j.dispose(),i.delete(f),f.removeEventListener("dispose",A)};var S=A;_!==void 0&&_.texture.dispose();const w=f.morphAttributes.position!==void 0,b=f.morphAttributes.normal!==void 0,y=f.morphAttributes.color!==void 0,g=f.morphAttributes.position||[],I=f.morphAttributes.normal||[],L=f.morphAttributes.color||[];let C=0;w===!0&&(C=1),b===!0&&(C=2),y===!0&&(C=3);let X=f.attributes.position.count*C,k=1;X>e.maxTextureSize&&(k=Math.ceil(X/e.maxTextureSize),X=e.maxTextureSize);const F=new Float32Array(X*k*4*x),j=new l1(F,X,k,x);j.type=xs,j.needsUpdate=!0;const R=C*4;for(let V=0;V<x;V++){const ie=g[V],ee=I[V],se=L[V],he=X*k*4*V;for(let oe=0;oe<ie.count;oe++){const ue=oe*R;w===!0&&(s.fromBufferAttribute(ie,oe),F[he+ue+0]=s.x,F[he+ue+1]=s.y,F[he+ue+2]=s.z,F[he+ue+3]=0),b===!0&&(s.fromBufferAttribute(ee,oe),F[he+ue+4]=s.x,F[he+ue+5]=s.y,F[he+ue+6]=s.z,F[he+ue+7]=0),y===!0&&(s.fromBufferAttribute(se,oe),F[he+ue+8]=s.x,F[he+ue+9]=s.y,F[he+ue+10]=s.z,F[he+ue+11]=se.itemSize===4?s.w:1)}}_={count:x,texture:j,size:new Ln(X,k)},i.set(f,_),f.addEventListener("dispose",A)}if(d.isInstancedMesh===!0&&d.morphTexture!==null)p.getUniforms().setValue(a,"morphTexture",d.morphTexture,n);else{let w=0;for(let y=0;y<m.length;y++)w+=m[y];const b=f.morphTargetsRelative?1:1-w;p.getUniforms().setValue(a,"morphTargetBaseInfluence",b),p.getUniforms().setValue(a,"morphTargetInfluences",m)}p.getUniforms().setValue(a,"morphTargetsTexture",_.texture,n),p.getUniforms().setValue(a,"morphTargetsTextureSize",_.size)}return{update:u}}function tA(a,e,n,i){let s=new WeakMap;function u(p){const m=i.render.frame,v=p.geometry,x=e.get(p,v);if(s.get(x)!==m&&(e.update(x),s.set(x,m)),p.isInstancedMesh&&(p.hasEventListener("dispose",f)===!1&&p.addEventListener("dispose",f),s.get(p)!==m&&(n.update(p.instanceMatrix,a.ARRAY_BUFFER),p.instanceColor!==null&&n.update(p.instanceColor,a.ARRAY_BUFFER),s.set(p,m))),p.isSkinnedMesh){const _=p.skeleton;s.get(_)!==m&&(_.update(),s.set(_,m))}return x}function d(){s=new WeakMap}function f(p){const m=p.target;m.removeEventListener("dispose",f),n.remove(m.instanceMatrix),m.instanceColor!==null&&n.remove(m.instanceColor)}return{update:u,dispose:d}}const x1=new pi,dy=new v1(1,1),y1=new l1,S1=new IE,M1=new m1,fy=[],hy=[],py=new Float32Array(16),my=new Float32Array(9),gy=new Float32Array(4);function sd(a,e,n){const i=a[0];if(i<=0||i>0)return a;const s=e*n;let u=fy[s];if(u===void 0&&(u=new Float32Array(s),fy[s]=u),e!==0){i.toArray(u,0);for(let d=1,f=0;d!==e;++d)f+=n,a[d].toArray(u,f)}return u}function pr(a,e){if(a.length!==e.length)return!1;for(let n=0,i=a.length;n<i;n++)if(a[n]!==e[n])return!1;return!0}function mr(a,e){for(let n=0,i=e.length;n<i;n++)a[n]=e[n]}function Tm(a,e){let n=hy[e];n===void 0&&(n=new Int32Array(e),hy[e]=n);for(let i=0;i!==e;++i)n[i]=a.allocateTextureUnit();return n}function nA(a,e){const n=this.cache;n[0]!==e&&(a.uniform1f(this.addr,e),n[0]=e)}function rA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(a.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(pr(n,e))return;a.uniform2fv(this.addr,e),mr(n,e)}}function iA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(a.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(a.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(pr(n,e))return;a.uniform3fv(this.addr,e),mr(n,e)}}function aA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(a.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(pr(n,e))return;a.uniform4fv(this.addr,e),mr(n,e)}}function oA(a,e){const n=this.cache,i=e.elements;if(i===void 0){if(pr(n,e))return;a.uniformMatrix2fv(this.addr,!1,e),mr(n,e)}else{if(pr(n,i))return;gy.set(i),a.uniformMatrix2fv(this.addr,!1,gy),mr(n,i)}}function sA(a,e){const n=this.cache,i=e.elements;if(i===void 0){if(pr(n,e))return;a.uniformMatrix3fv(this.addr,!1,e),mr(n,e)}else{if(pr(n,i))return;my.set(i),a.uniformMatrix3fv(this.addr,!1,my),mr(n,i)}}function lA(a,e){const n=this.cache,i=e.elements;if(i===void 0){if(pr(n,e))return;a.uniformMatrix4fv(this.addr,!1,e),mr(n,e)}else{if(pr(n,i))return;py.set(i),a.uniformMatrix4fv(this.addr,!1,py),mr(n,i)}}function uA(a,e){const n=this.cache;n[0]!==e&&(a.uniform1i(this.addr,e),n[0]=e)}function cA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(a.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(pr(n,e))return;a.uniform2iv(this.addr,e),mr(n,e)}}function dA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(a.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(pr(n,e))return;a.uniform3iv(this.addr,e),mr(n,e)}}function fA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(a.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(pr(n,e))return;a.uniform4iv(this.addr,e),mr(n,e)}}function hA(a,e){const n=this.cache;n[0]!==e&&(a.uniform1ui(this.addr,e),n[0]=e)}function pA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(a.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(pr(n,e))return;a.uniform2uiv(this.addr,e),mr(n,e)}}function mA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(a.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(pr(n,e))return;a.uniform3uiv(this.addr,e),mr(n,e)}}function gA(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(a.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(pr(n,e))return;a.uniform4uiv(this.addr,e),mr(n,e)}}function vA(a,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(a.uniform1i(this.addr,s),i[0]=s);let u;this.type===a.SAMPLER_2D_SHADOW?(dy.compareFunction=a1,u=dy):u=x1,n.setTexture2D(e||u,s)}function _A(a,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(a.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||S1,s)}function xA(a,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(a.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(e||M1,s)}function yA(a,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(a.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||y1,s)}function SA(a){switch(a){case 5126:return nA;case 35664:return rA;case 35665:return iA;case 35666:return aA;case 35674:return oA;case 35675:return sA;case 35676:return lA;case 5124:case 35670:return uA;case 35667:case 35671:return cA;case 35668:case 35672:return dA;case 35669:case 35673:return fA;case 5125:return hA;case 36294:return pA;case 36295:return mA;case 36296:return gA;case 35678:case 36198:case 36298:case 36306:case 35682:return vA;case 35679:case 36299:case 36307:return _A;case 35680:case 36300:case 36308:case 36293:return xA;case 36289:case 36303:case 36311:case 36292:return yA}}function MA(a,e){a.uniform1fv(this.addr,e)}function EA(a,e){const n=sd(e,this.size,2);a.uniform2fv(this.addr,n)}function TA(a,e){const n=sd(e,this.size,3);a.uniform3fv(this.addr,n)}function wA(a,e){const n=sd(e,this.size,4);a.uniform4fv(this.addr,n)}function bA(a,e){const n=sd(e,this.size,4);a.uniformMatrix2fv(this.addr,!1,n)}function AA(a,e){const n=sd(e,this.size,9);a.uniformMatrix3fv(this.addr,!1,n)}function RA(a,e){const n=sd(e,this.size,16);a.uniformMatrix4fv(this.addr,!1,n)}function CA(a,e){a.uniform1iv(this.addr,e)}function PA(a,e){a.uniform2iv(this.addr,e)}function DA(a,e){a.uniform3iv(this.addr,e)}function LA(a,e){a.uniform4iv(this.addr,e)}function UA(a,e){a.uniform1uiv(this.addr,e)}function IA(a,e){a.uniform2uiv(this.addr,e)}function NA(a,e){a.uniform3uiv(this.addr,e)}function FA(a,e){a.uniform4uiv(this.addr,e)}function OA(a,e,n){const i=this.cache,s=e.length,u=Tm(n,s);pr(i,u)||(a.uniform1iv(this.addr,u),mr(i,u));for(let d=0;d!==s;++d)n.setTexture2D(e[d]||x1,u[d])}function kA(a,e,n){const i=this.cache,s=e.length,u=Tm(n,s);pr(i,u)||(a.uniform1iv(this.addr,u),mr(i,u));for(let d=0;d!==s;++d)n.setTexture3D(e[d]||S1,u[d])}function zA(a,e,n){const i=this.cache,s=e.length,u=Tm(n,s);pr(i,u)||(a.uniform1iv(this.addr,u),mr(i,u));for(let d=0;d!==s;++d)n.setTextureCube(e[d]||M1,u[d])}function BA(a,e,n){const i=this.cache,s=e.length,u=Tm(n,s);pr(i,u)||(a.uniform1iv(this.addr,u),mr(i,u));for(let d=0;d!==s;++d)n.setTexture2DArray(e[d]||y1,u[d])}function HA(a){switch(a){case 5126:return MA;case 35664:return EA;case 35665:return TA;case 35666:return wA;case 35674:return bA;case 35675:return AA;case 35676:return RA;case 5124:case 35670:return CA;case 35667:case 35671:return PA;case 35668:case 35672:return DA;case 35669:case 35673:return LA;case 5125:return UA;case 36294:return IA;case 36295:return NA;case 36296:return FA;case 35678:case 36198:case 36298:case 36306:case 35682:return OA;case 35679:case 36299:case 36307:return kA;case 35680:case 36300:case 36308:case 36293:return zA;case 36289:case 36303:case 36311:case 36292:return BA}}class VA{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.setValue=SA(n.type)}}class GA{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.size=n.size,this.setValue=HA(n.type)}}class WA{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,n,i){const s=this.seq;for(let u=0,d=s.length;u!==d;++u){const f=s[u];f.setValue(e,n[f.id],i)}}}const Bv=/(\w+)(\])?(\[|\.)?/g;function vy(a,e){a.seq.push(e),a.map[e.id]=e}function XA(a,e,n){const i=a.name,s=i.length;for(Bv.lastIndex=0;;){const u=Bv.exec(i),d=Bv.lastIndex;let f=u[1];const p=u[2]==="]",m=u[3];if(p&&(f=f|0),m===void 0||m==="["&&d+2===s){vy(n,m===void 0?new VA(f,a,e):new GA(f,a,e));break}else{let x=n.map[f];x===void 0&&(x=new WA(f),vy(n,x)),n=x}}}class rm{constructor(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(let s=0;s<i;++s){const u=e.getActiveUniform(n,s),d=e.getUniformLocation(n,u.name);XA(u,d,this)}}setValue(e,n,i,s){const u=this.map[n];u!==void 0&&u.setValue(e,i,s)}setOptional(e,n,i){const s=n[i];s!==void 0&&this.setValue(e,i,s)}static upload(e,n,i,s){for(let u=0,d=n.length;u!==d;++u){const f=n[u],p=i[f.id];p.needsUpdate!==!1&&f.setValue(e,p.value,s)}}static seqWithValue(e,n){const i=[];for(let s=0,u=e.length;s!==u;++s){const d=e[s];d.id in n&&i.push(d)}return i}}function _y(a,e,n){const i=a.createShader(e);return a.shaderSource(i,n),a.compileShader(i),i}const jA=37297;let qA=0;function YA(a,e){const n=a.split(`
`),i=[],s=Math.max(e-6,0),u=Math.min(e+6,n.length);for(let d=s;d<u;d++){const f=d+1;i.push(`${f===e?">":" "} ${f}: ${n[d]}`)}return i.join(`
`)}const xy=new Bt;function $A(a){un._getMatrix(xy,un.workingColorSpace,a);const e=`mat3( ${xy.elements.map(n=>n.toFixed(4))} )`;switch(un.getTransfer(a)){case hm:return[e,"LinearTransferOETF"];case Tn:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",a),[e,"LinearTransferOETF"]}}function yy(a,e,n){const i=a.getShaderParameter(e,a.COMPILE_STATUS),s=a.getShaderInfoLog(e).trim();if(i&&s==="")return"";const u=/ERROR: 0:(\d+)/.exec(s);if(u){const d=parseInt(u[1]);return n.toUpperCase()+`

`+s+`

`+YA(a.getShaderSource(e),d)}else return s}function KA(a,e){const n=$A(e);return[`vec4 ${a}( vec4 value ) {`,`	return ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join(`
`)}function ZA(a,e){let n;switch(e){case aE:n="Linear";break;case oE:n="Reinhard";break;case sE:n="Cineon";break;case lE:n="ACESFilmic";break;case cE:n="AgX";break;case dE:n="Neutral";break;case uE:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+a+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const Rp=new Pe;function JA(){un.getLuminanceCoefficients(Rp);const a=Rp.x.toFixed(4),e=Rp.y.toFixed(4),n=Rp.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${a}, ${e}, ${n} );`,"	return dot( weights, rgb );","}"].join(`
`)}function QA(a){return[a.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",a.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(jh).join(`
`)}function eR(a){const e=[];for(const n in a){const i=a[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function tR(a,e){const n={},i=a.getProgramParameter(e,a.ACTIVE_ATTRIBUTES);for(let s=0;s<i;s++){const u=a.getActiveAttrib(e,s),d=u.name;let f=1;u.type===a.FLOAT_MAT2&&(f=2),u.type===a.FLOAT_MAT3&&(f=3),u.type===a.FLOAT_MAT4&&(f=4),n[d]={type:u.type,location:a.getAttribLocation(e,d),locationSize:f}}return n}function jh(a){return a!==""}function Sy(a,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return a.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function My(a,e){return a.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const nR=/^[ \t]*#include +<([\w\d./]+)>/gm;function a0(a){return a.replace(nR,iR)}const rR=new Map;function iR(a,e){let n=Vt[e];if(n===void 0){const i=rR.get(e);if(i!==void 0)n=Vt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return a0(n)}const aR=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ey(a){return a.replace(aR,oR)}function oR(a,e,n,i){let s="";for(let u=parseInt(e);u<parseInt(n);u++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+u+" ]").replace(/UNROLLED_LOOP_INDEX/g,u);return s}function Ty(a){let e=`precision ${a.precision} float;
	precision ${a.precision} int;
	precision ${a.precision} sampler2D;
	precision ${a.precision} samplerCube;
	precision ${a.precision} sampler3D;
	precision ${a.precision} sampler2DArray;
	precision ${a.precision} sampler2DShadow;
	precision ${a.precision} samplerCubeShadow;
	precision ${a.precision} sampler2DArrayShadow;
	precision ${a.precision} isampler2D;
	precision ${a.precision} isampler3D;
	precision ${a.precision} isamplerCube;
	precision ${a.precision} isampler2DArray;
	precision ${a.precision} usampler2D;
	precision ${a.precision} usampler3D;
	precision ${a.precision} usamplerCube;
	precision ${a.precision} usampler2DArray;
	`;return a.precision==="highp"?e+=`
#define HIGH_PRECISION`:a.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:a.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function sR(a){let e="SHADOWMAP_TYPE_BASIC";return a.shadowMapType===jS?e="SHADOWMAP_TYPE_PCF":a.shadowMapType===kM?e="SHADOWMAP_TYPE_PCF_SOFT":a.shadowMapType===ms&&(e="SHADOWMAP_TYPE_VSM"),e}function lR(a){let e="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case qc:case Yc:e="ENVMAP_TYPE_CUBE";break;case Sm:e="ENVMAP_TYPE_CUBE_UV";break}return e}function uR(a){let e="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(a.envMapMode){case Yc:e="ENVMAP_MODE_REFRACTION";break}return e}function cR(a){let e="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case qS:e="ENVMAP_BLENDING_MULTIPLY";break;case rE:e="ENVMAP_BLENDING_MIX";break;case iE:e="ENVMAP_BLENDING_ADD";break}return e}function dR(a){const e=a.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function fR(a,e,n,i){const s=a.getContext(),u=n.defines;let d=n.vertexShader,f=n.fragmentShader;const p=sR(n),m=lR(n),v=uR(n),x=cR(n),_=dR(n),S=QA(n),w=eR(u),b=s.createProgram();let y,g,I=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(y=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w].filter(jh).join(`
`),y.length>0&&(y+=`
`),g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w].filter(jh).join(`
`),g.length>0&&(g+=`
`)):(y=[Ty(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+v:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(jh).join(`
`),g=[Ty(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+m:"",n.envMap?"#define "+v:"",n.envMap?"#define "+x:"",_?"#define CUBEUV_TEXEL_WIDTH "+_.texelWidth:"",_?"#define CUBEUV_TEXEL_HEIGHT "+_.texelHeight:"",_?"#define CUBEUV_MAX_MIP "+_.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==js?"#define TONE_MAPPING":"",n.toneMapping!==js?Vt.tonemapping_pars_fragment:"",n.toneMapping!==js?ZA("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Vt.colorspace_pars_fragment,KA("linearToOutputTexel",n.outputColorSpace),JA(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(jh).join(`
`)),d=a0(d),d=Sy(d,n),d=My(d,n),f=a0(f),f=Sy(f,n),f=My(f,n),d=Ey(d),f=Ey(f),n.isRawShaderMaterial!==!0&&(I=`#version 300 es
`,y=[S,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,g=["#define varying in",n.glslVersion===zx?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===zx?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const L=I+y+d,C=I+g+f,X=_y(s,s.VERTEX_SHADER,L),k=_y(s,s.FRAGMENT_SHADER,C);s.attachShader(b,X),s.attachShader(b,k),n.index0AttributeName!==void 0?s.bindAttribLocation(b,0,n.index0AttributeName):n.morphTargets===!0&&s.bindAttribLocation(b,0,"position"),s.linkProgram(b);function F(V){if(a.debug.checkShaderErrors){const ie=s.getProgramInfoLog(b).trim(),ee=s.getShaderInfoLog(X).trim(),se=s.getShaderInfoLog(k).trim();let he=!0,oe=!0;if(s.getProgramParameter(b,s.LINK_STATUS)===!1)if(he=!1,typeof a.debug.onShaderError=="function")a.debug.onShaderError(s,b,X,k);else{const ue=yy(s,X,"vertex"),B=yy(s,k,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(b,s.VALIDATE_STATUS)+`

Material Name: `+V.name+`
Material Type: `+V.type+`

Program Info Log: `+ie+`
`+ue+`
`+B)}else ie!==""?console.warn("THREE.WebGLProgram: Program Info Log:",ie):(ee===""||se==="")&&(oe=!1);oe&&(V.diagnostics={runnable:he,programLog:ie,vertexShader:{log:ee,prefix:y},fragmentShader:{log:se,prefix:g}})}s.deleteShader(X),s.deleteShader(k),j=new rm(s,b),R=tR(s,b)}let j;this.getUniforms=function(){return j===void 0&&F(this),j};let R;this.getAttributes=function(){return R===void 0&&F(this),R};let A=n.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return A===!1&&(A=s.getProgramParameter(b,jA)),A},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(b),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=qA++,this.cacheKey=e,this.usedTimes=1,this.program=b,this.vertexShader=X,this.fragmentShader=k,this}let hR=0;class pR{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,s=this._getShaderStage(n),u=this._getShaderStage(i),d=this._getShaderCacheForMaterial(e);return d.has(s)===!1&&(d.add(s),s.usedTimes++),d.has(u)===!1&&(d.add(u),u.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;let i=n.get(e);return i===void 0&&(i=new Set,n.set(e,i)),i}_getShaderStage(e){const n=this.shaderCache;let i=n.get(e);return i===void 0&&(i=new mR(e),n.set(e,i)),i}}class mR{constructor(e){this.id=hR++,this.code=e,this.usedTimes=0}}function gR(a,e,n,i,s,u,d){const f=new u1,p=new pR,m=new Set,v=[],x=s.logarithmicDepthBuffer,_=s.vertexTextures;let S=s.precision;const w={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(R){return m.add(R),R===0?"uv":`uv${R}`}function y(R,A,V,ie,ee){const se=ie.fog,he=ee.geometry,oe=R.isMeshStandardMaterial?ie.environment:null,ue=(R.isMeshStandardMaterial?n:e).get(R.envMap||oe),B=ue&&ue.mapping===Sm?ue.image.height:null,ae=w[R.type];R.precision!==null&&(S=s.getMaxPrecision(R.precision),S!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",S,"instead."));const re=he.morphAttributes.position||he.morphAttributes.normal||he.morphAttributes.color,U=re!==void 0?re.length:0;let te=0;he.morphAttributes.position!==void 0&&(te=1),he.morphAttributes.normal!==void 0&&(te=2),he.morphAttributes.color!==void 0&&(te=3);let Ue,K,le,Se;if(ae){const ht=Va[ae];Ue=ht.vertexShader,K=ht.fragmentShader}else Ue=R.vertexShader,K=R.fragmentShader,p.update(R),le=p.getVertexShaderID(R),Se=p.getFragmentShaderID(R);const ve=a.getRenderTarget(),Ee=a.state.buffers.depth.getReversed(),Ie=ee.isInstancedMesh===!0,Ze=ee.isBatchedMesh===!0,St=!!R.map,ft=!!R.matcap,Tt=!!ue,O=!!R.aoMap,dn=!!R.lightMap,lt=!!R.bumpMap,ot=!!R.normalMap,Xe=!!R.displacementMap,yt=!!R.emissiveMap,We=!!R.metalnessMap,P=!!R.roughnessMap,E=R.anisotropy>0,$=R.clearcoat>0,fe=R.dispersion>0,ge=R.iridescence>0,ce=R.sheen>0,Ve=R.transmission>0,Te=E&&!!R.anisotropyMap,Ne=$&&!!R.clearcoatMap,at=$&&!!R.clearcoatNormalMap,ye=$&&!!R.clearcoatRoughnessMap,Oe=ge&&!!R.iridescenceMap,Ye=ge&&!!R.iridescenceThicknessMap,Je=ce&&!!R.sheenColorMap,ke=ce&&!!R.sheenRoughnessMap,st=!!R.specularMap,nt=!!R.specularColorMap,xt=!!R.specularIntensityMap,G=Ve&&!!R.transmissionMap,we=Ve&&!!R.thicknessMap,ne=!!R.gradientMap,de=!!R.alphaMap,Re=R.alphaTest>0,be=!!R.alphaHash,it=!!R.extensions;let bt=js;R.toneMapped&&(ve===null||ve.isXRRenderTarget===!0)&&(bt=a.toneMapping);const Wt={shaderID:ae,shaderType:R.type,shaderName:R.name,vertexShader:Ue,fragmentShader:K,defines:R.defines,customVertexShaderID:le,customFragmentShaderID:Se,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:S,batching:Ze,batchingColor:Ze&&ee._colorsTexture!==null,instancing:Ie,instancingColor:Ie&&ee.instanceColor!==null,instancingMorph:Ie&&ee.morphTexture!==null,supportsVertexTextures:_,outputColorSpace:ve===null?a.outputColorSpace:ve.isXRRenderTarget===!0?ve.texture.colorSpace:Zc,alphaToCoverage:!!R.alphaToCoverage,map:St,matcap:ft,envMap:Tt,envMapMode:Tt&&ue.mapping,envMapCubeUVHeight:B,aoMap:O,lightMap:dn,bumpMap:lt,normalMap:ot,displacementMap:_&&Xe,emissiveMap:yt,normalMapObjectSpace:ot&&R.normalMapType===gE,normalMapTangentSpace:ot&&R.normalMapType===mE,metalnessMap:We,roughnessMap:P,anisotropy:E,anisotropyMap:Te,clearcoat:$,clearcoatMap:Ne,clearcoatNormalMap:at,clearcoatRoughnessMap:ye,dispersion:fe,iridescence:ge,iridescenceMap:Oe,iridescenceThicknessMap:Ye,sheen:ce,sheenColorMap:Je,sheenRoughnessMap:ke,specularMap:st,specularColorMap:nt,specularIntensityMap:xt,transmission:Ve,transmissionMap:G,thicknessMap:we,gradientMap:ne,opaque:R.transparent===!1&&R.blending===Bc&&R.alphaToCoverage===!1,alphaMap:de,alphaTest:Re,alphaHash:be,combine:R.combine,mapUv:St&&b(R.map.channel),aoMapUv:O&&b(R.aoMap.channel),lightMapUv:dn&&b(R.lightMap.channel),bumpMapUv:lt&&b(R.bumpMap.channel),normalMapUv:ot&&b(R.normalMap.channel),displacementMapUv:Xe&&b(R.displacementMap.channel),emissiveMapUv:yt&&b(R.emissiveMap.channel),metalnessMapUv:We&&b(R.metalnessMap.channel),roughnessMapUv:P&&b(R.roughnessMap.channel),anisotropyMapUv:Te&&b(R.anisotropyMap.channel),clearcoatMapUv:Ne&&b(R.clearcoatMap.channel),clearcoatNormalMapUv:at&&b(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ye&&b(R.clearcoatRoughnessMap.channel),iridescenceMapUv:Oe&&b(R.iridescenceMap.channel),iridescenceThicknessMapUv:Ye&&b(R.iridescenceThicknessMap.channel),sheenColorMapUv:Je&&b(R.sheenColorMap.channel),sheenRoughnessMapUv:ke&&b(R.sheenRoughnessMap.channel),specularMapUv:st&&b(R.specularMap.channel),specularColorMapUv:nt&&b(R.specularColorMap.channel),specularIntensityMapUv:xt&&b(R.specularIntensityMap.channel),transmissionMapUv:G&&b(R.transmissionMap.channel),thicknessMapUv:we&&b(R.thicknessMap.channel),alphaMapUv:de&&b(R.alphaMap.channel),vertexTangents:!!he.attributes.tangent&&(ot||E),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!he.attributes.color&&he.attributes.color.itemSize===4,pointsUvs:ee.isPoints===!0&&!!he.attributes.uv&&(St||de),fog:!!se,useFog:R.fog===!0,fogExp2:!!se&&se.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:x,reverseDepthBuffer:Ee,skinning:ee.isSkinnedMesh===!0,morphTargets:he.morphAttributes.position!==void 0,morphNormals:he.morphAttributes.normal!==void 0,morphColors:he.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:te,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numLightProbes:A.numLightProbes,numClippingPlanes:d.numPlanes,numClipIntersection:d.numIntersection,dithering:R.dithering,shadowMapEnabled:a.shadowMap.enabled&&V.length>0,shadowMapType:a.shadowMap.type,toneMapping:bt,decodeVideoTexture:St&&R.map.isVideoTexture===!0&&un.getTransfer(R.map.colorSpace)===Tn,decodeVideoTextureEmissive:yt&&R.emissiveMap.isVideoTexture===!0&&un.getTransfer(R.emissiveMap.colorSpace)===Tn,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===vs,flipSided:R.side===hi,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:it&&R.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(it&&R.extensions.multiDraw===!0||Ze)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Wt.vertexUv1s=m.has(1),Wt.vertexUv2s=m.has(2),Wt.vertexUv3s=m.has(3),m.clear(),Wt}function g(R){const A=[];if(R.shaderID?A.push(R.shaderID):(A.push(R.customVertexShaderID),A.push(R.customFragmentShaderID)),R.defines!==void 0)for(const V in R.defines)A.push(V),A.push(R.defines[V]);return R.isRawShaderMaterial===!1&&(I(A,R),L(A,R),A.push(a.outputColorSpace)),A.push(R.customProgramCacheKey),A.join()}function I(R,A){R.push(A.precision),R.push(A.outputColorSpace),R.push(A.envMapMode),R.push(A.envMapCubeUVHeight),R.push(A.mapUv),R.push(A.alphaMapUv),R.push(A.lightMapUv),R.push(A.aoMapUv),R.push(A.bumpMapUv),R.push(A.normalMapUv),R.push(A.displacementMapUv),R.push(A.emissiveMapUv),R.push(A.metalnessMapUv),R.push(A.roughnessMapUv),R.push(A.anisotropyMapUv),R.push(A.clearcoatMapUv),R.push(A.clearcoatNormalMapUv),R.push(A.clearcoatRoughnessMapUv),R.push(A.iridescenceMapUv),R.push(A.iridescenceThicknessMapUv),R.push(A.sheenColorMapUv),R.push(A.sheenRoughnessMapUv),R.push(A.specularMapUv),R.push(A.specularColorMapUv),R.push(A.specularIntensityMapUv),R.push(A.transmissionMapUv),R.push(A.thicknessMapUv),R.push(A.combine),R.push(A.fogExp2),R.push(A.sizeAttenuation),R.push(A.morphTargetsCount),R.push(A.morphAttributeCount),R.push(A.numDirLights),R.push(A.numPointLights),R.push(A.numSpotLights),R.push(A.numSpotLightMaps),R.push(A.numHemiLights),R.push(A.numRectAreaLights),R.push(A.numDirLightShadows),R.push(A.numPointLightShadows),R.push(A.numSpotLightShadows),R.push(A.numSpotLightShadowsWithMaps),R.push(A.numLightProbes),R.push(A.shadowMapType),R.push(A.toneMapping),R.push(A.numClippingPlanes),R.push(A.numClipIntersection),R.push(A.depthPacking)}function L(R,A){f.disableAll(),A.supportsVertexTextures&&f.enable(0),A.instancing&&f.enable(1),A.instancingColor&&f.enable(2),A.instancingMorph&&f.enable(3),A.matcap&&f.enable(4),A.envMap&&f.enable(5),A.normalMapObjectSpace&&f.enable(6),A.normalMapTangentSpace&&f.enable(7),A.clearcoat&&f.enable(8),A.iridescence&&f.enable(9),A.alphaTest&&f.enable(10),A.vertexColors&&f.enable(11),A.vertexAlphas&&f.enable(12),A.vertexUv1s&&f.enable(13),A.vertexUv2s&&f.enable(14),A.vertexUv3s&&f.enable(15),A.vertexTangents&&f.enable(16),A.anisotropy&&f.enable(17),A.alphaHash&&f.enable(18),A.batching&&f.enable(19),A.dispersion&&f.enable(20),A.batchingColor&&f.enable(21),R.push(f.mask),f.disableAll(),A.fog&&f.enable(0),A.useFog&&f.enable(1),A.flatShading&&f.enable(2),A.logarithmicDepthBuffer&&f.enable(3),A.reverseDepthBuffer&&f.enable(4),A.skinning&&f.enable(5),A.morphTargets&&f.enable(6),A.morphNormals&&f.enable(7),A.morphColors&&f.enable(8),A.premultipliedAlpha&&f.enable(9),A.shadowMapEnabled&&f.enable(10),A.doubleSided&&f.enable(11),A.flipSided&&f.enable(12),A.useDepthPacking&&f.enable(13),A.dithering&&f.enable(14),A.transmission&&f.enable(15),A.sheen&&f.enable(16),A.opaque&&f.enable(17),A.pointsUvs&&f.enable(18),A.decodeVideoTexture&&f.enable(19),A.decodeVideoTextureEmissive&&f.enable(20),A.alphaToCoverage&&f.enable(21),R.push(f.mask)}function C(R){const A=w[R.type];let V;if(A){const ie=Va[A];V=qE.clone(ie.uniforms)}else V=R.uniforms;return V}function X(R,A){let V;for(let ie=0,ee=v.length;ie<ee;ie++){const se=v[ie];if(se.cacheKey===A){V=se,++V.usedTimes;break}}return V===void 0&&(V=new fR(a,A,R,u),v.push(V)),V}function k(R){if(--R.usedTimes===0){const A=v.indexOf(R);v[A]=v[v.length-1],v.pop(),R.destroy()}}function F(R){p.remove(R)}function j(){p.dispose()}return{getParameters:y,getProgramCacheKey:g,getUniforms:C,acquireProgram:X,releaseProgram:k,releaseShaderCache:F,programs:v,dispose:j}}function vR(){let a=new WeakMap;function e(d){return a.has(d)}function n(d){let f=a.get(d);return f===void 0&&(f={},a.set(d,f)),f}function i(d){a.delete(d)}function s(d,f,p){a.get(d)[f]=p}function u(){a=new WeakMap}return{has:e,get:n,remove:i,update:s,dispose:u}}function _R(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.material.id!==e.material.id?a.material.id-e.material.id:a.z!==e.z?a.z-e.z:a.id-e.id}function wy(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.z!==e.z?e.z-a.z:a.id-e.id}function by(){const a=[];let e=0;const n=[],i=[],s=[];function u(){e=0,n.length=0,i.length=0,s.length=0}function d(x,_,S,w,b,y){let g=a[e];return g===void 0?(g={id:x.id,object:x,geometry:_,material:S,groupOrder:w,renderOrder:x.renderOrder,z:b,group:y},a[e]=g):(g.id=x.id,g.object=x,g.geometry=_,g.material=S,g.groupOrder=w,g.renderOrder=x.renderOrder,g.z=b,g.group=y),e++,g}function f(x,_,S,w,b,y){const g=d(x,_,S,w,b,y);S.transmission>0?i.push(g):S.transparent===!0?s.push(g):n.push(g)}function p(x,_,S,w,b,y){const g=d(x,_,S,w,b,y);S.transmission>0?i.unshift(g):S.transparent===!0?s.unshift(g):n.unshift(g)}function m(x,_){n.length>1&&n.sort(x||_R),i.length>1&&i.sort(_||wy),s.length>1&&s.sort(_||wy)}function v(){for(let x=e,_=a.length;x<_;x++){const S=a[x];if(S.id===null)break;S.id=null,S.object=null,S.geometry=null,S.material=null,S.group=null}}return{opaque:n,transmissive:i,transparent:s,init:u,push:f,unshift:p,finish:v,sort:m}}function xR(){let a=new WeakMap;function e(i,s){const u=a.get(i);let d;return u===void 0?(d=new by,a.set(i,[d])):s>=u.length?(d=new by,u.push(d)):d=u[s],d}function n(){a=new WeakMap}return{get:e,dispose:n}}function yR(){const a={};return{get:function(e){if(a[e.id]!==void 0)return a[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Pe,color:new bn};break;case"SpotLight":n={position:new Pe,direction:new Pe,color:new bn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Pe,color:new bn,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Pe,skyColor:new bn,groundColor:new bn};break;case"RectAreaLight":n={color:new bn,position:new Pe,halfWidth:new Pe,halfHeight:new Pe};break}return a[e.id]=n,n}}}function SR(){const a={};return{get:function(e){if(a[e.id]!==void 0)return a[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ln};break;case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ln};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ln,shadowCameraNear:1,shadowCameraFar:1e3};break}return a[e.id]=n,n}}}let MR=0;function ER(a,e){return(e.castShadow?2:0)-(a.castShadow?2:0)+(e.map?1:0)-(a.map?1:0)}function TR(a){const e=new yR,n=SR(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let m=0;m<9;m++)i.probe.push(new Pe);const s=new Pe,u=new nr,d=new nr;function f(m){let v=0,x=0,_=0;for(let R=0;R<9;R++)i.probe[R].set(0,0,0);let S=0,w=0,b=0,y=0,g=0,I=0,L=0,C=0,X=0,k=0,F=0;m.sort(ER);for(let R=0,A=m.length;R<A;R++){const V=m[R],ie=V.color,ee=V.intensity,se=V.distance,he=V.shadow&&V.shadow.map?V.shadow.map.texture:null;if(V.isAmbientLight)v+=ie.r*ee,x+=ie.g*ee,_+=ie.b*ee;else if(V.isLightProbe){for(let oe=0;oe<9;oe++)i.probe[oe].addScaledVector(V.sh.coefficients[oe],ee);F++}else if(V.isDirectionalLight){const oe=e.get(V);if(oe.color.copy(V.color).multiplyScalar(V.intensity),V.castShadow){const ue=V.shadow,B=n.get(V);B.shadowIntensity=ue.intensity,B.shadowBias=ue.bias,B.shadowNormalBias=ue.normalBias,B.shadowRadius=ue.radius,B.shadowMapSize=ue.mapSize,i.directionalShadow[S]=B,i.directionalShadowMap[S]=he,i.directionalShadowMatrix[S]=V.shadow.matrix,I++}i.directional[S]=oe,S++}else if(V.isSpotLight){const oe=e.get(V);oe.position.setFromMatrixPosition(V.matrixWorld),oe.color.copy(ie).multiplyScalar(ee),oe.distance=se,oe.coneCos=Math.cos(V.angle),oe.penumbraCos=Math.cos(V.angle*(1-V.penumbra)),oe.decay=V.decay,i.spot[b]=oe;const ue=V.shadow;if(V.map&&(i.spotLightMap[X]=V.map,X++,ue.updateMatrices(V),V.castShadow&&k++),i.spotLightMatrix[b]=ue.matrix,V.castShadow){const B=n.get(V);B.shadowIntensity=ue.intensity,B.shadowBias=ue.bias,B.shadowNormalBias=ue.normalBias,B.shadowRadius=ue.radius,B.shadowMapSize=ue.mapSize,i.spotShadow[b]=B,i.spotShadowMap[b]=he,C++}b++}else if(V.isRectAreaLight){const oe=e.get(V);oe.color.copy(ie).multiplyScalar(ee),oe.halfWidth.set(V.width*.5,0,0),oe.halfHeight.set(0,V.height*.5,0),i.rectArea[y]=oe,y++}else if(V.isPointLight){const oe=e.get(V);if(oe.color.copy(V.color).multiplyScalar(V.intensity),oe.distance=V.distance,oe.decay=V.decay,V.castShadow){const ue=V.shadow,B=n.get(V);B.shadowIntensity=ue.intensity,B.shadowBias=ue.bias,B.shadowNormalBias=ue.normalBias,B.shadowRadius=ue.radius,B.shadowMapSize=ue.mapSize,B.shadowCameraNear=ue.camera.near,B.shadowCameraFar=ue.camera.far,i.pointShadow[w]=B,i.pointShadowMap[w]=he,i.pointShadowMatrix[w]=V.shadow.matrix,L++}i.point[w]=oe,w++}else if(V.isHemisphereLight){const oe=e.get(V);oe.skyColor.copy(V.color).multiplyScalar(ee),oe.groundColor.copy(V.groundColor).multiplyScalar(ee),i.hemi[g]=oe,g++}}y>0&&(a.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ct.LTC_FLOAT_1,i.rectAreaLTC2=ct.LTC_FLOAT_2):(i.rectAreaLTC1=ct.LTC_HALF_1,i.rectAreaLTC2=ct.LTC_HALF_2)),i.ambient[0]=v,i.ambient[1]=x,i.ambient[2]=_;const j=i.hash;(j.directionalLength!==S||j.pointLength!==w||j.spotLength!==b||j.rectAreaLength!==y||j.hemiLength!==g||j.numDirectionalShadows!==I||j.numPointShadows!==L||j.numSpotShadows!==C||j.numSpotMaps!==X||j.numLightProbes!==F)&&(i.directional.length=S,i.spot.length=b,i.rectArea.length=y,i.point.length=w,i.hemi.length=g,i.directionalShadow.length=I,i.directionalShadowMap.length=I,i.pointShadow.length=L,i.pointShadowMap.length=L,i.spotShadow.length=C,i.spotShadowMap.length=C,i.directionalShadowMatrix.length=I,i.pointShadowMatrix.length=L,i.spotLightMatrix.length=C+X-k,i.spotLightMap.length=X,i.numSpotLightShadowsWithMaps=k,i.numLightProbes=F,j.directionalLength=S,j.pointLength=w,j.spotLength=b,j.rectAreaLength=y,j.hemiLength=g,j.numDirectionalShadows=I,j.numPointShadows=L,j.numSpotShadows=C,j.numSpotMaps=X,j.numLightProbes=F,i.version=MR++)}function p(m,v){let x=0,_=0,S=0,w=0,b=0;const y=v.matrixWorldInverse;for(let g=0,I=m.length;g<I;g++){const L=m[g];if(L.isDirectionalLight){const C=i.directional[x];C.direction.setFromMatrixPosition(L.matrixWorld),s.setFromMatrixPosition(L.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(y),x++}else if(L.isSpotLight){const C=i.spot[S];C.position.setFromMatrixPosition(L.matrixWorld),C.position.applyMatrix4(y),C.direction.setFromMatrixPosition(L.matrixWorld),s.setFromMatrixPosition(L.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(y),S++}else if(L.isRectAreaLight){const C=i.rectArea[w];C.position.setFromMatrixPosition(L.matrixWorld),C.position.applyMatrix4(y),d.identity(),u.copy(L.matrixWorld),u.premultiply(y),d.extractRotation(u),C.halfWidth.set(L.width*.5,0,0),C.halfHeight.set(0,L.height*.5,0),C.halfWidth.applyMatrix4(d),C.halfHeight.applyMatrix4(d),w++}else if(L.isPointLight){const C=i.point[_];C.position.setFromMatrixPosition(L.matrixWorld),C.position.applyMatrix4(y),_++}else if(L.isHemisphereLight){const C=i.hemi[b];C.direction.setFromMatrixPosition(L.matrixWorld),C.direction.transformDirection(y),b++}}}return{setup:f,setupView:p,state:i}}function Ay(a){const e=new TR(a),n=[],i=[];function s(v){m.camera=v,n.length=0,i.length=0}function u(v){n.push(v)}function d(v){i.push(v)}function f(){e.setup(n)}function p(v){e.setupView(n,v)}const m={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:s,state:m,setupLights:f,setupLightsView:p,pushLight:u,pushShadow:d}}function wR(a){let e=new WeakMap;function n(s,u=0){const d=e.get(s);let f;return d===void 0?(f=new Ay(a),e.set(s,[f])):u>=d.length?(f=new Ay(a),d.push(f)):f=d[u],f}function i(){e=new WeakMap}return{get:n,dispose:i}}const bR=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,AR=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function RR(a,e,n){let i=new g1;const s=new Ln,u=new Ln,d=new Jn,f=new tT({depthPacking:pE}),p=new nT,m={},v=n.maxTextureSize,x={[$s]:hi,[hi]:$s,[vs]:vs},_=new Ks({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ln},radius:{value:4}},vertexShader:bR,fragmentShader:AR}),S=_.clone();S.defines.HORIZONTAL_PASS=1;const w=new Qs;w.setAttribute("position",new Ya(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new Xa(w,_),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=jS;let g=this.type;this.render=function(k,F,j){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||k.length===0)return;const R=a.getRenderTarget(),A=a.getActiveCubeFace(),V=a.getActiveMipmapLevel(),ie=a.state;ie.setBlending(Xs),ie.buffers.color.setClear(1,1,1,1),ie.buffers.depth.setTest(!0),ie.setScissorTest(!1);const ee=g!==ms&&this.type===ms,se=g===ms&&this.type!==ms;for(let he=0,oe=k.length;he<oe;he++){const ue=k[he],B=ue.shadow;if(B===void 0){console.warn("THREE.WebGLShadowMap:",ue,"has no shadow.");continue}if(B.autoUpdate===!1&&B.needsUpdate===!1)continue;s.copy(B.mapSize);const ae=B.getFrameExtents();if(s.multiply(ae),u.copy(B.mapSize),(s.x>v||s.y>v)&&(s.x>v&&(u.x=Math.floor(v/ae.x),s.x=u.x*ae.x,B.mapSize.x=u.x),s.y>v&&(u.y=Math.floor(v/ae.y),s.y=u.y*ae.y,B.mapSize.y=u.y)),B.map===null||ee===!0||se===!0){const U=this.type!==ms?{minFilter:Ba,magFilter:Ba}:{};B.map!==null&&B.map.dispose(),B.map=new ic(s.x,s.y,U),B.map.texture.name=ue.name+".shadowMap",B.camera.updateProjectionMatrix()}a.setRenderTarget(B.map),a.clear();const re=B.getViewportCount();for(let U=0;U<re;U++){const te=B.getViewport(U);d.set(u.x*te.x,u.y*te.y,u.x*te.z,u.y*te.w),ie.viewport(d),B.updateMatrices(ue,U),i=B.getFrustum(),C(F,j,B.camera,ue,this.type)}B.isPointLightShadow!==!0&&this.type===ms&&I(B,j),B.needsUpdate=!1}g=this.type,y.needsUpdate=!1,a.setRenderTarget(R,A,V)};function I(k,F){const j=e.update(b);_.defines.VSM_SAMPLES!==k.blurSamples&&(_.defines.VSM_SAMPLES=k.blurSamples,S.defines.VSM_SAMPLES=k.blurSamples,_.needsUpdate=!0,S.needsUpdate=!0),k.mapPass===null&&(k.mapPass=new ic(s.x,s.y)),_.uniforms.shadow_pass.value=k.map.texture,_.uniforms.resolution.value=k.mapSize,_.uniforms.radius.value=k.radius,a.setRenderTarget(k.mapPass),a.clear(),a.renderBufferDirect(F,null,j,_,b,null),S.uniforms.shadow_pass.value=k.mapPass.texture,S.uniforms.resolution.value=k.mapSize,S.uniforms.radius.value=k.radius,a.setRenderTarget(k.map),a.clear(),a.renderBufferDirect(F,null,j,S,b,null)}function L(k,F,j,R){let A=null;const V=j.isPointLight===!0?k.customDistanceMaterial:k.customDepthMaterial;if(V!==void 0)A=V;else if(A=j.isPointLight===!0?p:f,a.localClippingEnabled&&F.clipShadows===!0&&Array.isArray(F.clippingPlanes)&&F.clippingPlanes.length!==0||F.displacementMap&&F.displacementScale!==0||F.alphaMap&&F.alphaTest>0||F.map&&F.alphaTest>0){const ie=A.uuid,ee=F.uuid;let se=m[ie];se===void 0&&(se={},m[ie]=se);let he=se[ee];he===void 0&&(he=A.clone(),se[ee]=he,F.addEventListener("dispose",X)),A=he}if(A.visible=F.visible,A.wireframe=F.wireframe,R===ms?A.side=F.shadowSide!==null?F.shadowSide:F.side:A.side=F.shadowSide!==null?F.shadowSide:x[F.side],A.alphaMap=F.alphaMap,A.alphaTest=F.alphaTest,A.map=F.map,A.clipShadows=F.clipShadows,A.clippingPlanes=F.clippingPlanes,A.clipIntersection=F.clipIntersection,A.displacementMap=F.displacementMap,A.displacementScale=F.displacementScale,A.displacementBias=F.displacementBias,A.wireframeLinewidth=F.wireframeLinewidth,A.linewidth=F.linewidth,j.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const ie=a.properties.get(A);ie.light=j}return A}function C(k,F,j,R,A){if(k.visible===!1)return;if(k.layers.test(F.layers)&&(k.isMesh||k.isLine||k.isPoints)&&(k.castShadow||k.receiveShadow&&A===ms)&&(!k.frustumCulled||i.intersectsObject(k))){k.modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,k.matrixWorld);const ee=e.update(k),se=k.material;if(Array.isArray(se)){const he=ee.groups;for(let oe=0,ue=he.length;oe<ue;oe++){const B=he[oe],ae=se[B.materialIndex];if(ae&&ae.visible){const re=L(k,ae,R,A);k.onBeforeShadow(a,k,F,j,ee,re,B),a.renderBufferDirect(j,null,ee,re,k,B),k.onAfterShadow(a,k,F,j,ee,re,B)}}}else if(se.visible){const he=L(k,se,R,A);k.onBeforeShadow(a,k,F,j,ee,he,null),a.renderBufferDirect(j,null,ee,he,k,null),k.onAfterShadow(a,k,F,j,ee,he,null)}}const ie=k.children;for(let ee=0,se=ie.length;ee<se;ee++)C(ie[ee],F,j,R,A)}function X(k){k.target.removeEventListener("dispose",X);for(const j in m){const R=m[j],A=k.target.uuid;A in R&&(R[A].dispose(),delete R[A])}}}const CR={[S_]:M_,[E_]:b_,[T_]:A_,[jc]:w_,[M_]:S_,[b_]:E_,[A_]:T_,[w_]:jc};function PR(a,e){function n(){let G=!1;const we=new Jn;let ne=null;const de=new Jn(0,0,0,0);return{setMask:function(Re){ne!==Re&&!G&&(a.colorMask(Re,Re,Re,Re),ne=Re)},setLocked:function(Re){G=Re},setClear:function(Re,be,it,bt,Wt){Wt===!0&&(Re*=bt,be*=bt,it*=bt),we.set(Re,be,it,bt),de.equals(we)===!1&&(a.clearColor(Re,be,it,bt),de.copy(we))},reset:function(){G=!1,ne=null,de.set(-1,0,0,0)}}}function i(){let G=!1,we=!1,ne=null,de=null,Re=null;return{setReversed:function(be){if(we!==be){const it=e.get("EXT_clip_control");we?it.clipControlEXT(it.LOWER_LEFT_EXT,it.ZERO_TO_ONE_EXT):it.clipControlEXT(it.LOWER_LEFT_EXT,it.NEGATIVE_ONE_TO_ONE_EXT);const bt=Re;Re=null,this.setClear(bt)}we=be},getReversed:function(){return we},setTest:function(be){be?ve(a.DEPTH_TEST):Ee(a.DEPTH_TEST)},setMask:function(be){ne!==be&&!G&&(a.depthMask(be),ne=be)},setFunc:function(be){if(we&&(be=CR[be]),de!==be){switch(be){case S_:a.depthFunc(a.NEVER);break;case M_:a.depthFunc(a.ALWAYS);break;case E_:a.depthFunc(a.LESS);break;case jc:a.depthFunc(a.LEQUAL);break;case T_:a.depthFunc(a.EQUAL);break;case w_:a.depthFunc(a.GEQUAL);break;case b_:a.depthFunc(a.GREATER);break;case A_:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}de=be}},setLocked:function(be){G=be},setClear:function(be){Re!==be&&(we&&(be=1-be),a.clearDepth(be),Re=be)},reset:function(){G=!1,ne=null,de=null,Re=null,we=!1}}}function s(){let G=!1,we=null,ne=null,de=null,Re=null,be=null,it=null,bt=null,Wt=null;return{setTest:function(ht){G||(ht?ve(a.STENCIL_TEST):Ee(a.STENCIL_TEST))},setMask:function(ht){we!==ht&&!G&&(a.stencilMask(ht),we=ht)},setFunc:function(ht,_n,fn){(ne!==ht||de!==_n||Re!==fn)&&(a.stencilFunc(ht,_n,fn),ne=ht,de=_n,Re=fn)},setOp:function(ht,_n,fn){(be!==ht||it!==_n||bt!==fn)&&(a.stencilOp(ht,_n,fn),be=ht,it=_n,bt=fn)},setLocked:function(ht){G=ht},setClear:function(ht){Wt!==ht&&(a.clearStencil(ht),Wt=ht)},reset:function(){G=!1,we=null,ne=null,de=null,Re=null,be=null,it=null,bt=null,Wt=null}}}const u=new n,d=new i,f=new s,p=new WeakMap,m=new WeakMap;let v={},x={},_=new WeakMap,S=[],w=null,b=!1,y=null,g=null,I=null,L=null,C=null,X=null,k=null,F=new bn(0,0,0),j=0,R=!1,A=null,V=null,ie=null,ee=null,se=null;const he=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let oe=!1,ue=0;const B=a.getParameter(a.VERSION);B.indexOf("WebGL")!==-1?(ue=parseFloat(/^WebGL (\d)/.exec(B)[1]),oe=ue>=1):B.indexOf("OpenGL ES")!==-1&&(ue=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),oe=ue>=2);let ae=null,re={};const U=a.getParameter(a.SCISSOR_BOX),te=a.getParameter(a.VIEWPORT),Ue=new Jn().fromArray(U),K=new Jn().fromArray(te);function le(G,we,ne,de){const Re=new Uint8Array(4),be=a.createTexture();a.bindTexture(G,be),a.texParameteri(G,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(G,a.TEXTURE_MAG_FILTER,a.NEAREST);for(let it=0;it<ne;it++)G===a.TEXTURE_3D||G===a.TEXTURE_2D_ARRAY?a.texImage3D(we,0,a.RGBA,1,1,de,0,a.RGBA,a.UNSIGNED_BYTE,Re):a.texImage2D(we+it,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,Re);return be}const Se={};Se[a.TEXTURE_2D]=le(a.TEXTURE_2D,a.TEXTURE_2D,1),Se[a.TEXTURE_CUBE_MAP]=le(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6),Se[a.TEXTURE_2D_ARRAY]=le(a.TEXTURE_2D_ARRAY,a.TEXTURE_2D_ARRAY,1,1),Se[a.TEXTURE_3D]=le(a.TEXTURE_3D,a.TEXTURE_3D,1,1),u.setClear(0,0,0,1),d.setClear(1),f.setClear(0),ve(a.DEPTH_TEST),d.setFunc(jc),lt(!1),ot(Ux),ve(a.CULL_FACE),O(Xs);function ve(G){v[G]!==!0&&(a.enable(G),v[G]=!0)}function Ee(G){v[G]!==!1&&(a.disable(G),v[G]=!1)}function Ie(G,we){return x[G]!==we?(a.bindFramebuffer(G,we),x[G]=we,G===a.DRAW_FRAMEBUFFER&&(x[a.FRAMEBUFFER]=we),G===a.FRAMEBUFFER&&(x[a.DRAW_FRAMEBUFFER]=we),!0):!1}function Ze(G,we){let ne=S,de=!1;if(G){ne=_.get(we),ne===void 0&&(ne=[],_.set(we,ne));const Re=G.textures;if(ne.length!==Re.length||ne[0]!==a.COLOR_ATTACHMENT0){for(let be=0,it=Re.length;be<it;be++)ne[be]=a.COLOR_ATTACHMENT0+be;ne.length=Re.length,de=!0}}else ne[0]!==a.BACK&&(ne[0]=a.BACK,de=!0);de&&a.drawBuffers(ne)}function St(G){return w!==G?(a.useProgram(G),w=G,!0):!1}const ft={[qu]:a.FUNC_ADD,[BM]:a.FUNC_SUBTRACT,[HM]:a.FUNC_REVERSE_SUBTRACT};ft[VM]=a.MIN,ft[GM]=a.MAX;const Tt={[WM]:a.ZERO,[XM]:a.ONE,[jM]:a.SRC_COLOR,[x_]:a.SRC_ALPHA,[JM]:a.SRC_ALPHA_SATURATE,[KM]:a.DST_COLOR,[YM]:a.DST_ALPHA,[qM]:a.ONE_MINUS_SRC_COLOR,[y_]:a.ONE_MINUS_SRC_ALPHA,[ZM]:a.ONE_MINUS_DST_COLOR,[$M]:a.ONE_MINUS_DST_ALPHA,[QM]:a.CONSTANT_COLOR,[eE]:a.ONE_MINUS_CONSTANT_COLOR,[tE]:a.CONSTANT_ALPHA,[nE]:a.ONE_MINUS_CONSTANT_ALPHA};function O(G,we,ne,de,Re,be,it,bt,Wt,ht){if(G===Xs){b===!0&&(Ee(a.BLEND),b=!1);return}if(b===!1&&(ve(a.BLEND),b=!0),G!==zM){if(G!==y||ht!==R){if((g!==qu||C!==qu)&&(a.blendEquation(a.FUNC_ADD),g=qu,C=qu),ht)switch(G){case Bc:a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case Ix:a.blendFunc(a.ONE,a.ONE);break;case Nx:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case Fx:a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Bc:a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case Ix:a.blendFunc(a.SRC_ALPHA,a.ONE);break;case Nx:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case Fx:a.blendFunc(a.ZERO,a.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}I=null,L=null,X=null,k=null,F.set(0,0,0),j=0,y=G,R=ht}return}Re=Re||we,be=be||ne,it=it||de,(we!==g||Re!==C)&&(a.blendEquationSeparate(ft[we],ft[Re]),g=we,C=Re),(ne!==I||de!==L||be!==X||it!==k)&&(a.blendFuncSeparate(Tt[ne],Tt[de],Tt[be],Tt[it]),I=ne,L=de,X=be,k=it),(bt.equals(F)===!1||Wt!==j)&&(a.blendColor(bt.r,bt.g,bt.b,Wt),F.copy(bt),j=Wt),y=G,R=!1}function dn(G,we){G.side===vs?Ee(a.CULL_FACE):ve(a.CULL_FACE);let ne=G.side===hi;we&&(ne=!ne),lt(ne),G.blending===Bc&&G.transparent===!1?O(Xs):O(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),d.setFunc(G.depthFunc),d.setTest(G.depthTest),d.setMask(G.depthWrite),u.setMask(G.colorWrite);const de=G.stencilWrite;f.setTest(de),de&&(f.setMask(G.stencilWriteMask),f.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),f.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),yt(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?ve(a.SAMPLE_ALPHA_TO_COVERAGE):Ee(a.SAMPLE_ALPHA_TO_COVERAGE)}function lt(G){A!==G&&(G?a.frontFace(a.CW):a.frontFace(a.CCW),A=G)}function ot(G){G!==FM?(ve(a.CULL_FACE),G!==V&&(G===Ux?a.cullFace(a.BACK):G===OM?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):Ee(a.CULL_FACE),V=G}function Xe(G){G!==ie&&(oe&&a.lineWidth(G),ie=G)}function yt(G,we,ne){G?(ve(a.POLYGON_OFFSET_FILL),(ee!==we||se!==ne)&&(a.polygonOffset(we,ne),ee=we,se=ne)):Ee(a.POLYGON_OFFSET_FILL)}function We(G){G?ve(a.SCISSOR_TEST):Ee(a.SCISSOR_TEST)}function P(G){G===void 0&&(G=a.TEXTURE0+he-1),ae!==G&&(a.activeTexture(G),ae=G)}function E(G,we,ne){ne===void 0&&(ae===null?ne=a.TEXTURE0+he-1:ne=ae);let de=re[ne];de===void 0&&(de={type:void 0,texture:void 0},re[ne]=de),(de.type!==G||de.texture!==we)&&(ae!==ne&&(a.activeTexture(ne),ae=ne),a.bindTexture(G,we||Se[G]),de.type=G,de.texture=we)}function $(){const G=re[ae];G!==void 0&&G.type!==void 0&&(a.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function fe(){try{a.compressedTexImage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ge(){try{a.compressedTexImage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ce(){try{a.texSubImage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ve(){try{a.texSubImage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Te(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ne(){try{a.compressedTexSubImage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function at(){try{a.texStorage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ye(){try{a.texStorage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Oe(){try{a.texImage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ye(){try{a.texImage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Je(G){Ue.equals(G)===!1&&(a.scissor(G.x,G.y,G.z,G.w),Ue.copy(G))}function ke(G){K.equals(G)===!1&&(a.viewport(G.x,G.y,G.z,G.w),K.copy(G))}function st(G,we){let ne=m.get(we);ne===void 0&&(ne=new WeakMap,m.set(we,ne));let de=ne.get(G);de===void 0&&(de=a.getUniformBlockIndex(we,G.name),ne.set(G,de))}function nt(G,we){const de=m.get(we).get(G);p.get(we)!==de&&(a.uniformBlockBinding(we,de,G.__bindingPointIndex),p.set(we,de))}function xt(){a.disable(a.BLEND),a.disable(a.CULL_FACE),a.disable(a.DEPTH_TEST),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SCISSOR_TEST),a.disable(a.STENCIL_TEST),a.disable(a.SAMPLE_ALPHA_TO_COVERAGE),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ONE,a.ZERO),a.blendFuncSeparate(a.ONE,a.ZERO,a.ONE,a.ZERO),a.blendColor(0,0,0,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(a.LESS),d.setReversed(!1),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(a.ALWAYS,0,4294967295),a.stencilOp(a.KEEP,a.KEEP,a.KEEP),a.clearStencil(0),a.cullFace(a.BACK),a.frontFace(a.CCW),a.polygonOffset(0,0),a.activeTexture(a.TEXTURE0),a.bindFramebuffer(a.FRAMEBUFFER,null),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),a.bindFramebuffer(a.READ_FRAMEBUFFER,null),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),v={},ae=null,re={},x={},_=new WeakMap,S=[],w=null,b=!1,y=null,g=null,I=null,L=null,C=null,X=null,k=null,F=new bn(0,0,0),j=0,R=!1,A=null,V=null,ie=null,ee=null,se=null,Ue.set(0,0,a.canvas.width,a.canvas.height),K.set(0,0,a.canvas.width,a.canvas.height),u.reset(),d.reset(),f.reset()}return{buffers:{color:u,depth:d,stencil:f},enable:ve,disable:Ee,bindFramebuffer:Ie,drawBuffers:Ze,useProgram:St,setBlending:O,setMaterial:dn,setFlipSided:lt,setCullFace:ot,setLineWidth:Xe,setPolygonOffset:yt,setScissorTest:We,activeTexture:P,bindTexture:E,unbindTexture:$,compressedTexImage2D:fe,compressedTexImage3D:ge,texImage2D:Oe,texImage3D:Ye,updateUBOMapping:st,uniformBlockBinding:nt,texStorage2D:at,texStorage3D:ye,texSubImage2D:ce,texSubImage3D:Ve,compressedTexSubImage2D:Te,compressedTexSubImage3D:Ne,scissor:Je,viewport:ke,reset:xt}}function DR(a,e,n,i,s,u,d){const f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),m=new Ln,v=new WeakMap;let x;const _=new WeakMap;let S=!1;try{S=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(P,E){return S?new OffscreenCanvas(P,E):mm("canvas")}function b(P,E,$){let fe=1;const ge=We(P);if((ge.width>$||ge.height>$)&&(fe=$/Math.max(ge.width,ge.height)),fe<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const ce=Math.floor(fe*ge.width),Ve=Math.floor(fe*ge.height);x===void 0&&(x=w(ce,Ve));const Te=E?w(ce,Ve):x;return Te.width=ce,Te.height=Ve,Te.getContext("2d").drawImage(P,0,0,ce,Ve),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ge.width+"x"+ge.height+") to ("+ce+"x"+Ve+")."),Te}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ge.width+"x"+ge.height+")."),P;return P}function y(P){return P.generateMipmaps}function g(P){a.generateMipmap(P)}function I(P){return P.isWebGLCubeRenderTarget?a.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?a.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?a.TEXTURE_2D_ARRAY:a.TEXTURE_2D}function L(P,E,$,fe,ge=!1){if(P!==null){if(a[P]!==void 0)return a[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let ce=E;if(E===a.RED&&($===a.FLOAT&&(ce=a.R32F),$===a.HALF_FLOAT&&(ce=a.R16F),$===a.UNSIGNED_BYTE&&(ce=a.R8)),E===a.RED_INTEGER&&($===a.UNSIGNED_BYTE&&(ce=a.R8UI),$===a.UNSIGNED_SHORT&&(ce=a.R16UI),$===a.UNSIGNED_INT&&(ce=a.R32UI),$===a.BYTE&&(ce=a.R8I),$===a.SHORT&&(ce=a.R16I),$===a.INT&&(ce=a.R32I)),E===a.RG&&($===a.FLOAT&&(ce=a.RG32F),$===a.HALF_FLOAT&&(ce=a.RG16F),$===a.UNSIGNED_BYTE&&(ce=a.RG8)),E===a.RG_INTEGER&&($===a.UNSIGNED_BYTE&&(ce=a.RG8UI),$===a.UNSIGNED_SHORT&&(ce=a.RG16UI),$===a.UNSIGNED_INT&&(ce=a.RG32UI),$===a.BYTE&&(ce=a.RG8I),$===a.SHORT&&(ce=a.RG16I),$===a.INT&&(ce=a.RG32I)),E===a.RGB_INTEGER&&($===a.UNSIGNED_BYTE&&(ce=a.RGB8UI),$===a.UNSIGNED_SHORT&&(ce=a.RGB16UI),$===a.UNSIGNED_INT&&(ce=a.RGB32UI),$===a.BYTE&&(ce=a.RGB8I),$===a.SHORT&&(ce=a.RGB16I),$===a.INT&&(ce=a.RGB32I)),E===a.RGBA_INTEGER&&($===a.UNSIGNED_BYTE&&(ce=a.RGBA8UI),$===a.UNSIGNED_SHORT&&(ce=a.RGBA16UI),$===a.UNSIGNED_INT&&(ce=a.RGBA32UI),$===a.BYTE&&(ce=a.RGBA8I),$===a.SHORT&&(ce=a.RGBA16I),$===a.INT&&(ce=a.RGBA32I)),E===a.RGB&&$===a.UNSIGNED_INT_5_9_9_9_REV&&(ce=a.RGB9_E5),E===a.RGBA){const Ve=ge?hm:un.getTransfer(fe);$===a.FLOAT&&(ce=a.RGBA32F),$===a.HALF_FLOAT&&(ce=a.RGBA16F),$===a.UNSIGNED_BYTE&&(ce=Ve===Tn?a.SRGB8_ALPHA8:a.RGBA8),$===a.UNSIGNED_SHORT_4_4_4_4&&(ce=a.RGBA4),$===a.UNSIGNED_SHORT_5_5_5_1&&(ce=a.RGB5_A1)}return(ce===a.R16F||ce===a.R32F||ce===a.RG16F||ce===a.RG32F||ce===a.RGBA16F||ce===a.RGBA32F)&&e.get("EXT_color_buffer_float"),ce}function C(P,E){let $;return P?E===null||E===rc||E===$c?$=a.DEPTH24_STENCIL8:E===xs?$=a.DEPTH32F_STENCIL8:E===$h&&($=a.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):E===null||E===rc||E===$c?$=a.DEPTH_COMPONENT24:E===xs?$=a.DEPTH_COMPONENT32F:E===$h&&($=a.DEPTH_COMPONENT16),$}function X(P,E){return y(P)===!0||P.isFramebufferTexture&&P.minFilter!==Ba&&P.minFilter!==Wa?Math.log2(Math.max(E.width,E.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?E.mipmaps.length:1}function k(P){const E=P.target;E.removeEventListener("dispose",k),j(E),E.isVideoTexture&&v.delete(E)}function F(P){const E=P.target;E.removeEventListener("dispose",F),A(E)}function j(P){const E=i.get(P);if(E.__webglInit===void 0)return;const $=P.source,fe=_.get($);if(fe){const ge=fe[E.__cacheKey];ge.usedTimes--,ge.usedTimes===0&&R(P),Object.keys(fe).length===0&&_.delete($)}i.remove(P)}function R(P){const E=i.get(P);a.deleteTexture(E.__webglTexture);const $=P.source,fe=_.get($);delete fe[E.__cacheKey],d.memory.textures--}function A(P){const E=i.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),i.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let fe=0;fe<6;fe++){if(Array.isArray(E.__webglFramebuffer[fe]))for(let ge=0;ge<E.__webglFramebuffer[fe].length;ge++)a.deleteFramebuffer(E.__webglFramebuffer[fe][ge]);else a.deleteFramebuffer(E.__webglFramebuffer[fe]);E.__webglDepthbuffer&&a.deleteRenderbuffer(E.__webglDepthbuffer[fe])}else{if(Array.isArray(E.__webglFramebuffer))for(let fe=0;fe<E.__webglFramebuffer.length;fe++)a.deleteFramebuffer(E.__webglFramebuffer[fe]);else a.deleteFramebuffer(E.__webglFramebuffer);if(E.__webglDepthbuffer&&a.deleteRenderbuffer(E.__webglDepthbuffer),E.__webglMultisampledFramebuffer&&a.deleteFramebuffer(E.__webglMultisampledFramebuffer),E.__webglColorRenderbuffer)for(let fe=0;fe<E.__webglColorRenderbuffer.length;fe++)E.__webglColorRenderbuffer[fe]&&a.deleteRenderbuffer(E.__webglColorRenderbuffer[fe]);E.__webglDepthRenderbuffer&&a.deleteRenderbuffer(E.__webglDepthRenderbuffer)}const $=P.textures;for(let fe=0,ge=$.length;fe<ge;fe++){const ce=i.get($[fe]);ce.__webglTexture&&(a.deleteTexture(ce.__webglTexture),d.memory.textures--),i.remove($[fe])}i.remove(P)}let V=0;function ie(){V=0}function ee(){const P=V;return P>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+s.maxTextures),V+=1,P}function se(P){const E=[];return E.push(P.wrapS),E.push(P.wrapT),E.push(P.wrapR||0),E.push(P.magFilter),E.push(P.minFilter),E.push(P.anisotropy),E.push(P.internalFormat),E.push(P.format),E.push(P.type),E.push(P.generateMipmaps),E.push(P.premultiplyAlpha),E.push(P.flipY),E.push(P.unpackAlignment),E.push(P.colorSpace),E.join()}function he(P,E){const $=i.get(P);if(P.isVideoTexture&&Xe(P),P.isRenderTargetTexture===!1&&P.version>0&&$.__version!==P.version){const fe=P.image;if(fe===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(fe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{K($,P,E);return}}n.bindTexture(a.TEXTURE_2D,$.__webglTexture,a.TEXTURE0+E)}function oe(P,E){const $=i.get(P);if(P.version>0&&$.__version!==P.version){K($,P,E);return}n.bindTexture(a.TEXTURE_2D_ARRAY,$.__webglTexture,a.TEXTURE0+E)}function ue(P,E){const $=i.get(P);if(P.version>0&&$.__version!==P.version){K($,P,E);return}n.bindTexture(a.TEXTURE_3D,$.__webglTexture,a.TEXTURE0+E)}function B(P,E){const $=i.get(P);if(P.version>0&&$.__version!==P.version){le($,P,E);return}n.bindTexture(a.TEXTURE_CUBE_MAP,$.__webglTexture,a.TEXTURE0+E)}const ae={[P_]:a.REPEAT,[Zu]:a.CLAMP_TO_EDGE,[D_]:a.MIRRORED_REPEAT},re={[Ba]:a.NEAREST,[fE]:a.NEAREST_MIPMAP_NEAREST,[lp]:a.NEAREST_MIPMAP_LINEAR,[Wa]:a.LINEAR,[fv]:a.LINEAR_MIPMAP_NEAREST,[Ju]:a.LINEAR_MIPMAP_LINEAR},U={[vE]:a.NEVER,[EE]:a.ALWAYS,[_E]:a.LESS,[a1]:a.LEQUAL,[xE]:a.EQUAL,[ME]:a.GEQUAL,[yE]:a.GREATER,[SE]:a.NOTEQUAL};function te(P,E){if(E.type===xs&&e.has("OES_texture_float_linear")===!1&&(E.magFilter===Wa||E.magFilter===fv||E.magFilter===lp||E.magFilter===Ju||E.minFilter===Wa||E.minFilter===fv||E.minFilter===lp||E.minFilter===Ju)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),a.texParameteri(P,a.TEXTURE_WRAP_S,ae[E.wrapS]),a.texParameteri(P,a.TEXTURE_WRAP_T,ae[E.wrapT]),(P===a.TEXTURE_3D||P===a.TEXTURE_2D_ARRAY)&&a.texParameteri(P,a.TEXTURE_WRAP_R,ae[E.wrapR]),a.texParameteri(P,a.TEXTURE_MAG_FILTER,re[E.magFilter]),a.texParameteri(P,a.TEXTURE_MIN_FILTER,re[E.minFilter]),E.compareFunction&&(a.texParameteri(P,a.TEXTURE_COMPARE_MODE,a.COMPARE_REF_TO_TEXTURE),a.texParameteri(P,a.TEXTURE_COMPARE_FUNC,U[E.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(E.magFilter===Ba||E.minFilter!==lp&&E.minFilter!==Ju||E.type===xs&&e.has("OES_texture_float_linear")===!1)return;if(E.anisotropy>1||i.get(E).__currentAnisotropy){const $=e.get("EXT_texture_filter_anisotropic");a.texParameterf(P,$.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,s.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy}}}function Ue(P,E){let $=!1;P.__webglInit===void 0&&(P.__webglInit=!0,E.addEventListener("dispose",k));const fe=E.source;let ge=_.get(fe);ge===void 0&&(ge={},_.set(fe,ge));const ce=se(E);if(ce!==P.__cacheKey){ge[ce]===void 0&&(ge[ce]={texture:a.createTexture(),usedTimes:0},d.memory.textures++,$=!0),ge[ce].usedTimes++;const Ve=ge[P.__cacheKey];Ve!==void 0&&(ge[P.__cacheKey].usedTimes--,Ve.usedTimes===0&&R(E)),P.__cacheKey=ce,P.__webglTexture=ge[ce].texture}return $}function K(P,E,$){let fe=a.TEXTURE_2D;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(fe=a.TEXTURE_2D_ARRAY),E.isData3DTexture&&(fe=a.TEXTURE_3D);const ge=Ue(P,E),ce=E.source;n.bindTexture(fe,P.__webglTexture,a.TEXTURE0+$);const Ve=i.get(ce);if(ce.version!==Ve.__version||ge===!0){n.activeTexture(a.TEXTURE0+$);const Te=un.getPrimaries(un.workingColorSpace),Ne=E.colorSpace===Gs?null:un.getPrimaries(E.colorSpace),at=E.colorSpace===Gs||Te===Ne?a.NONE:a.BROWSER_DEFAULT_WEBGL;a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,E.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,E.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,at);let ye=b(E.image,!1,s.maxTextureSize);ye=yt(E,ye);const Oe=u.convert(E.format,E.colorSpace),Ye=u.convert(E.type);let Je=L(E.internalFormat,Oe,Ye,E.colorSpace,E.isVideoTexture);te(fe,E);let ke;const st=E.mipmaps,nt=E.isVideoTexture!==!0,xt=Ve.__version===void 0||ge===!0,G=ce.dataReady,we=X(E,ye);if(E.isDepthTexture)Je=C(E.format===Kc,E.type),xt&&(nt?n.texStorage2D(a.TEXTURE_2D,1,Je,ye.width,ye.height):n.texImage2D(a.TEXTURE_2D,0,Je,ye.width,ye.height,0,Oe,Ye,null));else if(E.isDataTexture)if(st.length>0){nt&&xt&&n.texStorage2D(a.TEXTURE_2D,we,Je,st[0].width,st[0].height);for(let ne=0,de=st.length;ne<de;ne++)ke=st[ne],nt?G&&n.texSubImage2D(a.TEXTURE_2D,ne,0,0,ke.width,ke.height,Oe,Ye,ke.data):n.texImage2D(a.TEXTURE_2D,ne,Je,ke.width,ke.height,0,Oe,Ye,ke.data);E.generateMipmaps=!1}else nt?(xt&&n.texStorage2D(a.TEXTURE_2D,we,Je,ye.width,ye.height),G&&n.texSubImage2D(a.TEXTURE_2D,0,0,0,ye.width,ye.height,Oe,Ye,ye.data)):n.texImage2D(a.TEXTURE_2D,0,Je,ye.width,ye.height,0,Oe,Ye,ye.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){nt&&xt&&n.texStorage3D(a.TEXTURE_2D_ARRAY,we,Je,st[0].width,st[0].height,ye.depth);for(let ne=0,de=st.length;ne<de;ne++)if(ke=st[ne],E.format!==ka)if(Oe!==null)if(nt){if(G)if(E.layerUpdates.size>0){const Re=ry(ke.width,ke.height,E.format,E.type);for(const be of E.layerUpdates){const it=ke.data.subarray(be*Re/ke.data.BYTES_PER_ELEMENT,(be+1)*Re/ke.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(a.TEXTURE_2D_ARRAY,ne,0,0,be,ke.width,ke.height,1,Oe,it)}E.clearLayerUpdates()}else n.compressedTexSubImage3D(a.TEXTURE_2D_ARRAY,ne,0,0,0,ke.width,ke.height,ye.depth,Oe,ke.data)}else n.compressedTexImage3D(a.TEXTURE_2D_ARRAY,ne,Je,ke.width,ke.height,ye.depth,0,ke.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else nt?G&&n.texSubImage3D(a.TEXTURE_2D_ARRAY,ne,0,0,0,ke.width,ke.height,ye.depth,Oe,Ye,ke.data):n.texImage3D(a.TEXTURE_2D_ARRAY,ne,Je,ke.width,ke.height,ye.depth,0,Oe,Ye,ke.data)}else{nt&&xt&&n.texStorage2D(a.TEXTURE_2D,we,Je,st[0].width,st[0].height);for(let ne=0,de=st.length;ne<de;ne++)ke=st[ne],E.format!==ka?Oe!==null?nt?G&&n.compressedTexSubImage2D(a.TEXTURE_2D,ne,0,0,ke.width,ke.height,Oe,ke.data):n.compressedTexImage2D(a.TEXTURE_2D,ne,Je,ke.width,ke.height,0,ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?G&&n.texSubImage2D(a.TEXTURE_2D,ne,0,0,ke.width,ke.height,Oe,Ye,ke.data):n.texImage2D(a.TEXTURE_2D,ne,Je,ke.width,ke.height,0,Oe,Ye,ke.data)}else if(E.isDataArrayTexture)if(nt){if(xt&&n.texStorage3D(a.TEXTURE_2D_ARRAY,we,Je,ye.width,ye.height,ye.depth),G)if(E.layerUpdates.size>0){const ne=ry(ye.width,ye.height,E.format,E.type);for(const de of E.layerUpdates){const Re=ye.data.subarray(de*ne/ye.data.BYTES_PER_ELEMENT,(de+1)*ne/ye.data.BYTES_PER_ELEMENT);n.texSubImage3D(a.TEXTURE_2D_ARRAY,0,0,0,de,ye.width,ye.height,1,Oe,Ye,Re)}E.clearLayerUpdates()}else n.texSubImage3D(a.TEXTURE_2D_ARRAY,0,0,0,0,ye.width,ye.height,ye.depth,Oe,Ye,ye.data)}else n.texImage3D(a.TEXTURE_2D_ARRAY,0,Je,ye.width,ye.height,ye.depth,0,Oe,Ye,ye.data);else if(E.isData3DTexture)nt?(xt&&n.texStorage3D(a.TEXTURE_3D,we,Je,ye.width,ye.height,ye.depth),G&&n.texSubImage3D(a.TEXTURE_3D,0,0,0,0,ye.width,ye.height,ye.depth,Oe,Ye,ye.data)):n.texImage3D(a.TEXTURE_3D,0,Je,ye.width,ye.height,ye.depth,0,Oe,Ye,ye.data);else if(E.isFramebufferTexture){if(xt)if(nt)n.texStorage2D(a.TEXTURE_2D,we,Je,ye.width,ye.height);else{let ne=ye.width,de=ye.height;for(let Re=0;Re<we;Re++)n.texImage2D(a.TEXTURE_2D,Re,Je,ne,de,0,Oe,Ye,null),ne>>=1,de>>=1}}else if(st.length>0){if(nt&&xt){const ne=We(st[0]);n.texStorage2D(a.TEXTURE_2D,we,Je,ne.width,ne.height)}for(let ne=0,de=st.length;ne<de;ne++)ke=st[ne],nt?G&&n.texSubImage2D(a.TEXTURE_2D,ne,0,0,Oe,Ye,ke):n.texImage2D(a.TEXTURE_2D,ne,Je,Oe,Ye,ke);E.generateMipmaps=!1}else if(nt){if(xt){const ne=We(ye);n.texStorage2D(a.TEXTURE_2D,we,Je,ne.width,ne.height)}G&&n.texSubImage2D(a.TEXTURE_2D,0,0,0,Oe,Ye,ye)}else n.texImage2D(a.TEXTURE_2D,0,Je,Oe,Ye,ye);y(E)&&g(fe),Ve.__version=ce.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function le(P,E,$){if(E.image.length!==6)return;const fe=Ue(P,E),ge=E.source;n.bindTexture(a.TEXTURE_CUBE_MAP,P.__webglTexture,a.TEXTURE0+$);const ce=i.get(ge);if(ge.version!==ce.__version||fe===!0){n.activeTexture(a.TEXTURE0+$);const Ve=un.getPrimaries(un.workingColorSpace),Te=E.colorSpace===Gs?null:un.getPrimaries(E.colorSpace),Ne=E.colorSpace===Gs||Ve===Te?a.NONE:a.BROWSER_DEFAULT_WEBGL;a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,E.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,E.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ne);const at=E.isCompressedTexture||E.image[0].isCompressedTexture,ye=E.image[0]&&E.image[0].isDataTexture,Oe=[];for(let de=0;de<6;de++)!at&&!ye?Oe[de]=b(E.image[de],!0,s.maxCubemapSize):Oe[de]=ye?E.image[de].image:E.image[de],Oe[de]=yt(E,Oe[de]);const Ye=Oe[0],Je=u.convert(E.format,E.colorSpace),ke=u.convert(E.type),st=L(E.internalFormat,Je,ke,E.colorSpace),nt=E.isVideoTexture!==!0,xt=ce.__version===void 0||fe===!0,G=ge.dataReady;let we=X(E,Ye);te(a.TEXTURE_CUBE_MAP,E);let ne;if(at){nt&&xt&&n.texStorage2D(a.TEXTURE_CUBE_MAP,we,st,Ye.width,Ye.height);for(let de=0;de<6;de++){ne=Oe[de].mipmaps;for(let Re=0;Re<ne.length;Re++){const be=ne[Re];E.format!==ka?Je!==null?nt?G&&n.compressedTexSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re,0,0,be.width,be.height,Je,be.data):n.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re,st,be.width,be.height,0,be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re,0,0,be.width,be.height,Je,ke,be.data):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re,st,be.width,be.height,0,Je,ke,be.data)}}}else{if(ne=E.mipmaps,nt&&xt){ne.length>0&&we++;const de=We(Oe[0]);n.texStorage2D(a.TEXTURE_CUBE_MAP,we,st,de.width,de.height)}for(let de=0;de<6;de++)if(ye){nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,Oe[de].width,Oe[de].height,Je,ke,Oe[de].data):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,st,Oe[de].width,Oe[de].height,0,Je,ke,Oe[de].data);for(let Re=0;Re<ne.length;Re++){const it=ne[Re].image[de].image;nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re+1,0,0,it.width,it.height,Je,ke,it.data):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re+1,st,it.width,it.height,0,Je,ke,it.data)}}else{nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,Je,ke,Oe[de]):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,st,Je,ke,Oe[de]);for(let Re=0;Re<ne.length;Re++){const be=ne[Re];nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re+1,0,0,Je,ke,be.image[de]):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re+1,st,Je,ke,be.image[de])}}}y(E)&&g(a.TEXTURE_CUBE_MAP),ce.__version=ge.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function Se(P,E,$,fe,ge,ce){const Ve=u.convert($.format,$.colorSpace),Te=u.convert($.type),Ne=L($.internalFormat,Ve,Te,$.colorSpace),at=i.get(E),ye=i.get($);if(ye.__renderTarget=E,!at.__hasExternalTextures){const Oe=Math.max(1,E.width>>ce),Ye=Math.max(1,E.height>>ce);ge===a.TEXTURE_3D||ge===a.TEXTURE_2D_ARRAY?n.texImage3D(ge,ce,Ne,Oe,Ye,E.depth,0,Ve,Te,null):n.texImage2D(ge,ce,Ne,Oe,Ye,0,Ve,Te,null)}n.bindFramebuffer(a.FRAMEBUFFER,P),ot(E)?f.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,fe,ge,ye.__webglTexture,0,lt(E)):(ge===a.TEXTURE_2D||ge>=a.TEXTURE_CUBE_MAP_POSITIVE_X&&ge<=a.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&a.framebufferTexture2D(a.FRAMEBUFFER,fe,ge,ye.__webglTexture,ce),n.bindFramebuffer(a.FRAMEBUFFER,null)}function ve(P,E,$){if(a.bindRenderbuffer(a.RENDERBUFFER,P),E.depthBuffer){const fe=E.depthTexture,ge=fe&&fe.isDepthTexture?fe.type:null,ce=C(E.stencilBuffer,ge),Ve=E.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,Te=lt(E);ot(E)?f.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,Te,ce,E.width,E.height):$?a.renderbufferStorageMultisample(a.RENDERBUFFER,Te,ce,E.width,E.height):a.renderbufferStorage(a.RENDERBUFFER,ce,E.width,E.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,Ve,a.RENDERBUFFER,P)}else{const fe=E.textures;for(let ge=0;ge<fe.length;ge++){const ce=fe[ge],Ve=u.convert(ce.format,ce.colorSpace),Te=u.convert(ce.type),Ne=L(ce.internalFormat,Ve,Te,ce.colorSpace),at=lt(E);$&&ot(E)===!1?a.renderbufferStorageMultisample(a.RENDERBUFFER,at,Ne,E.width,E.height):ot(E)?f.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,at,Ne,E.width,E.height):a.renderbufferStorage(a.RENDERBUFFER,Ne,E.width,E.height)}}a.bindRenderbuffer(a.RENDERBUFFER,null)}function Ee(P,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(a.FRAMEBUFFER,P),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const fe=i.get(E.depthTexture);fe.__renderTarget=E,(!fe.__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),he(E.depthTexture,0);const ge=fe.__webglTexture,ce=lt(E);if(E.depthTexture.format===Hc)ot(E)?f.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,ge,0,ce):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,ge,0);else if(E.depthTexture.format===Kc)ot(E)?f.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,ge,0,ce):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,ge,0);else throw new Error("Unknown depthTexture format")}function Ie(P){const E=i.get(P),$=P.isWebGLCubeRenderTarget===!0;if(E.__boundDepthTexture!==P.depthTexture){const fe=P.depthTexture;if(E.__depthDisposeCallback&&E.__depthDisposeCallback(),fe){const ge=()=>{delete E.__boundDepthTexture,delete E.__depthDisposeCallback,fe.removeEventListener("dispose",ge)};fe.addEventListener("dispose",ge),E.__depthDisposeCallback=ge}E.__boundDepthTexture=fe}if(P.depthTexture&&!E.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");Ee(E.__webglFramebuffer,P)}else if($){E.__webglDepthbuffer=[];for(let fe=0;fe<6;fe++)if(n.bindFramebuffer(a.FRAMEBUFFER,E.__webglFramebuffer[fe]),E.__webglDepthbuffer[fe]===void 0)E.__webglDepthbuffer[fe]=a.createRenderbuffer(),ve(E.__webglDepthbuffer[fe],P,!1);else{const ge=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,ce=E.__webglDepthbuffer[fe];a.bindRenderbuffer(a.RENDERBUFFER,ce),a.framebufferRenderbuffer(a.FRAMEBUFFER,ge,a.RENDERBUFFER,ce)}}else if(n.bindFramebuffer(a.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer===void 0)E.__webglDepthbuffer=a.createRenderbuffer(),ve(E.__webglDepthbuffer,P,!1);else{const fe=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,ge=E.__webglDepthbuffer;a.bindRenderbuffer(a.RENDERBUFFER,ge),a.framebufferRenderbuffer(a.FRAMEBUFFER,fe,a.RENDERBUFFER,ge)}n.bindFramebuffer(a.FRAMEBUFFER,null)}function Ze(P,E,$){const fe=i.get(P);E!==void 0&&Se(fe.__webglFramebuffer,P,P.texture,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,0),$!==void 0&&Ie(P)}function St(P){const E=P.texture,$=i.get(P),fe=i.get(E);P.addEventListener("dispose",F);const ge=P.textures,ce=P.isWebGLCubeRenderTarget===!0,Ve=ge.length>1;if(Ve||(fe.__webglTexture===void 0&&(fe.__webglTexture=a.createTexture()),fe.__version=E.version,d.memory.textures++),ce){$.__webglFramebuffer=[];for(let Te=0;Te<6;Te++)if(E.mipmaps&&E.mipmaps.length>0){$.__webglFramebuffer[Te]=[];for(let Ne=0;Ne<E.mipmaps.length;Ne++)$.__webglFramebuffer[Te][Ne]=a.createFramebuffer()}else $.__webglFramebuffer[Te]=a.createFramebuffer()}else{if(E.mipmaps&&E.mipmaps.length>0){$.__webglFramebuffer=[];for(let Te=0;Te<E.mipmaps.length;Te++)$.__webglFramebuffer[Te]=a.createFramebuffer()}else $.__webglFramebuffer=a.createFramebuffer();if(Ve)for(let Te=0,Ne=ge.length;Te<Ne;Te++){const at=i.get(ge[Te]);at.__webglTexture===void 0&&(at.__webglTexture=a.createTexture(),d.memory.textures++)}if(P.samples>0&&ot(P)===!1){$.__webglMultisampledFramebuffer=a.createFramebuffer(),$.__webglColorRenderbuffer=[],n.bindFramebuffer(a.FRAMEBUFFER,$.__webglMultisampledFramebuffer);for(let Te=0;Te<ge.length;Te++){const Ne=ge[Te];$.__webglColorRenderbuffer[Te]=a.createRenderbuffer(),a.bindRenderbuffer(a.RENDERBUFFER,$.__webglColorRenderbuffer[Te]);const at=u.convert(Ne.format,Ne.colorSpace),ye=u.convert(Ne.type),Oe=L(Ne.internalFormat,at,ye,Ne.colorSpace,P.isXRRenderTarget===!0),Ye=lt(P);a.renderbufferStorageMultisample(a.RENDERBUFFER,Ye,Oe,P.width,P.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+Te,a.RENDERBUFFER,$.__webglColorRenderbuffer[Te])}a.bindRenderbuffer(a.RENDERBUFFER,null),P.depthBuffer&&($.__webglDepthRenderbuffer=a.createRenderbuffer(),ve($.__webglDepthRenderbuffer,P,!0)),n.bindFramebuffer(a.FRAMEBUFFER,null)}}if(ce){n.bindTexture(a.TEXTURE_CUBE_MAP,fe.__webglTexture),te(a.TEXTURE_CUBE_MAP,E);for(let Te=0;Te<6;Te++)if(E.mipmaps&&E.mipmaps.length>0)for(let Ne=0;Ne<E.mipmaps.length;Ne++)Se($.__webglFramebuffer[Te][Ne],P,E,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+Te,Ne);else Se($.__webglFramebuffer[Te],P,E,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+Te,0);y(E)&&g(a.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(Ve){for(let Te=0,Ne=ge.length;Te<Ne;Te++){const at=ge[Te],ye=i.get(at);n.bindTexture(a.TEXTURE_2D,ye.__webglTexture),te(a.TEXTURE_2D,at),Se($.__webglFramebuffer,P,at,a.COLOR_ATTACHMENT0+Te,a.TEXTURE_2D,0),y(at)&&g(a.TEXTURE_2D)}n.unbindTexture()}else{let Te=a.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(Te=P.isWebGL3DRenderTarget?a.TEXTURE_3D:a.TEXTURE_2D_ARRAY),n.bindTexture(Te,fe.__webglTexture),te(Te,E),E.mipmaps&&E.mipmaps.length>0)for(let Ne=0;Ne<E.mipmaps.length;Ne++)Se($.__webglFramebuffer[Ne],P,E,a.COLOR_ATTACHMENT0,Te,Ne);else Se($.__webglFramebuffer,P,E,a.COLOR_ATTACHMENT0,Te,0);y(E)&&g(Te),n.unbindTexture()}P.depthBuffer&&Ie(P)}function ft(P){const E=P.textures;for(let $=0,fe=E.length;$<fe;$++){const ge=E[$];if(y(ge)){const ce=I(P),Ve=i.get(ge).__webglTexture;n.bindTexture(ce,Ve),g(ce),n.unbindTexture()}}}const Tt=[],O=[];function dn(P){if(P.samples>0){if(ot(P)===!1){const E=P.textures,$=P.width,fe=P.height;let ge=a.COLOR_BUFFER_BIT;const ce=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,Ve=i.get(P),Te=E.length>1;if(Te)for(let Ne=0;Ne<E.length;Ne++)n.bindFramebuffer(a.FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+Ne,a.RENDERBUFFER,null),n.bindFramebuffer(a.FRAMEBUFFER,Ve.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+Ne,a.TEXTURE_2D,null,0);n.bindFramebuffer(a.READ_FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),n.bindFramebuffer(a.DRAW_FRAMEBUFFER,Ve.__webglFramebuffer);for(let Ne=0;Ne<E.length;Ne++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(ge|=a.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(ge|=a.STENCIL_BUFFER_BIT)),Te){a.framebufferRenderbuffer(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.RENDERBUFFER,Ve.__webglColorRenderbuffer[Ne]);const at=i.get(E[Ne]).__webglTexture;a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,at,0)}a.blitFramebuffer(0,0,$,fe,0,0,$,fe,ge,a.NEAREST),p===!0&&(Tt.length=0,O.length=0,Tt.push(a.COLOR_ATTACHMENT0+Ne),P.depthBuffer&&P.resolveDepthBuffer===!1&&(Tt.push(ce),O.push(ce),a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,O)),a.invalidateFramebuffer(a.READ_FRAMEBUFFER,Tt))}if(n.bindFramebuffer(a.READ_FRAMEBUFFER,null),n.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),Te)for(let Ne=0;Ne<E.length;Ne++){n.bindFramebuffer(a.FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+Ne,a.RENDERBUFFER,Ve.__webglColorRenderbuffer[Ne]);const at=i.get(E[Ne]).__webglTexture;n.bindFramebuffer(a.FRAMEBUFFER,Ve.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+Ne,a.TEXTURE_2D,at,0)}n.bindFramebuffer(a.DRAW_FRAMEBUFFER,Ve.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&p){const E=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT;a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,[E])}}}function lt(P){return Math.min(s.maxSamples,P.samples)}function ot(P){const E=i.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function Xe(P){const E=d.render.frame;v.get(P)!==E&&(v.set(P,E),P.update())}function yt(P,E){const $=P.colorSpace,fe=P.format,ge=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||$!==Zc&&$!==Gs&&(un.getTransfer($)===Tn?(fe!==ka||ge!==bs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",$)),E}function We(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(m.width=P.naturalWidth||P.width,m.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(m.width=P.displayWidth,m.height=P.displayHeight):(m.width=P.width,m.height=P.height),m}this.allocateTextureUnit=ee,this.resetTextureUnits=ie,this.setTexture2D=he,this.setTexture2DArray=oe,this.setTexture3D=ue,this.setTextureCube=B,this.rebindTextures=Ze,this.setupRenderTarget=St,this.updateRenderTargetMipmap=ft,this.updateMultisampleRenderTarget=dn,this.setupDepthRenderbuffer=Ie,this.setupFrameBufferTexture=Se,this.useMultisampledRTT=ot}function LR(a,e){function n(i,s=Gs){let u;const d=un.getTransfer(s);if(i===bs)return a.UNSIGNED_BYTE;if(i===Z0)return a.UNSIGNED_SHORT_4_4_4_4;if(i===J0)return a.UNSIGNED_SHORT_5_5_5_1;if(i===ZS)return a.UNSIGNED_INT_5_9_9_9_REV;if(i===$S)return a.BYTE;if(i===KS)return a.SHORT;if(i===$h)return a.UNSIGNED_SHORT;if(i===K0)return a.INT;if(i===rc)return a.UNSIGNED_INT;if(i===xs)return a.FLOAT;if(i===Zh)return a.HALF_FLOAT;if(i===JS)return a.ALPHA;if(i===QS)return a.RGB;if(i===ka)return a.RGBA;if(i===e1)return a.LUMINANCE;if(i===t1)return a.LUMINANCE_ALPHA;if(i===Hc)return a.DEPTH_COMPONENT;if(i===Kc)return a.DEPTH_STENCIL;if(i===n1)return a.RED;if(i===Q0)return a.RED_INTEGER;if(i===r1)return a.RG;if(i===ex)return a.RG_INTEGER;if(i===tx)return a.RGBA_INTEGER;if(i===Jp||i===Qp||i===em||i===tm)if(d===Tn)if(u=e.get("WEBGL_compressed_texture_s3tc_srgb"),u!==null){if(i===Jp)return u.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Qp)return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===em)return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===tm)return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(u=e.get("WEBGL_compressed_texture_s3tc"),u!==null){if(i===Jp)return u.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Qp)return u.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===em)return u.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===tm)return u.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===L_||i===U_||i===I_||i===N_)if(u=e.get("WEBGL_compressed_texture_pvrtc"),u!==null){if(i===L_)return u.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===U_)return u.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===I_)return u.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===N_)return u.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===F_||i===O_||i===k_)if(u=e.get("WEBGL_compressed_texture_etc"),u!==null){if(i===F_||i===O_)return d===Tn?u.COMPRESSED_SRGB8_ETC2:u.COMPRESSED_RGB8_ETC2;if(i===k_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:u.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===z_||i===B_||i===H_||i===V_||i===G_||i===W_||i===X_||i===j_||i===q_||i===Y_||i===$_||i===K_||i===Z_||i===J_)if(u=e.get("WEBGL_compressed_texture_astc"),u!==null){if(i===z_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:u.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===B_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:u.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===H_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:u.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===V_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:u.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===G_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:u.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===W_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:u.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===X_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:u.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===j_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:u.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===q_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:u.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Y_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:u.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===$_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:u.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===K_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:u.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Z_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:u.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===J_)return d===Tn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:u.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===nm||i===Q_||i===e0)if(u=e.get("EXT_texture_compression_bptc"),u!==null){if(i===nm)return d===Tn?u.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:u.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Q_)return u.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===e0)return u.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===i1||i===t0||i===n0||i===r0)if(u=e.get("EXT_texture_compression_rgtc"),u!==null){if(i===nm)return u.COMPRESSED_RED_RGTC1_EXT;if(i===t0)return u.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===n0)return u.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===r0)return u.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===$c?a.UNSIGNED_INT_24_8:a[i]!==void 0?a[i]:null}return{convert:n}}const UR={type:"move"};class Hv{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Xh,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Xh,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Pe,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Pe),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Xh,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Pe,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Pe),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const n=this._hand;if(n)for(const i of e.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let s=null,u=null,d=null;const f=this._targetRay,p=this._grip,m=this._hand;if(e&&n.session.visibilityState!=="visible-blurred"){if(m&&e.hand){d=!0;for(const b of e.hand.values()){const y=n.getJointPose(b,i),g=this._getHandJoint(m,b);y!==null&&(g.matrix.fromArray(y.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=y.radius),g.visible=y!==null}const v=m.joints["index-finger-tip"],x=m.joints["thumb-tip"],_=v.position.distanceTo(x.position),S=.02,w=.005;m.inputState.pinching&&_>S+w?(m.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!m.inputState.pinching&&_<=S-w&&(m.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else p!==null&&e.gripSpace&&(u=n.getPose(e.gripSpace,i),u!==null&&(p.matrix.fromArray(u.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,u.linearVelocity?(p.hasLinearVelocity=!0,p.linearVelocity.copy(u.linearVelocity)):p.hasLinearVelocity=!1,u.angularVelocity?(p.hasAngularVelocity=!0,p.angularVelocity.copy(u.angularVelocity)):p.hasAngularVelocity=!1));f!==null&&(s=n.getPose(e.targetRaySpace,i),s===null&&u!==null&&(s=u),s!==null&&(f.matrix.fromArray(s.transform.matrix),f.matrix.decompose(f.position,f.rotation,f.scale),f.matrixWorldNeedsUpdate=!0,s.linearVelocity?(f.hasLinearVelocity=!0,f.linearVelocity.copy(s.linearVelocity)):f.hasLinearVelocity=!1,s.angularVelocity?(f.hasAngularVelocity=!0,f.angularVelocity.copy(s.angularVelocity)):f.hasAngularVelocity=!1,this.dispatchEvent(UR)))}return f!==null&&(f.visible=s!==null),p!==null&&(p.visible=u!==null),m!==null&&(m.visible=d!==null),this}_getHandJoint(e,n){if(e.joints[n.jointName]===void 0){const i=new Xh;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[n.jointName]=i,e.add(i)}return e.joints[n.jointName]}}const IR=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,NR=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class FR{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,n,i){if(this.texture===null){const s=new pi,u=e.properties.get(s);u.__webglTexture=n.texture,(n.depthNear!=i.depthNear||n.depthFar!=i.depthFar)&&(this.depthNear=n.depthNear,this.depthFar=n.depthFar),this.texture=s}}getMesh(e){if(this.texture!==null&&this.mesh===null){const n=e.cameras[0].viewport,i=new Ks({vertexShader:IR,fragmentShader:NR,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new Xa(new Em(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class OR extends od{constructor(e,n){super();const i=this;let s=null,u=1,d=null,f="local-floor",p=1,m=null,v=null,x=null,_=null,S=null,w=null;const b=new FR,y=n.getContextAttributes();let g=null,I=null;const L=[],C=[],X=new Ln;let k=null;const F=new Zi;F.viewport=new Jn;const j=new Zi;j.viewport=new Jn;const R=[F,j],A=new iT;let V=null,ie=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(K){let le=L[K];return le===void 0&&(le=new Hv,L[K]=le),le.getTargetRaySpace()},this.getControllerGrip=function(K){let le=L[K];return le===void 0&&(le=new Hv,L[K]=le),le.getGripSpace()},this.getHand=function(K){let le=L[K];return le===void 0&&(le=new Hv,L[K]=le),le.getHandSpace()};function ee(K){const le=C.indexOf(K.inputSource);if(le===-1)return;const Se=L[le];Se!==void 0&&(Se.update(K.inputSource,K.frame,m||d),Se.dispatchEvent({type:K.type,data:K.inputSource}))}function se(){s.removeEventListener("select",ee),s.removeEventListener("selectstart",ee),s.removeEventListener("selectend",ee),s.removeEventListener("squeeze",ee),s.removeEventListener("squeezestart",ee),s.removeEventListener("squeezeend",ee),s.removeEventListener("end",se),s.removeEventListener("inputsourceschange",he);for(let K=0;K<L.length;K++){const le=C[K];le!==null&&(C[K]=null,L[K].disconnect(le))}V=null,ie=null,b.reset(),e.setRenderTarget(g),S=null,_=null,x=null,s=null,I=null,Ue.stop(),i.isPresenting=!1,e.setPixelRatio(k),e.setSize(X.width,X.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(K){u=K,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(K){f=K,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return m||d},this.setReferenceSpace=function(K){m=K},this.getBaseLayer=function(){return _!==null?_:S},this.getBinding=function(){return x},this.getFrame=function(){return w},this.getSession=function(){return s},this.setSession=async function(K){if(s=K,s!==null){if(g=e.getRenderTarget(),s.addEventListener("select",ee),s.addEventListener("selectstart",ee),s.addEventListener("selectend",ee),s.addEventListener("squeeze",ee),s.addEventListener("squeezestart",ee),s.addEventListener("squeezeend",ee),s.addEventListener("end",se),s.addEventListener("inputsourceschange",he),y.xrCompatible!==!0&&await n.makeXRCompatible(),k=e.getPixelRatio(),e.getSize(X),s.renderState.layers===void 0){const le={antialias:y.antialias,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:u};S=new XRWebGLLayer(s,n,le),s.updateRenderState({baseLayer:S}),e.setPixelRatio(1),e.setSize(S.framebufferWidth,S.framebufferHeight,!1),I=new ic(S.framebufferWidth,S.framebufferHeight,{format:ka,type:bs,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil})}else{let le=null,Se=null,ve=null;y.depth&&(ve=y.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,le=y.stencil?Kc:Hc,Se=y.stencil?$c:rc);const Ee={colorFormat:n.RGBA8,depthFormat:ve,scaleFactor:u};x=new XRWebGLBinding(s,n),_=x.createProjectionLayer(Ee),s.updateRenderState({layers:[_]}),e.setPixelRatio(1),e.setSize(_.textureWidth,_.textureHeight,!1),I=new ic(_.textureWidth,_.textureHeight,{format:ka,type:bs,depthTexture:new v1(_.textureWidth,_.textureHeight,Se,void 0,void 0,void 0,void 0,void 0,void 0,le),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0,resolveDepthBuffer:_.ignoreDepthValues===!1})}I.isXRRenderTarget=!0,this.setFoveation(p),m=null,d=await s.requestReferenceSpace(f),Ue.setContext(s),Ue.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return b.getDepthTexture()};function he(K){for(let le=0;le<K.removed.length;le++){const Se=K.removed[le],ve=C.indexOf(Se);ve>=0&&(C[ve]=null,L[ve].disconnect(Se))}for(let le=0;le<K.added.length;le++){const Se=K.added[le];let ve=C.indexOf(Se);if(ve===-1){for(let Ie=0;Ie<L.length;Ie++)if(Ie>=C.length){C.push(Se),ve=Ie;break}else if(C[Ie]===null){C[Ie]=Se,ve=Ie;break}if(ve===-1)break}const Ee=L[ve];Ee&&Ee.connect(Se)}}const oe=new Pe,ue=new Pe;function B(K,le,Se){oe.setFromMatrixPosition(le.matrixWorld),ue.setFromMatrixPosition(Se.matrixWorld);const ve=oe.distanceTo(ue),Ee=le.projectionMatrix.elements,Ie=Se.projectionMatrix.elements,Ze=Ee[14]/(Ee[10]-1),St=Ee[14]/(Ee[10]+1),ft=(Ee[9]+1)/Ee[5],Tt=(Ee[9]-1)/Ee[5],O=(Ee[8]-1)/Ee[0],dn=(Ie[8]+1)/Ie[0],lt=Ze*O,ot=Ze*dn,Xe=ve/(-O+dn),yt=Xe*-O;if(le.matrixWorld.decompose(K.position,K.quaternion,K.scale),K.translateX(yt),K.translateZ(Xe),K.matrixWorld.compose(K.position,K.quaternion,K.scale),K.matrixWorldInverse.copy(K.matrixWorld).invert(),Ee[10]===-1)K.projectionMatrix.copy(le.projectionMatrix),K.projectionMatrixInverse.copy(le.projectionMatrixInverse);else{const We=Ze+Xe,P=St+Xe,E=lt-yt,$=ot+(ve-yt),fe=ft*St/P*We,ge=Tt*St/P*We;K.projectionMatrix.makePerspective(E,$,fe,ge,We,P),K.projectionMatrixInverse.copy(K.projectionMatrix).invert()}}function ae(K,le){le===null?K.matrixWorld.copy(K.matrix):K.matrixWorld.multiplyMatrices(le.matrixWorld,K.matrix),K.matrixWorldInverse.copy(K.matrixWorld).invert()}this.updateCamera=function(K){if(s===null)return;let le=K.near,Se=K.far;b.texture!==null&&(b.depthNear>0&&(le=b.depthNear),b.depthFar>0&&(Se=b.depthFar)),A.near=j.near=F.near=le,A.far=j.far=F.far=Se,(V!==A.near||ie!==A.far)&&(s.updateRenderState({depthNear:A.near,depthFar:A.far}),V=A.near,ie=A.far),F.layers.mask=K.layers.mask|2,j.layers.mask=K.layers.mask|4,A.layers.mask=F.layers.mask|j.layers.mask;const ve=K.parent,Ee=A.cameras;ae(A,ve);for(let Ie=0;Ie<Ee.length;Ie++)ae(Ee[Ie],ve);Ee.length===2?B(A,F,j):A.projectionMatrix.copy(F.projectionMatrix),re(K,A,ve)};function re(K,le,Se){Se===null?K.matrix.copy(le.matrixWorld):(K.matrix.copy(Se.matrixWorld),K.matrix.invert(),K.matrix.multiply(le.matrixWorld)),K.matrix.decompose(K.position,K.quaternion,K.scale),K.updateMatrixWorld(!0),K.projectionMatrix.copy(le.projectionMatrix),K.projectionMatrixInverse.copy(le.projectionMatrixInverse),K.isPerspectiveCamera&&(K.fov=i0*2*Math.atan(1/K.projectionMatrix.elements[5]),K.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(_===null&&S===null))return p},this.setFoveation=function(K){p=K,_!==null&&(_.fixedFoveation=K),S!==null&&S.fixedFoveation!==void 0&&(S.fixedFoveation=K)},this.hasDepthSensing=function(){return b.texture!==null},this.getDepthSensingMesh=function(){return b.getMesh(A)};let U=null;function te(K,le){if(v=le.getViewerPose(m||d),w=le,v!==null){const Se=v.views;S!==null&&(e.setRenderTargetFramebuffer(I,S.framebuffer),e.setRenderTarget(I));let ve=!1;Se.length!==A.cameras.length&&(A.cameras.length=0,ve=!0);for(let Ie=0;Ie<Se.length;Ie++){const Ze=Se[Ie];let St=null;if(S!==null)St=S.getViewport(Ze);else{const Tt=x.getViewSubImage(_,Ze);St=Tt.viewport,Ie===0&&(e.setRenderTargetTextures(I,Tt.colorTexture,_.ignoreDepthValues?void 0:Tt.depthStencilTexture),e.setRenderTarget(I))}let ft=R[Ie];ft===void 0&&(ft=new Zi,ft.layers.enable(Ie),ft.viewport=new Jn,R[Ie]=ft),ft.matrix.fromArray(Ze.transform.matrix),ft.matrix.decompose(ft.position,ft.quaternion,ft.scale),ft.projectionMatrix.fromArray(Ze.projectionMatrix),ft.projectionMatrixInverse.copy(ft.projectionMatrix).invert(),ft.viewport.set(St.x,St.y,St.width,St.height),Ie===0&&(A.matrix.copy(ft.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),ve===!0&&A.cameras.push(ft)}const Ee=s.enabledFeatures;if(Ee&&Ee.includes("depth-sensing")){const Ie=x.getDepthInformation(Se[0]);Ie&&Ie.isValid&&Ie.texture&&b.init(e,Ie,s.renderState)}}for(let Se=0;Se<L.length;Se++){const ve=C[Se],Ee=L[Se];ve!==null&&Ee!==void 0&&Ee.update(ve,le,m||d)}U&&U(K,le),le.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:le}),w=null}const Ue=new _1;Ue.setAnimationLoop(te),this.setAnimationLoop=function(K){U=K},this.dispose=function(){}}}const Fu=new As,kR=new nr;function zR(a,e){function n(y,g){y.matrixAutoUpdate===!0&&y.updateMatrix(),g.value.copy(y.matrix)}function i(y,g){g.color.getRGB(y.fogColor.value,h1(a)),g.isFog?(y.fogNear.value=g.near,y.fogFar.value=g.far):g.isFogExp2&&(y.fogDensity.value=g.density)}function s(y,g,I,L,C){g.isMeshBasicMaterial||g.isMeshLambertMaterial?u(y,g):g.isMeshToonMaterial?(u(y,g),x(y,g)):g.isMeshPhongMaterial?(u(y,g),v(y,g)):g.isMeshStandardMaterial?(u(y,g),_(y,g),g.isMeshPhysicalMaterial&&S(y,g,C)):g.isMeshMatcapMaterial?(u(y,g),w(y,g)):g.isMeshDepthMaterial?u(y,g):g.isMeshDistanceMaterial?(u(y,g),b(y,g)):g.isMeshNormalMaterial?u(y,g):g.isLineBasicMaterial?(d(y,g),g.isLineDashedMaterial&&f(y,g)):g.isPointsMaterial?p(y,g,I,L):g.isSpriteMaterial?m(y,g):g.isShadowMaterial?(y.color.value.copy(g.color),y.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function u(y,g){y.opacity.value=g.opacity,g.color&&y.diffuse.value.copy(g.color),g.emissive&&y.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(y.map.value=g.map,n(g.map,y.mapTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,n(g.alphaMap,y.alphaMapTransform)),g.bumpMap&&(y.bumpMap.value=g.bumpMap,n(g.bumpMap,y.bumpMapTransform),y.bumpScale.value=g.bumpScale,g.side===hi&&(y.bumpScale.value*=-1)),g.normalMap&&(y.normalMap.value=g.normalMap,n(g.normalMap,y.normalMapTransform),y.normalScale.value.copy(g.normalScale),g.side===hi&&y.normalScale.value.negate()),g.displacementMap&&(y.displacementMap.value=g.displacementMap,n(g.displacementMap,y.displacementMapTransform),y.displacementScale.value=g.displacementScale,y.displacementBias.value=g.displacementBias),g.emissiveMap&&(y.emissiveMap.value=g.emissiveMap,n(g.emissiveMap,y.emissiveMapTransform)),g.specularMap&&(y.specularMap.value=g.specularMap,n(g.specularMap,y.specularMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest);const I=e.get(g),L=I.envMap,C=I.envMapRotation;L&&(y.envMap.value=L,Fu.copy(C),Fu.x*=-1,Fu.y*=-1,Fu.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(Fu.y*=-1,Fu.z*=-1),y.envMapRotation.value.setFromMatrix4(kR.makeRotationFromEuler(Fu)),y.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=g.reflectivity,y.ior.value=g.ior,y.refractionRatio.value=g.refractionRatio),g.lightMap&&(y.lightMap.value=g.lightMap,y.lightMapIntensity.value=g.lightMapIntensity,n(g.lightMap,y.lightMapTransform)),g.aoMap&&(y.aoMap.value=g.aoMap,y.aoMapIntensity.value=g.aoMapIntensity,n(g.aoMap,y.aoMapTransform))}function d(y,g){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,g.map&&(y.map.value=g.map,n(g.map,y.mapTransform))}function f(y,g){y.dashSize.value=g.dashSize,y.totalSize.value=g.dashSize+g.gapSize,y.scale.value=g.scale}function p(y,g,I,L){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,y.size.value=g.size*I,y.scale.value=L*.5,g.map&&(y.map.value=g.map,n(g.map,y.uvTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,n(g.alphaMap,y.alphaMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest)}function m(y,g){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,y.rotation.value=g.rotation,g.map&&(y.map.value=g.map,n(g.map,y.mapTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,n(g.alphaMap,y.alphaMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest)}function v(y,g){y.specular.value.copy(g.specular),y.shininess.value=Math.max(g.shininess,1e-4)}function x(y,g){g.gradientMap&&(y.gradientMap.value=g.gradientMap)}function _(y,g){y.metalness.value=g.metalness,g.metalnessMap&&(y.metalnessMap.value=g.metalnessMap,n(g.metalnessMap,y.metalnessMapTransform)),y.roughness.value=g.roughness,g.roughnessMap&&(y.roughnessMap.value=g.roughnessMap,n(g.roughnessMap,y.roughnessMapTransform)),g.envMap&&(y.envMapIntensity.value=g.envMapIntensity)}function S(y,g,I){y.ior.value=g.ior,g.sheen>0&&(y.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),y.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(y.sheenColorMap.value=g.sheenColorMap,n(g.sheenColorMap,y.sheenColorMapTransform)),g.sheenRoughnessMap&&(y.sheenRoughnessMap.value=g.sheenRoughnessMap,n(g.sheenRoughnessMap,y.sheenRoughnessMapTransform))),g.clearcoat>0&&(y.clearcoat.value=g.clearcoat,y.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(y.clearcoatMap.value=g.clearcoatMap,n(g.clearcoatMap,y.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,n(g.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(y.clearcoatNormalMap.value=g.clearcoatNormalMap,n(g.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===hi&&y.clearcoatNormalScale.value.negate())),g.dispersion>0&&(y.dispersion.value=g.dispersion),g.iridescence>0&&(y.iridescence.value=g.iridescence,y.iridescenceIOR.value=g.iridescenceIOR,y.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(y.iridescenceMap.value=g.iridescenceMap,n(g.iridescenceMap,y.iridescenceMapTransform)),g.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=g.iridescenceThicknessMap,n(g.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),g.transmission>0&&(y.transmission.value=g.transmission,y.transmissionSamplerMap.value=I.texture,y.transmissionSamplerSize.value.set(I.width,I.height),g.transmissionMap&&(y.transmissionMap.value=g.transmissionMap,n(g.transmissionMap,y.transmissionMapTransform)),y.thickness.value=g.thickness,g.thicknessMap&&(y.thicknessMap.value=g.thicknessMap,n(g.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=g.attenuationDistance,y.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(y.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(y.anisotropyMap.value=g.anisotropyMap,n(g.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=g.specularIntensity,y.specularColor.value.copy(g.specularColor),g.specularColorMap&&(y.specularColorMap.value=g.specularColorMap,n(g.specularColorMap,y.specularColorMapTransform)),g.specularIntensityMap&&(y.specularIntensityMap.value=g.specularIntensityMap,n(g.specularIntensityMap,y.specularIntensityMapTransform))}function w(y,g){g.matcap&&(y.matcap.value=g.matcap)}function b(y,g){const I=e.get(g).light;y.referencePosition.value.setFromMatrixPosition(I.matrixWorld),y.nearDistance.value=I.shadow.camera.near,y.farDistance.value=I.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:s}}function BR(a,e,n,i){let s={},u={},d=[];const f=a.getParameter(a.MAX_UNIFORM_BUFFER_BINDINGS);function p(I,L){const C=L.program;i.uniformBlockBinding(I,C)}function m(I,L){let C=s[I.id];C===void 0&&(w(I),C=v(I),s[I.id]=C,I.addEventListener("dispose",y));const X=L.program;i.updateUBOMapping(I,X);const k=e.render.frame;u[I.id]!==k&&(_(I),u[I.id]=k)}function v(I){const L=x();I.__bindingPointIndex=L;const C=a.createBuffer(),X=I.__size,k=I.usage;return a.bindBuffer(a.UNIFORM_BUFFER,C),a.bufferData(a.UNIFORM_BUFFER,X,k),a.bindBuffer(a.UNIFORM_BUFFER,null),a.bindBufferBase(a.UNIFORM_BUFFER,L,C),C}function x(){for(let I=0;I<f;I++)if(d.indexOf(I)===-1)return d.push(I),I;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function _(I){const L=s[I.id],C=I.uniforms,X=I.__cache;a.bindBuffer(a.UNIFORM_BUFFER,L);for(let k=0,F=C.length;k<F;k++){const j=Array.isArray(C[k])?C[k]:[C[k]];for(let R=0,A=j.length;R<A;R++){const V=j[R];if(S(V,k,R,X)===!0){const ie=V.__offset,ee=Array.isArray(V.value)?V.value:[V.value];let se=0;for(let he=0;he<ee.length;he++){const oe=ee[he],ue=b(oe);typeof oe=="number"||typeof oe=="boolean"?(V.__data[0]=oe,a.bufferSubData(a.UNIFORM_BUFFER,ie+se,V.__data)):oe.isMatrix3?(V.__data[0]=oe.elements[0],V.__data[1]=oe.elements[1],V.__data[2]=oe.elements[2],V.__data[3]=0,V.__data[4]=oe.elements[3],V.__data[5]=oe.elements[4],V.__data[6]=oe.elements[5],V.__data[7]=0,V.__data[8]=oe.elements[6],V.__data[9]=oe.elements[7],V.__data[10]=oe.elements[8],V.__data[11]=0):(oe.toArray(V.__data,se),se+=ue.storage/Float32Array.BYTES_PER_ELEMENT)}a.bufferSubData(a.UNIFORM_BUFFER,ie,V.__data)}}}a.bindBuffer(a.UNIFORM_BUFFER,null)}function S(I,L,C,X){const k=I.value,F=L+"_"+C;if(X[F]===void 0)return typeof k=="number"||typeof k=="boolean"?X[F]=k:X[F]=k.clone(),!0;{const j=X[F];if(typeof k=="number"||typeof k=="boolean"){if(j!==k)return X[F]=k,!0}else if(j.equals(k)===!1)return j.copy(k),!0}return!1}function w(I){const L=I.uniforms;let C=0;const X=16;for(let F=0,j=L.length;F<j;F++){const R=Array.isArray(L[F])?L[F]:[L[F]];for(let A=0,V=R.length;A<V;A++){const ie=R[A],ee=Array.isArray(ie.value)?ie.value:[ie.value];for(let se=0,he=ee.length;se<he;se++){const oe=ee[se],ue=b(oe),B=C%X,ae=B%ue.boundary,re=B+ae;C+=ae,re!==0&&X-re<ue.storage&&(C+=X-re),ie.__data=new Float32Array(ue.storage/Float32Array.BYTES_PER_ELEMENT),ie.__offset=C,C+=ue.storage}}}const k=C%X;return k>0&&(C+=X-k),I.__size=C,I.__cache={},this}function b(I){const L={boundary:0,storage:0};return typeof I=="number"||typeof I=="boolean"?(L.boundary=4,L.storage=4):I.isVector2?(L.boundary=8,L.storage=8):I.isVector3||I.isColor?(L.boundary=16,L.storage=12):I.isVector4?(L.boundary=16,L.storage=16):I.isMatrix3?(L.boundary=48,L.storage=48):I.isMatrix4?(L.boundary=64,L.storage=64):I.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",I),L}function y(I){const L=I.target;L.removeEventListener("dispose",y);const C=d.indexOf(L.__bindingPointIndex);d.splice(C,1),a.deleteBuffer(s[L.id]),delete s[L.id],delete u[L.id]}function g(){for(const I in s)a.deleteBuffer(s[I]);d=[],s={},u={}}return{bind:p,update:m,dispose:g}}class HR{constructor(e={}){const{canvas:n=wE(),context:i=null,depth:s=!0,stencil:u=!1,alpha:d=!1,antialias:f=!1,premultipliedAlpha:p=!0,preserveDrawingBuffer:m=!1,powerPreference:v="default",failIfMajorPerformanceCaveat:x=!1,reverseDepthBuffer:_=!1}=e;this.isWebGLRenderer=!0;let S;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");S=i.getContextAttributes().alpha}else S=d;const w=new Uint32Array(4),b=new Int32Array(4);let y=null,g=null;const I=[],L=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=$i,this.toneMapping=js,this.toneMappingExposure=1;const C=this;let X=!1,k=0,F=0,j=null,R=-1,A=null;const V=new Jn,ie=new Jn;let ee=null;const se=new bn(0);let he=0,oe=n.width,ue=n.height,B=1,ae=null,re=null;const U=new Jn(0,0,oe,ue),te=new Jn(0,0,oe,ue);let Ue=!1;const K=new g1;let le=!1,Se=!1;const ve=new nr,Ee=new nr,Ie=new Pe,Ze=new Jn,St={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ft=!1;function Tt(){return j===null?B:1}let O=i;function dn(T,W){return n.getContext(T,W)}try{const T={alpha:!0,depth:s,stencil:u,antialias:f,premultipliedAlpha:p,preserveDrawingBuffer:m,powerPreference:v,failIfMajorPerformanceCaveat:x};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${$0}`),n.addEventListener("webglcontextlost",de,!1),n.addEventListener("webglcontextrestored",Re,!1),n.addEventListener("webglcontextcreationerror",be,!1),O===null){const W="webgl2";if(O=dn(W,T),O===null)throw dn(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(T){throw console.error("THREE.WebGLRenderer: "+T.message),T}let lt,ot,Xe,yt,We,P,E,$,fe,ge,ce,Ve,Te,Ne,at,ye,Oe,Ye,Je,ke,st,nt,xt,G;function we(){lt=new Kb(O),lt.init(),nt=new LR(O,lt),ot=new Wb(O,lt,e,nt),Xe=new PR(O,lt),ot.reverseDepthBuffer&&_&&Xe.buffers.depth.setReversed(!0),yt=new Qb(O),We=new vR,P=new DR(O,lt,Xe,We,ot,nt,yt),E=new jb(C),$=new $b(C),fe=new oT(O),xt=new Vb(O,fe),ge=new Zb(O,fe,yt,xt),ce=new tA(O,ge,fe,yt),Je=new eA(O,ot,P),ye=new Xb(We),Ve=new gR(C,E,$,lt,ot,xt,ye),Te=new zR(C,We),Ne=new xR,at=new wR(lt),Ye=new Hb(C,E,$,Xe,ce,S,p),Oe=new RR(C,ce,ot),G=new BR(O,yt,ot,Xe),ke=new Gb(O,lt,yt),st=new Jb(O,lt,yt),yt.programs=Ve.programs,C.capabilities=ot,C.extensions=lt,C.properties=We,C.renderLists=Ne,C.shadowMap=Oe,C.state=Xe,C.info=yt}we();const ne=new OR(C,O);this.xr=ne,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){const T=lt.get("WEBGL_lose_context");T&&T.loseContext()},this.forceContextRestore=function(){const T=lt.get("WEBGL_lose_context");T&&T.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(T){T!==void 0&&(B=T,this.setSize(oe,ue,!1))},this.getSize=function(T){return T.set(oe,ue)},this.setSize=function(T,W,J=!0){if(ne.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}oe=T,ue=W,n.width=Math.floor(T*B),n.height=Math.floor(W*B),J===!0&&(n.style.width=T+"px",n.style.height=W+"px"),this.setViewport(0,0,T,W)},this.getDrawingBufferSize=function(T){return T.set(oe*B,ue*B).floor()},this.setDrawingBufferSize=function(T,W,J){oe=T,ue=W,B=J,n.width=Math.floor(T*J),n.height=Math.floor(W*J),this.setViewport(0,0,T,W)},this.getCurrentViewport=function(T){return T.copy(V)},this.getViewport=function(T){return T.copy(U)},this.setViewport=function(T,W,J,Q){T.isVector4?U.set(T.x,T.y,T.z,T.w):U.set(T,W,J,Q),Xe.viewport(V.copy(U).multiplyScalar(B).round())},this.getScissor=function(T){return T.copy(te)},this.setScissor=function(T,W,J,Q){T.isVector4?te.set(T.x,T.y,T.z,T.w):te.set(T,W,J,Q),Xe.scissor(ie.copy(te).multiplyScalar(B).round())},this.getScissorTest=function(){return Ue},this.setScissorTest=function(T){Xe.setScissorTest(Ue=T)},this.setOpaqueSort=function(T){ae=T},this.setTransparentSort=function(T){re=T},this.getClearColor=function(T){return T.copy(Ye.getClearColor())},this.setClearColor=function(){Ye.setClearColor.apply(Ye,arguments)},this.getClearAlpha=function(){return Ye.getClearAlpha()},this.setClearAlpha=function(){Ye.setClearAlpha.apply(Ye,arguments)},this.clear=function(T=!0,W=!0,J=!0){let Q=0;if(T){let z=!1;if(j!==null){const _e=j.texture.format;z=_e===tx||_e===ex||_e===Q0}if(z){const _e=j.texture.type,Ae=_e===bs||_e===rc||_e===$h||_e===$c||_e===Z0||_e===J0,Le=Ye.getClearColor(),ze=Ye.getClearAlpha(),tt=Le.r,Qe=Le.g,je=Le.b;Ae?(w[0]=tt,w[1]=Qe,w[2]=je,w[3]=ze,O.clearBufferuiv(O.COLOR,0,w)):(b[0]=tt,b[1]=Qe,b[2]=je,b[3]=ze,O.clearBufferiv(O.COLOR,0,b))}else Q|=O.COLOR_BUFFER_BIT}W&&(Q|=O.DEPTH_BUFFER_BIT),J&&(Q|=O.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),O.clear(Q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",de,!1),n.removeEventListener("webglcontextrestored",Re,!1),n.removeEventListener("webglcontextcreationerror",be,!1),Ye.dispose(),Ne.dispose(),at.dispose(),We.dispose(),E.dispose(),$.dispose(),ce.dispose(),xt.dispose(),G.dispose(),Ve.dispose(),ne.dispose(),ne.removeEventListener("sessionstart",vi),ne.removeEventListener("sessionend",yr),ir.stop()};function de(T){T.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),X=!0}function Re(){console.log("THREE.WebGLRenderer: Context Restored."),X=!1;const T=yt.autoReset,W=Oe.enabled,J=Oe.autoUpdate,Q=Oe.needsUpdate,z=Oe.type;we(),yt.autoReset=T,Oe.enabled=W,Oe.autoUpdate=J,Oe.needsUpdate=Q,Oe.type=z}function be(T){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",T.statusMessage)}function it(T){const W=T.target;W.removeEventListener("dispose",it),bt(W)}function bt(T){Wt(T),We.remove(T)}function Wt(T){const W=We.get(T).programs;W!==void 0&&(W.forEach(function(J){Ve.releaseProgram(J)}),T.isShaderMaterial&&Ve.releaseShaderCache(T))}this.renderBufferDirect=function(T,W,J,Q,z,_e){W===null&&(W=St);const Ae=z.isMesh&&z.matrixWorld.determinant()<0,Le=eo(T,W,J,Q,z);Xe.setMaterial(Q,Ae);let ze=J.index,tt=1;if(Q.wireframe===!0){if(ze=ge.getWireframeAttribute(J),ze===void 0)return;tt=2}const Qe=J.drawRange,je=J.attributes.position;let rt=Qe.start*tt,vt=(Qe.start+Qe.count)*tt;_e!==null&&(rt=Math.max(rt,_e.start*tt),vt=Math.min(vt,(_e.start+_e.count)*tt)),ze!==null?(rt=Math.max(rt,0),vt=Math.min(vt,ze.count)):je!=null&&(rt=Math.max(rt,0),vt=Math.min(vt,je.count));const gt=vt-rt;if(gt<0||gt===1/0)return;xt.setup(z,Q,Le,J,ze);let Et,_t=ke;if(ze!==null&&(Et=fe.get(ze),_t=st,_t.setIndex(Et)),z.isMesh)Q.wireframe===!0?(Xe.setLineWidth(Q.wireframeLinewidth*Tt()),_t.setMode(O.LINES)):_t.setMode(O.TRIANGLES);else if(z.isLine){let qe=Q.linewidth;qe===void 0&&(qe=1),Xe.setLineWidth(qe*Tt()),z.isLineSegments?_t.setMode(O.LINES):z.isLineLoop?_t.setMode(O.LINE_LOOP):_t.setMode(O.LINE_STRIP)}else z.isPoints?_t.setMode(O.POINTS):z.isSprite&&_t.setMode(O.TRIANGLES);if(z.isBatchedMesh)if(z._multiDrawInstances!==null)_t.renderMultiDrawInstances(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount,z._multiDrawInstances);else if(lt.get("WEBGL_multi_draw"))_t.renderMultiDraw(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount);else{const qe=z._multiDrawStarts,Ot=z._multiDrawCounts,Pt=z._multiDrawCount,Jt=ze?fe.get(ze).bytesPerElement:1,Bn=We.get(Q).currentProgram.getUniforms();for(let hn=0;hn<Pt;hn++)Bn.setValue(O,"_gl_DrawID",hn),_t.render(qe[hn]/Jt,Ot[hn])}else if(z.isInstancedMesh)_t.renderInstances(rt,gt,z.count);else if(J.isInstancedBufferGeometry){const qe=J._maxInstanceCount!==void 0?J._maxInstanceCount:1/0,Ot=Math.min(J.instanceCount,qe);_t.renderInstances(rt,gt,Ot)}else _t.render(rt,gt)};function ht(T,W,J){T.transparent===!0&&T.side===vs&&T.forceSinglePass===!1?(T.side=hi,T.needsUpdate=!0,_i(T,W,J),T.side=$s,T.needsUpdate=!0,_i(T,W,J),T.side=vs):_i(T,W,J)}this.compile=function(T,W,J=null){J===null&&(J=T),g=at.get(J),g.init(W),L.push(g),J.traverseVisible(function(z){z.isLight&&z.layers.test(W.layers)&&(g.pushLight(z),z.castShadow&&g.pushShadow(z))}),T!==J&&T.traverseVisible(function(z){z.isLight&&z.layers.test(W.layers)&&(g.pushLight(z),z.castShadow&&g.pushShadow(z))}),g.setupLights();const Q=new Set;return T.traverse(function(z){if(!(z.isMesh||z.isPoints||z.isLine||z.isSprite))return;const _e=z.material;if(_e)if(Array.isArray(_e))for(let Ae=0;Ae<_e.length;Ae++){const Le=_e[Ae];ht(Le,J,z),Q.add(Le)}else ht(_e,J,z),Q.add(_e)}),L.pop(),g=null,Q},this.compileAsync=function(T,W,J=null){const Q=this.compile(T,W,J);return new Promise(z=>{function _e(){if(Q.forEach(function(Ae){We.get(Ae).currentProgram.isReady()&&Q.delete(Ae)}),Q.size===0){z(T);return}setTimeout(_e,10)}lt.get("KHR_parallel_shader_compile")!==null?_e():setTimeout(_e,10)})};let _n=null;function fn(T){_n&&_n(T)}function vi(){ir.stop()}function yr(){ir.start()}const ir=new _1;ir.setAnimationLoop(fn),typeof self<"u"&&ir.setContext(self),this.setAnimationLoop=function(T){_n=T,ne.setAnimationLoop(T),T===null?ir.stop():ir.start()},ne.addEventListener("sessionstart",vi),ne.addEventListener("sessionend",yr),this.render=function(T,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(X===!0)return;if(T.matrixWorldAutoUpdate===!0&&T.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),ne.enabled===!0&&ne.isPresenting===!0&&(ne.cameraAutoUpdate===!0&&ne.updateCamera(W),W=ne.getCamera()),T.isScene===!0&&T.onBeforeRender(C,T,W,j),g=at.get(T,L.length),g.init(W),L.push(g),Ee.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),K.setFromProjectionMatrix(Ee),Se=this.localClippingEnabled,le=ye.init(this.clippingPlanes,Se),y=Ne.get(T,I.length),y.init(),I.push(y),ne.enabled===!0&&ne.isPresenting===!0){const _e=C.xr.getDepthSensingMesh();_e!==null&&ar(_e,W,-1/0,C.sortObjects)}ar(T,W,0,C.sortObjects),y.finish(),C.sortObjects===!0&&y.sort(ae,re),ft=ne.enabled===!1||ne.isPresenting===!1||ne.hasDepthSensing()===!1,ft&&Ye.addToRenderList(y,T),this.info.render.frame++,le===!0&&ye.beginShadows();const J=g.state.shadowsArray;Oe.render(J,T,W),le===!0&&ye.endShadows(),this.info.autoReset===!0&&this.info.reset();const Q=y.opaque,z=y.transmissive;if(g.setupLights(),W.isArrayCamera){const _e=W.cameras;if(z.length>0)for(let Ae=0,Le=_e.length;Ae<Le;Ae++){const ze=_e[Ae];jr(Q,z,T,ze)}ft&&Ye.render(T);for(let Ae=0,Le=_e.length;Ae<Le;Ae++){const ze=_e[Ae];Xr(y,T,ze,ze.viewport)}}else z.length>0&&jr(Q,z,T,W),ft&&Ye.render(T),Xr(y,T,W);j!==null&&(P.updateMultisampleRenderTarget(j),P.updateRenderTargetMipmap(j)),T.isScene===!0&&T.onAfterRender(C,T,W),xt.resetDefaultState(),R=-1,A=null,L.pop(),L.length>0?(g=L[L.length-1],le===!0&&ye.setGlobalState(C.clippingPlanes,g.state.camera)):g=null,I.pop(),I.length>0?y=I[I.length-1]:y=null};function ar(T,W,J,Q){if(T.visible===!1)return;if(T.layers.test(W.layers)){if(T.isGroup)J=T.renderOrder;else if(T.isLOD)T.autoUpdate===!0&&T.update(W);else if(T.isLight)g.pushLight(T),T.castShadow&&g.pushShadow(T);else if(T.isSprite){if(!T.frustumCulled||K.intersectsSprite(T)){Q&&Ze.setFromMatrixPosition(T.matrixWorld).applyMatrix4(Ee);const Ae=ce.update(T),Le=T.material;Le.visible&&y.push(T,Ae,Le,J,Ze.z,null)}}else if((T.isMesh||T.isLine||T.isPoints)&&(!T.frustumCulled||K.intersectsObject(T))){const Ae=ce.update(T),Le=T.material;if(Q&&(T.boundingSphere!==void 0?(T.boundingSphere===null&&T.computeBoundingSphere(),Ze.copy(T.boundingSphere.center)):(Ae.boundingSphere===null&&Ae.computeBoundingSphere(),Ze.copy(Ae.boundingSphere.center)),Ze.applyMatrix4(T.matrixWorld).applyMatrix4(Ee)),Array.isArray(Le)){const ze=Ae.groups;for(let tt=0,Qe=ze.length;tt<Qe;tt++){const je=ze[tt],rt=Le[je.materialIndex];rt&&rt.visible&&y.push(T,Ae,rt,J,Ze.z,je)}}else Le.visible&&y.push(T,Ae,Le,J,Ze.z,null)}}const _e=T.children;for(let Ae=0,Le=_e.length;Ae<Le;Ae++)ar(_e[Ae],W,J,Q)}function Xr(T,W,J,Q){const z=T.opaque,_e=T.transmissive,Ae=T.transparent;g.setupLightsView(J),le===!0&&ye.setGlobalState(C.clippingPlanes,J),Q&&Xe.viewport(V.copy(Q)),z.length>0&&Sr(z,W,J),_e.length>0&&Sr(_e,W,J),Ae.length>0&&Sr(Ae,W,J),Xe.buffers.depth.setTest(!0),Xe.buffers.depth.setMask(!0),Xe.buffers.color.setMask(!0),Xe.setPolygonOffset(!1)}function jr(T,W,J,Q){if((J.isScene===!0?J.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[Q.id]===void 0&&(g.state.transmissionRenderTarget[Q.id]=new ic(1,1,{generateMipmaps:!0,type:lt.has("EXT_color_buffer_half_float")||lt.has("EXT_color_buffer_float")?Zh:bs,minFilter:Ju,samples:4,stencilBuffer:u,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:un.workingColorSpace}));const _e=g.state.transmissionRenderTarget[Q.id],Ae=Q.viewport||V;_e.setSize(Ae.z,Ae.w);const Le=C.getRenderTarget();C.setRenderTarget(_e),C.getClearColor(se),he=C.getClearAlpha(),he<1&&C.setClearColor(16777215,.5),C.clear(),ft&&Ye.render(J);const ze=C.toneMapping;C.toneMapping=js;const tt=Q.viewport;if(Q.viewport!==void 0&&(Q.viewport=void 0),g.setupLightsView(Q),le===!0&&ye.setGlobalState(C.clippingPlanes,Q),Sr(T,J,Q),P.updateMultisampleRenderTarget(_e),P.updateRenderTargetMipmap(_e),lt.has("WEBGL_multisampled_render_to_texture")===!1){let Qe=!1;for(let je=0,rt=W.length;je<rt;je++){const vt=W[je],gt=vt.object,Et=vt.geometry,_t=vt.material,qe=vt.group;if(_t.side===vs&&gt.layers.test(Q.layers)){const Ot=_t.side;_t.side=hi,_t.needsUpdate=!0,Ja(gt,J,Q,Et,_t,qe),_t.side=Ot,_t.needsUpdate=!0,Qe=!0}}Qe===!0&&(P.updateMultisampleRenderTarget(_e),P.updateRenderTargetMipmap(_e))}C.setRenderTarget(Le),C.setClearColor(se,he),tt!==void 0&&(Q.viewport=tt),C.toneMapping=ze}function Sr(T,W,J){const Q=W.isScene===!0?W.overrideMaterial:null;for(let z=0,_e=T.length;z<_e;z++){const Ae=T[z],Le=Ae.object,ze=Ae.geometry,tt=Q===null?Ae.material:Q,Qe=Ae.group;Le.layers.test(J.layers)&&Ja(Le,W,J,ze,tt,Qe)}}function Ja(T,W,J,Q,z,_e){T.onBeforeRender(C,W,J,Q,z,_e),T.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,T.matrixWorld),T.normalMatrix.getNormalMatrix(T.modelViewMatrix),z.onBeforeRender(C,W,J,Q,T,_e),z.transparent===!0&&z.side===vs&&z.forceSinglePass===!1?(z.side=hi,z.needsUpdate=!0,C.renderBufferDirect(J,W,Q,z,T,_e),z.side=$s,z.needsUpdate=!0,C.renderBufferDirect(J,W,Q,z,T,_e),z.side=vs):C.renderBufferDirect(J,W,Q,z,T,_e),T.onAfterRender(C,W,J,Q,z,_e)}function _i(T,W,J){W.isScene!==!0&&(W=St);const Q=We.get(T),z=g.state.lights,_e=g.state.shadowsArray,Ae=z.state.version,Le=Ve.getParameters(T,z.state,_e,W,J),ze=Ve.getProgramCacheKey(Le);let tt=Q.programs;Q.environment=T.isMeshStandardMaterial?W.environment:null,Q.fog=W.fog,Q.envMap=(T.isMeshStandardMaterial?$:E).get(T.envMap||Q.environment),Q.envMapRotation=Q.environment!==null&&T.envMap===null?W.environmentRotation:T.envMapRotation,tt===void 0&&(T.addEventListener("dispose",it),tt=new Map,Q.programs=tt);let Qe=tt.get(ze);if(Qe!==void 0){if(Q.currentProgram===Qe&&Q.lightsStateVersion===Ae)return qn(T,Le),Qe}else Le.uniforms=Ve.getUniforms(T),T.onBeforeCompile(Le,C),Qe=Ve.acquireProgram(Le,ze),tt.set(ze,Qe),Q.uniforms=Le.uniforms;const je=Q.uniforms;return(!T.isShaderMaterial&&!T.isRawShaderMaterial||T.clipping===!0)&&(je.clippingPlanes=ye.uniform),qn(T,Le),Q.needsLights=tl(T),Q.lightsStateVersion=Ae,Q.needsLights&&(je.ambientLightColor.value=z.state.ambient,je.lightProbe.value=z.state.probe,je.directionalLights.value=z.state.directional,je.directionalLightShadows.value=z.state.directionalShadow,je.spotLights.value=z.state.spot,je.spotLightShadows.value=z.state.spotShadow,je.rectAreaLights.value=z.state.rectArea,je.ltc_1.value=z.state.rectAreaLTC1,je.ltc_2.value=z.state.rectAreaLTC2,je.pointLights.value=z.state.point,je.pointLightShadows.value=z.state.pointShadow,je.hemisphereLights.value=z.state.hemi,je.directionalShadowMap.value=z.state.directionalShadowMap,je.directionalShadowMatrix.value=z.state.directionalShadowMatrix,je.spotShadowMap.value=z.state.spotShadowMap,je.spotLightMatrix.value=z.state.spotLightMatrix,je.spotLightMap.value=z.state.spotLightMap,je.pointShadowMap.value=z.state.pointShadowMap,je.pointShadowMatrix.value=z.state.pointShadowMatrix),Q.currentProgram=Qe,Q.uniformsList=null,Qe}function Qa(T){if(T.uniformsList===null){const W=T.currentProgram.getUniforms();T.uniformsList=rm.seqWithValue(W.seq,T.uniforms)}return T.uniformsList}function qn(T,W){const J=We.get(T);J.outputColorSpace=W.outputColorSpace,J.batching=W.batching,J.batchingColor=W.batchingColor,J.instancing=W.instancing,J.instancingColor=W.instancingColor,J.instancingMorph=W.instancingMorph,J.skinning=W.skinning,J.morphTargets=W.morphTargets,J.morphNormals=W.morphNormals,J.morphColors=W.morphColors,J.morphTargetsCount=W.morphTargetsCount,J.numClippingPlanes=W.numClippingPlanes,J.numIntersection=W.numClipIntersection,J.vertexAlphas=W.vertexAlphas,J.vertexTangents=W.vertexTangents,J.toneMapping=W.toneMapping}function eo(T,W,J,Q,z){W.isScene!==!0&&(W=St),P.resetTextureUnits();const _e=W.fog,Ae=Q.isMeshStandardMaterial?W.environment:null,Le=j===null?C.outputColorSpace:j.isXRRenderTarget===!0?j.texture.colorSpace:Zc,ze=(Q.isMeshStandardMaterial?$:E).get(Q.envMap||Ae),tt=Q.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,Qe=!!J.attributes.tangent&&(!!Q.normalMap||Q.anisotropy>0),je=!!J.morphAttributes.position,rt=!!J.morphAttributes.normal,vt=!!J.morphAttributes.color;let gt=js;Q.toneMapped&&(j===null||j.isXRRenderTarget===!0)&&(gt=C.toneMapping);const Et=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,_t=Et!==void 0?Et.length:0,qe=We.get(Q),Ot=g.state.lights;if(le===!0&&(Se===!0||T!==A)){const Ut=T===A&&Q.id===R;ye.setState(Q,T,Ut)}let Pt=!1;Q.version===qe.__version?(qe.needsLights&&qe.lightsStateVersion!==Ot.state.version||qe.outputColorSpace!==Le||z.isBatchedMesh&&qe.batching===!1||!z.isBatchedMesh&&qe.batching===!0||z.isBatchedMesh&&qe.batchingColor===!0&&z.colorTexture===null||z.isBatchedMesh&&qe.batchingColor===!1&&z.colorTexture!==null||z.isInstancedMesh&&qe.instancing===!1||!z.isInstancedMesh&&qe.instancing===!0||z.isSkinnedMesh&&qe.skinning===!1||!z.isSkinnedMesh&&qe.skinning===!0||z.isInstancedMesh&&qe.instancingColor===!0&&z.instanceColor===null||z.isInstancedMesh&&qe.instancingColor===!1&&z.instanceColor!==null||z.isInstancedMesh&&qe.instancingMorph===!0&&z.morphTexture===null||z.isInstancedMesh&&qe.instancingMorph===!1&&z.morphTexture!==null||qe.envMap!==ze||Q.fog===!0&&qe.fog!==_e||qe.numClippingPlanes!==void 0&&(qe.numClippingPlanes!==ye.numPlanes||qe.numIntersection!==ye.numIntersection)||qe.vertexAlphas!==tt||qe.vertexTangents!==Qe||qe.morphTargets!==je||qe.morphNormals!==rt||qe.morphColors!==vt||qe.toneMapping!==gt||qe.morphTargetsCount!==_t)&&(Pt=!0):(Pt=!0,qe.__version=Q.version);let Jt=qe.currentProgram;Pt===!0&&(Jt=_i(Q,W,z));let Bn=!1,hn=!1,qr=!1;const Mt=Jt.getUniforms(),pn=qe.uniforms;if(Xe.useProgram(Jt.program)&&(Bn=!0,hn=!0,qr=!0),Q.id!==R&&(R=Q.id,hn=!0),Bn||A!==T){Xe.buffers.depth.getReversed()?(ve.copy(T.projectionMatrix),AE(ve),RE(ve),Mt.setValue(O,"projectionMatrix",ve)):Mt.setValue(O,"projectionMatrix",T.projectionMatrix),Mt.setValue(O,"viewMatrix",T.matrixWorldInverse);const vn=Mt.map.cameraPosition;vn!==void 0&&vn.setValue(O,Ie.setFromMatrixPosition(T.matrixWorld)),ot.logarithmicDepthBuffer&&Mt.setValue(O,"logDepthBufFC",2/(Math.log(T.far+1)/Math.LN2)),(Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshLambertMaterial||Q.isMeshBasicMaterial||Q.isMeshStandardMaterial||Q.isShaderMaterial)&&Mt.setValue(O,"isOrthographic",T.isOrthographicCamera===!0),A!==T&&(A=T,hn=!0,qr=!0)}if(z.isSkinnedMesh){Mt.setOptional(O,z,"bindMatrix"),Mt.setOptional(O,z,"bindMatrixInverse");const Ut=z.skeleton;Ut&&(Ut.boneTexture===null&&Ut.computeBoneTexture(),Mt.setValue(O,"boneTexture",Ut.boneTexture,P))}z.isBatchedMesh&&(Mt.setOptional(O,z,"batchingTexture"),Mt.setValue(O,"batchingTexture",z._matricesTexture,P),Mt.setOptional(O,z,"batchingIdTexture"),Mt.setValue(O,"batchingIdTexture",z._indirectTexture,P),Mt.setOptional(O,z,"batchingColorTexture"),z._colorsTexture!==null&&Mt.setValue(O,"batchingColorTexture",z._colorsTexture,P));const rn=J.morphAttributes;if((rn.position!==void 0||rn.normal!==void 0||rn.color!==void 0)&&Je.update(z,J,Jt),(hn||qe.receiveShadow!==z.receiveShadow)&&(qe.receiveShadow=z.receiveShadow,Mt.setValue(O,"receiveShadow",z.receiveShadow)),Q.isMeshGouraudMaterial&&Q.envMap!==null&&(pn.envMap.value=ze,pn.flipEnvMap.value=ze.isCubeTexture&&ze.isRenderTargetTexture===!1?-1:1),Q.isMeshStandardMaterial&&Q.envMap===null&&W.environment!==null&&(pn.envMapIntensity.value=W.environmentIntensity),hn&&(Mt.setValue(O,"toneMappingExposure",C.toneMappingExposure),qe.needsLights&&to(pn,qr),_e&&Q.fog===!0&&Te.refreshFogUniforms(pn,_e),Te.refreshMaterialUniforms(pn,Q,B,ue,g.state.transmissionRenderTarget[T.id]),rm.upload(O,Qa(qe),pn,P)),Q.isShaderMaterial&&Q.uniformsNeedUpdate===!0&&(rm.upload(O,Qa(qe),pn,P),Q.uniformsNeedUpdate=!1),Q.isSpriteMaterial&&Mt.setValue(O,"center",z.center),Mt.setValue(O,"modelViewMatrix",z.modelViewMatrix),Mt.setValue(O,"normalMatrix",z.normalMatrix),Mt.setValue(O,"modelMatrix",z.matrixWorld),Q.isShaderMaterial||Q.isRawShaderMaterial){const Ut=Q.uniformsGroups;for(let vn=0,Yr=Ut.length;vn<Yr;vn++){const ut=Ut[vn];G.update(ut,Jt),G.bind(ut,Jt)}}return Jt}function to(T,W){T.ambientLightColor.needsUpdate=W,T.lightProbe.needsUpdate=W,T.directionalLights.needsUpdate=W,T.directionalLightShadows.needsUpdate=W,T.pointLights.needsUpdate=W,T.pointLightShadows.needsUpdate=W,T.spotLights.needsUpdate=W,T.spotLightShadows.needsUpdate=W,T.rectAreaLights.needsUpdate=W,T.hemisphereLights.needsUpdate=W}function tl(T){return T.isMeshLambertMaterial||T.isMeshToonMaterial||T.isMeshPhongMaterial||T.isMeshStandardMaterial||T.isShadowMaterial||T.isShaderMaterial&&T.lights===!0}this.getActiveCubeFace=function(){return k},this.getActiveMipmapLevel=function(){return F},this.getRenderTarget=function(){return j},this.setRenderTargetTextures=function(T,W,J){We.get(T.texture).__webglTexture=W,We.get(T.depthTexture).__webglTexture=J;const Q=We.get(T);Q.__hasExternalTextures=!0,Q.__autoAllocateDepthBuffer=J===void 0,Q.__autoAllocateDepthBuffer||lt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Q.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(T,W){const J=We.get(T);J.__webglFramebuffer=W,J.__useDefaultFramebuffer=W===void 0},this.setRenderTarget=function(T,W=0,J=0){j=T,k=W,F=J;let Q=!0,z=null,_e=!1,Ae=!1;if(T){const ze=We.get(T);if(ze.__useDefaultFramebuffer!==void 0)Xe.bindFramebuffer(O.FRAMEBUFFER,null),Q=!1;else if(ze.__webglFramebuffer===void 0)P.setupRenderTarget(T);else if(ze.__hasExternalTextures)P.rebindTextures(T,We.get(T.texture).__webglTexture,We.get(T.depthTexture).__webglTexture);else if(T.depthBuffer){const je=T.depthTexture;if(ze.__boundDepthTexture!==je){if(je!==null&&We.has(je)&&(T.width!==je.image.width||T.height!==je.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(T)}}const tt=T.texture;(tt.isData3DTexture||tt.isDataArrayTexture||tt.isCompressedArrayTexture)&&(Ae=!0);const Qe=We.get(T).__webglFramebuffer;T.isWebGLCubeRenderTarget?(Array.isArray(Qe[W])?z=Qe[W][J]:z=Qe[W],_e=!0):T.samples>0&&P.useMultisampledRTT(T)===!1?z=We.get(T).__webglMultisampledFramebuffer:Array.isArray(Qe)?z=Qe[J]:z=Qe,V.copy(T.viewport),ie.copy(T.scissor),ee=T.scissorTest}else V.copy(U).multiplyScalar(B).floor(),ie.copy(te).multiplyScalar(B).floor(),ee=Ue;if(Xe.bindFramebuffer(O.FRAMEBUFFER,z)&&Q&&Xe.drawBuffers(T,z),Xe.viewport(V),Xe.scissor(ie),Xe.setScissorTest(ee),_e){const ze=We.get(T.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+W,ze.__webglTexture,J)}else if(Ae){const ze=We.get(T.texture),tt=W||0;O.framebufferTextureLayer(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,ze.__webglTexture,J||0,tt)}R=-1},this.readRenderTargetPixels=function(T,W,J,Q,z,_e,Ae){if(!(T&&T.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Le=We.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&Ae!==void 0&&(Le=Le[Ae]),Le){Xe.bindFramebuffer(O.FRAMEBUFFER,Le);try{const ze=T.texture,tt=ze.format,Qe=ze.type;if(!ot.textureFormatReadable(tt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ot.textureTypeReadable(Qe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=T.width-Q&&J>=0&&J<=T.height-z&&O.readPixels(W,J,Q,z,nt.convert(tt),nt.convert(Qe),_e)}finally{const ze=j!==null?We.get(j).__webglFramebuffer:null;Xe.bindFramebuffer(O.FRAMEBUFFER,ze)}}},this.readRenderTargetPixelsAsync=async function(T,W,J,Q,z,_e,Ae){if(!(T&&T.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Le=We.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&Ae!==void 0&&(Le=Le[Ae]),Le){const ze=T.texture,tt=ze.format,Qe=ze.type;if(!ot.textureFormatReadable(tt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ot.textureTypeReadable(Qe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(W>=0&&W<=T.width-Q&&J>=0&&J<=T.height-z){Xe.bindFramebuffer(O.FRAMEBUFFER,Le);const je=O.createBuffer();O.bindBuffer(O.PIXEL_PACK_BUFFER,je),O.bufferData(O.PIXEL_PACK_BUFFER,_e.byteLength,O.STREAM_READ),O.readPixels(W,J,Q,z,nt.convert(tt),nt.convert(Qe),0);const rt=j!==null?We.get(j).__webglFramebuffer:null;Xe.bindFramebuffer(O.FRAMEBUFFER,rt);const vt=O.fenceSync(O.SYNC_GPU_COMMANDS_COMPLETE,0);return O.flush(),await bE(O,vt,4),O.bindBuffer(O.PIXEL_PACK_BUFFER,je),O.getBufferSubData(O.PIXEL_PACK_BUFFER,0,_e),O.deleteBuffer(je),O.deleteSync(vt),_e}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(T,W=null,J=0){T.isTexture!==!0&&(Fc("WebGLRenderer: copyFramebufferToTexture function signature has changed."),W=arguments[0]||null,T=arguments[1]);const Q=Math.pow(2,-J),z=Math.floor(T.image.width*Q),_e=Math.floor(T.image.height*Q),Ae=W!==null?W.x:0,Le=W!==null?W.y:0;P.setTexture2D(T,0),O.copyTexSubImage2D(O.TEXTURE_2D,J,0,0,Ae,Le,z,_e),Xe.unbindTexture()};const no=O.createFramebuffer(),ro=O.createFramebuffer();this.copyTextureToTexture=function(T,W,J=null,Q=null,z=0,_e=null){T.isTexture!==!0&&(Fc("WebGLRenderer: copyTextureToTexture function signature has changed."),Q=arguments[0]||null,T=arguments[1],W=arguments[2],_e=arguments[3]||0,J=null),_e===null&&(z!==0?(Fc("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),_e=z,z=0):_e=0);let Ae,Le,ze,tt,Qe,je,rt,vt,gt;const Et=T.isCompressedTexture?T.mipmaps[_e]:T.image;if(J!==null)Ae=J.max.x-J.min.x,Le=J.max.y-J.min.y,ze=J.isBox3?J.max.z-J.min.z:1,tt=J.min.x,Qe=J.min.y,je=J.isBox3?J.min.z:0;else{const rn=Math.pow(2,-z);Ae=Math.floor(Et.width*rn),Le=Math.floor(Et.height*rn),T.isDataArrayTexture?ze=Et.depth:T.isData3DTexture?ze=Math.floor(Et.depth*rn):ze=1,tt=0,Qe=0,je=0}Q!==null?(rt=Q.x,vt=Q.y,gt=Q.z):(rt=0,vt=0,gt=0);const _t=nt.convert(W.format),qe=nt.convert(W.type);let Ot;W.isData3DTexture?(P.setTexture3D(W,0),Ot=O.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(P.setTexture2DArray(W,0),Ot=O.TEXTURE_2D_ARRAY):(P.setTexture2D(W,0),Ot=O.TEXTURE_2D),O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,W.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,W.unpackAlignment);const Pt=O.getParameter(O.UNPACK_ROW_LENGTH),Jt=O.getParameter(O.UNPACK_IMAGE_HEIGHT),Bn=O.getParameter(O.UNPACK_SKIP_PIXELS),hn=O.getParameter(O.UNPACK_SKIP_ROWS),qr=O.getParameter(O.UNPACK_SKIP_IMAGES);O.pixelStorei(O.UNPACK_ROW_LENGTH,Et.width),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Et.height),O.pixelStorei(O.UNPACK_SKIP_PIXELS,tt),O.pixelStorei(O.UNPACK_SKIP_ROWS,Qe),O.pixelStorei(O.UNPACK_SKIP_IMAGES,je);const Mt=T.isDataArrayTexture||T.isData3DTexture,pn=W.isDataArrayTexture||W.isData3DTexture;if(T.isDepthTexture){const rn=We.get(T),Ut=We.get(W),vn=We.get(rn.__renderTarget),Yr=We.get(Ut.__renderTarget);Xe.bindFramebuffer(O.READ_FRAMEBUFFER,vn.__webglFramebuffer),Xe.bindFramebuffer(O.DRAW_FRAMEBUFFER,Yr.__webglFramebuffer);for(let ut=0;ut<ze;ut++)Mt&&(O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,We.get(T).__webglTexture,z,je+ut),O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,We.get(W).__webglTexture,_e,gt+ut)),O.blitFramebuffer(tt,Qe,Ae,Le,rt,vt,Ae,Le,O.DEPTH_BUFFER_BIT,O.NEAREST);Xe.bindFramebuffer(O.READ_FRAMEBUFFER,null),Xe.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else if(z!==0||T.isRenderTargetTexture||We.has(T)){const rn=We.get(T),Ut=We.get(W);Xe.bindFramebuffer(O.READ_FRAMEBUFFER,no),Xe.bindFramebuffer(O.DRAW_FRAMEBUFFER,ro);for(let vn=0;vn<ze;vn++)Mt?O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,rn.__webglTexture,z,je+vn):O.framebufferTexture2D(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,rn.__webglTexture,z),pn?O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Ut.__webglTexture,_e,gt+vn):O.framebufferTexture2D(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Ut.__webglTexture,_e),z!==0?O.blitFramebuffer(tt,Qe,Ae,Le,rt,vt,Ae,Le,O.COLOR_BUFFER_BIT,O.NEAREST):pn?O.copyTexSubImage3D(Ot,_e,rt,vt,gt+vn,tt,Qe,Ae,Le):O.copyTexSubImage2D(Ot,_e,rt,vt,tt,Qe,Ae,Le);Xe.bindFramebuffer(O.READ_FRAMEBUFFER,null),Xe.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else pn?T.isDataTexture||T.isData3DTexture?O.texSubImage3D(Ot,_e,rt,vt,gt,Ae,Le,ze,_t,qe,Et.data):W.isCompressedArrayTexture?O.compressedTexSubImage3D(Ot,_e,rt,vt,gt,Ae,Le,ze,_t,Et.data):O.texSubImage3D(Ot,_e,rt,vt,gt,Ae,Le,ze,_t,qe,Et):T.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,_e,rt,vt,Ae,Le,_t,qe,Et.data):T.isCompressedTexture?O.compressedTexSubImage2D(O.TEXTURE_2D,_e,rt,vt,Et.width,Et.height,_t,Et.data):O.texSubImage2D(O.TEXTURE_2D,_e,rt,vt,Ae,Le,_t,qe,Et);O.pixelStorei(O.UNPACK_ROW_LENGTH,Pt),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Jt),O.pixelStorei(O.UNPACK_SKIP_PIXELS,Bn),O.pixelStorei(O.UNPACK_SKIP_ROWS,hn),O.pixelStorei(O.UNPACK_SKIP_IMAGES,qr),_e===0&&W.generateMipmaps&&O.generateMipmap(Ot),Xe.unbindTexture()},this.copyTextureToTexture3D=function(T,W,J=null,Q=null,z=0){return T.isTexture!==!0&&(Fc("WebGLRenderer: copyTextureToTexture3D function signature has changed."),J=arguments[0]||null,Q=arguments[1]||null,T=arguments[2],W=arguments[3],z=arguments[4]||0),Fc('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(T,W,J,Q,z)},this.initRenderTarget=function(T){We.get(T).__webglFramebuffer===void 0&&P.setupRenderTarget(T)},this.initTexture=function(T){T.isCubeTexture?P.setTextureCube(T,0):T.isData3DTexture?P.setTexture3D(T,0):T.isDataArrayTexture||T.isCompressedArrayTexture?P.setTexture2DArray(T,0):P.setTexture2D(T,0),Xe.unbindTexture()},this.resetState=function(){k=0,F=0,j=null,Xe.reset(),xt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ys}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const n=this.getContext();n.drawingBufferColorspace=un._getDrawingBufferColorSpace(e),n.unpackColorSpace=un._getUnpackColorSpace()}}const VR=()=>(ws.useEffect(()=>{let a,e,n,i,s;return(()=>{a=new JE,e=new Zi(75,window.innerWidth/window.innerHeight,.1,1e3),n=new HR,n.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(n.domElement),i=new Xh,a.add(i);const d=new rx({color:47871,transparent:!0,opacity:.7});for(let p=0;p<500;p++){const m=new ix(Math.random()*1,32,32),v=new Xa(m,d);v.position.set(Math.random()*2e3-1e3,Math.random()*2e3-1e3,Math.random()*2e3-1e3),i.add(v)}e.position.z=500;const f=()=>{s=requestAnimationFrame(f),i&&(i.rotation.x+=.001,i.rotation.y+=.001),n.render(a,e)};f()})(),()=>{cancelAnimationFrame(s),n&&(n.dispose(),document.body.removeChild(n.domElement)),a=null,e=null,n=null,i=null}},[]),null),GR=()=>{const a=[{title:"Skills",description:"JavaScript, React, Node.js, Python, Java"},{title:"Projects",description:"15+ completed projects in web and app development"},{title:"Life",description:"I used to live in Spain for 4 years"},{title:"Fun Fact",description:"I like math and chess"}];return Nt.jsx("div",{className:"info-boxes-container",children:a.map((e,n)=>Nt.jsxs("div",{className:"info-box",children:[Nt.jsx("h3",{children:e.title}),Nt.jsx("p",{className:"info-box-description",children:e.description})]},n))})},WR=()=>{const a=[{title:"Media as Medium",description:"A project showcasing how to leverage Medium's API for publishing content.",github:"https://github.com/avomasrq/media-as-medium"},{title:"Twitter App",description:"A Twitter integration app that allows posting and retrieving tweets via API.",github:"https://github.com/avomasrq/twitter"}];return Nt.jsxs("div",{className:"app",children:[Nt.jsx(VR,{}),Nt.jsxs("div",{className:"content",children:[Nt.jsx(hM,{}),Nt.jsx(NM,{}),Nt.jsx(GR,{}),Nt.jsx("div",{className:"projects-container",children:a.map((e,n)=>Nt.jsx(pM,{title:e.title,description:e.description,github:e.github},n))}),Nt.jsx(EM,{}),Nt.jsx(IM,{})]})]})};fM.createRoot(document.getElementById("root")).render(Nt.jsx(ws.StrictMode,{children:Nt.jsx(WR,{})}));(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const u of s.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&n(u)}).observe(document,{childList:!0,subtree:!0});function e(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=e(i);fetch(i.href,s)}})();function E1(a){return a&&a.__esModule&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a}var Ry={exports:{}},zh={},Cy={exports:{}},Yt={};/**
* @license React
* react.production.min.js
*
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/var Py;function XR(){if(Py)return Yt;Py=1;var a=Symbol.for("react.element"),e=Symbol.for("react.portal"),n=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),u=Symbol.for("react.provider"),d=Symbol.for("react.context"),f=Symbol.for("react.forward_ref"),p=Symbol.for("react.suspense"),m=Symbol.for("react.memo"),v=Symbol.for("react.lazy"),x=Symbol.iterator;function _(U){return U===null||typeof U!="object"?null:(U=x&&U[x]||U["@@iterator"],typeof U=="function"?U:null)}var S={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w=Object.assign,b={};function y(U,te,Ue){this.props=U,this.context=te,this.refs=b,this.updater=Ue||S}y.prototype.isReactComponent={},y.prototype.setState=function(U,te){if(typeof U!="object"&&typeof U!="function"&&U!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,U,te,"setState")},y.prototype.forceUpdate=function(U){this.updater.enqueueForceUpdate(this,U,"forceUpdate")};function g(){}g.prototype=y.prototype;function I(U,te,Ue){this.props=U,this.context=te,this.refs=b,this.updater=Ue||S}var L=I.prototype=new g;L.constructor=I,w(L,y.prototype),L.isPureReactComponent=!0;var C=Array.isArray,X=Object.prototype.hasOwnProperty,k={current:null},F={key:!0,ref:!0,__self:!0,__source:!0};function j(U,te,Ue){var K,le={},Se=null,ve=null;if(te!=null)for(K in te.ref!==void 0&&(ve=te.ref),te.key!==void 0&&(Se=""+te.key),te)X.call(te,K)&&!F.hasOwnProperty(K)&&(le[K]=te[K]);var Ee=arguments.length-2;if(Ee===1)le.children=Ue;else if(1<Ee){for(var Ie=Array(Ee),Ze=0;Ze<Ee;Ze++)Ie[Ze]=arguments[Ze+2];le.children=Ie}if(U&&U.defaultProps)for(K in Ee=U.defaultProps,Ee)le[K]===void 0&&(le[K]=Ee[K]);return{$$typeof:a,type:U,key:Se,ref:ve,props:le,_owner:k.current}}function R(U,te){return{$$typeof:a,type:U.type,key:te,ref:U.ref,props:U.props,_owner:U._owner}}function A(U){return typeof U=="object"&&U!==null&&U.$$typeof===a}function V(U){var te={"=":"=0",":":"=2"};return"$"+U.replace(/[=:]/g,function(Ue){return te[Ue]})}var ie=/\/+/g;function ee(U,te){return typeof U=="object"&&U!==null&&U.key!=null?V(""+U.key):te.toString(36)}function se(U,te,Ue,K,le){var Se=typeof U;(Se==="undefined"||Se==="boolean")&&(U=null);var ve=!1;if(U===null)ve=!0;else switch(Se){case"string":case"number":ve=!0;break;case"object":switch(U.$$typeof){case a:case e:ve=!0}}if(ve)return ve=U,le=le(ve),U=K===""?"."+ee(ve,0):K,C(le)?(Ue="",U!=null&&(Ue=U.replace(ie,"$&/")+"/"),se(le,te,Ue,"",function(Ze){return Ze})):le!=null&&(A(le)&&(le=R(le,Ue+(!le.key||ve&&ve.key===le.key?"":(""+le.key).replace(ie,"$&/")+"/")+U)),te.push(le)),1;if(ve=0,K=K===""?".":K+":",C(U))for(var Ee=0;Ee<U.length;Ee++){Se=U[Ee];var Ie=K+ee(Se,Ee);ve+=se(Se,te,Ue,Ie,le)}else if(Ie=_(U),typeof Ie=="function")for(U=Ie.call(U),Ee=0;!(Se=U.next()).done;)Se=Se.value,Ie=K+ee(Se,Ee++),ve+=se(Se,te,Ue,Ie,le);else if(Se==="object")throw te=String(U),Error("Objects are not valid as a React child (found: "+(te==="[object Object]"?"object with keys {"+Object.keys(U).join(", ")+"}":te)+"). If you meant to render a collection of children, use an array instead.");return ve}function he(U,te,Ue){if(U==null)return U;var K=[],le=0;return se(U,K,"","",function(Se){return te.call(Ue,Se,le++)}),K}function oe(U){if(U._status===-1){var te=U._result;te=te(),te.then(function(Ue){(U._status===0||U._status===-1)&&(U._status=1,U._result=Ue)},function(Ue){(U._status===0||U._status===-1)&&(U._status=2,U._result=Ue)}),U._status===-1&&(U._status=0,U._result=te)}if(U._status===1)return U._result.default;throw U._result}var ue={current:null},B={transition:null},ae={ReactCurrentDispatcher:ue,ReactCurrentBatchConfig:B,ReactCurrentOwner:k};function re(){throw Error("act(...) is not supported in production builds of React.")}return Yt.Children={map:he,forEach:function(U,te,Ue){he(U,function(){te.apply(this,arguments)},Ue)},count:function(U){var te=0;return he(U,function(){te++}),te},toArray:function(U){return he(U,function(te){return te})||[]},only:function(U){if(!A(U))throw Error("React.Children.only expected to receive a single React element child.");return U}},Yt.Component=y,Yt.Fragment=n,Yt.Profiler=s,Yt.PureComponent=I,Yt.StrictMode=i,Yt.Suspense=p,Yt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ae,Yt.act=re,Yt.cloneElement=function(U,te,Ue){if(U==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+U+".");var K=w({},U.props),le=U.key,Se=U.ref,ve=U._owner;if(te!=null){if(te.ref!==void 0&&(Se=te.ref,ve=k.current),te.key!==void 0&&(le=""+te.key),U.type&&U.type.defaultProps)var Ee=U.type.defaultProps;for(Ie in te)X.call(te,Ie)&&!F.hasOwnProperty(Ie)&&(K[Ie]=te[Ie]===void 0&&Ee!==void 0?Ee[Ie]:te[Ie])}var Ie=arguments.length-2;if(Ie===1)K.children=Ue;else if(1<Ie){Ee=Array(Ie);for(var Ze=0;Ze<Ie;Ze++)Ee[Ze]=arguments[Ze+2];K.children=Ee}return{$$typeof:a,type:U.type,key:le,ref:Se,props:K,_owner:ve}},Yt.createContext=function(U){return U={$$typeof:d,_currentValue:U,_currentValue2:U,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},U.Provider={$$typeof:u,_context:U},U.Consumer=U},Yt.createElement=j,Yt.createFactory=function(U){var te=j.bind(null,U);return te.type=U,te},Yt.createRef=function(){return{current:null}},Yt.forwardRef=function(U){return{$$typeof:f,render:U}},Yt.isValidElement=A,Yt.lazy=function(U){return{$$typeof:v,_payload:{_status:-1,_result:U},_init:oe}},Yt.memo=function(U,te){return{$$typeof:m,type:U,compare:te===void 0?null:te}},Yt.startTransition=function(U){var te=B.transition;B.transition={};try{U()}finally{B.transition=te}},Yt.unstable_act=re,Yt.useCallback=function(U,te){return ue.current.useCallback(U,te)},Yt.useContext=function(U){return ue.current.useContext(U)},Yt.useDebugValue=function(){},Yt.useDeferredValue=function(U){return ue.current.useDeferredValue(U)},Yt.useEffect=function(U,te){return ue.current.useEffect(U,te)},Yt.useId=function(){return ue.current.useId()},Yt.useImperativeHandle=function(U,te,Ue){return ue.current.useImperativeHandle(U,te,Ue)},Yt.useInsertionEffect=function(U,te){return ue.current.useInsertionEffect(U,te)},Yt.useLayoutEffect=function(U,te){return ue.current.useLayoutEffect(U,te)},Yt.useMemo=function(U,te){return ue.current.useMemo(U,te)},Yt.useReducer=function(U,te,Ue){return ue.current.useReducer(U,te,Ue)},Yt.useRef=function(U){return ue.current.useRef(U)},Yt.useState=function(U){return ue.current.useState(U)},Yt.useSyncExternalStore=function(U,te,Ue){return ue.current.useSyncExternalStore(U,te,Ue)},Yt.useTransition=function(){return ue.current.useTransition()},Yt.version="18.3.1",Yt}var Dy;function ox(){return Dy||(Dy=1,Cy.exports=XR()),Cy.exports}/**
* @license React
* react-jsx-runtime.production.min.js
*
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/var Ly;function jR(){if(Ly)return zh;Ly=1;var a=ox(),e=Symbol.for("react.element"),n=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function d(f,p,m){var v,x={},_=null,S=null;m!==void 0&&(_=""+m),p.key!==void 0&&(_=""+p.key),p.ref!==void 0&&(S=p.ref);for(v in p)i.call(p,v)&&!u.hasOwnProperty(v)&&(x[v]=p[v]);if(f&&f.defaultProps)for(v in p=f.defaultProps,p)x[v]===void 0&&(x[v]=p[v]);return{$$typeof:e,type:f,key:_,ref:S,props:x,_owner:s.current}}return zh.Fragment=n,zh.jsx=d,zh.jsxs=d,zh}var Uy;function qR(){return Uy||(Uy=1,Ry.exports=jR()),Ry.exports}var Ft=qR(),Rs=ox();const nc=E1(Rs);var Cp={},Vv={exports:{}},di={},Iy={exports:{}},Ny={};/**
* @license React
* scheduler.production.min.js
*
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/var Fy;function YR(){return Fy||(Fy=1,function(a){function e(B,ae){var re=B.length;B.push(ae);e:for(;0<re;){var U=re-1>>>1,te=B[U];if(0<s(te,ae))B[U]=ae,B[re]=te,re=U;else break e}}function n(B){return B.length===0?null:B[0]}function i(B){if(B.length===0)return null;var ae=B[0],re=B.pop();if(re!==ae){B[0]=re;e:for(var U=0,te=B.length,Ue=te>>>1;U<Ue;){var K=2*(U+1)-1,le=B[K],Se=K+1,ve=B[Se];if(0>s(le,re))Se<te&&0>s(ve,le)?(B[U]=ve,B[Se]=re,U=Se):(B[U]=le,B[K]=re,U=K);else if(Se<te&&0>s(ve,re))B[U]=ve,B[Se]=re,U=Se;else break e}}return ae}function s(B,ae){var re=B.sortIndex-ae.sortIndex;return re!==0?re:B.id-ae.id}if(typeof performance=="object"&&typeof performance.now=="function"){var u=performance;a.unstable_now=function(){return u.now()}}else{var d=Date,f=d.now();a.unstable_now=function(){return d.now()-f}}var p=[],m=[],v=1,x=null,_=3,S=!1,w=!1,b=!1,y=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,I=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function L(B){for(var ae=n(m);ae!==null;){if(ae.callback===null)i(m);else if(ae.startTime<=B)i(m),ae.sortIndex=ae.expirationTime,e(p,ae);else break;ae=n(m)}}function C(B){if(b=!1,L(B),!w)if(n(p)!==null)w=!0,oe(X);else{var ae=n(m);ae!==null&&ue(C,ae.startTime-B)}}function X(B,ae){w=!1,b&&(b=!1,g(j),j=-1),S=!0;var re=_;try{for(L(ae),x=n(p);x!==null&&(!(x.expirationTime>ae)||B&&!V());){var U=x.callback;if(typeof U=="function"){x.callback=null,_=x.priorityLevel;var te=U(x.expirationTime<=ae);ae=a.unstable_now(),typeof te=="function"?x.callback=te:x===n(p)&&i(p),L(ae)}else i(p);x=n(p)}if(x!==null)var Ue=!0;else{var K=n(m);K!==null&&ue(C,K.startTime-ae),Ue=!1}return Ue}finally{x=null,_=re,S=!1}}var k=!1,F=null,j=-1,R=5,A=-1;function V(){return!(a.unstable_now()-A<R)}function ie(){if(F!==null){var B=a.unstable_now();A=B;var ae=!0;try{ae=F(!0,B)}finally{ae?ee():(k=!1,F=null)}}else k=!1}var ee;if(typeof I=="function")ee=function(){I(ie)};else if(typeof MessageChannel<"u"){var se=new MessageChannel,he=se.port2;se.port1.onmessage=ie,ee=function(){he.postMessage(null)}}else ee=function(){y(ie,0)};function oe(B){F=B,k||(k=!0,ee())}function ue(B,ae){j=y(function(){B(a.unstable_now())},ae)}a.unstable_IdlePriority=5,a.unstable_ImmediatePriority=1,a.unstable_LowPriority=4,a.unstable_NormalPriority=3,a.unstable_Profiling=null,a.unstable_UserBlockingPriority=2,a.unstable_cancelCallback=function(B){B.callback=null},a.unstable_continueExecution=function(){w||S||(w=!0,oe(X))},a.unstable_forceFrameRate=function(B){0>B||125<B?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<B?Math.floor(1e3/B):5},a.unstable_getCurrentPriorityLevel=function(){return _},a.unstable_getFirstCallbackNode=function(){return n(p)},a.unstable_next=function(B){switch(_){case 1:case 2:case 3:var ae=3;break;default:ae=_}var re=_;_=ae;try{return B()}finally{_=re}},a.unstable_pauseExecution=function(){},a.unstable_requestPaint=function(){},a.unstable_runWithPriority=function(B,ae){switch(B){case 1:case 2:case 3:case 4:case 5:break;default:B=3}var re=_;_=B;try{return ae()}finally{_=re}},a.unstable_scheduleCallback=function(B,ae,re){var U=a.unstable_now();switch(typeof re=="object"&&re!==null?(re=re.delay,re=typeof re=="number"&&0<re?U+re:U):re=U,B){case 1:var te=-1;break;case 2:te=250;break;case 5:te=1073741823;break;case 4:te=1e4;break;default:te=5e3}return te=re+te,B={id:v++,callback:ae,priorityLevel:B,startTime:re,expirationTime:te,sortIndex:-1},re>U?(B.sortIndex=re,e(m,B),n(p)===null&&B===n(m)&&(b?(g(j),j=-1):b=!0,ue(C,re-U))):(B.sortIndex=te,e(p,B),w||S||(w=!0,oe(X))),B},a.unstable_shouldYield=V,a.unstable_wrapCallback=function(B){var ae=_;return function(){var re=_;_=ae;try{return B.apply(this,arguments)}finally{_=re}}}}(Ny)),Ny}var Oy;function $R(){return Oy||(Oy=1,Iy.exports=YR()),Iy.exports}/**
* @license React
* react-dom.production.min.js
*
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/var ky;function KR(){if(ky)return di;ky=1;var a=ox(),e=$R();function n(t){for(var r="https://reactjs.org/docs/error-decoder.html?invariant="+t,o=1;o<arguments.length;o++)r+="&args[]="+encodeURIComponent(arguments[o]);return"Minified React error #"+t+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function u(t,r){d(t,r),d(t+"Capture",r)}function d(t,r){for(s[t]=r,t=0;t<r.length;t++)i.add(r[t])}var f=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),p=Object.prototype.hasOwnProperty,m=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,v={},x={};function _(t){return p.call(x,t)?!0:p.call(v,t)?!1:m.test(t)?x[t]=!0:(v[t]=!0,!1)}function S(t,r,o,l){if(o!==null&&o.type===0)return!1;switch(typeof r){case"function":case"symbol":return!0;case"boolean":return l?!1:o!==null?!o.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function w(t,r,o,l){if(r===null||typeof r>"u"||S(t,r,o,l))return!0;if(l)return!1;if(o!==null)switch(o.type){case 3:return!r;case 4:return r===!1;case 5:return isNaN(r);case 6:return isNaN(r)||1>r}return!1}function b(t,r,o,l,c,h,M){this.acceptsBooleans=r===2||r===3||r===4,this.attributeName=l,this.attributeNamespace=c,this.mustUseProperty=o,this.propertyName=t,this.type=r,this.sanitizeURL=h,this.removeEmptyString=M}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){y[t]=new b(t,0,!1,t,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var r=t[0];y[r]=new b(r,1,!1,t[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(t){y[t]=new b(t,2,!1,t.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){y[t]=new b(t,2,!1,t,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){y[t]=new b(t,3,!1,t.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(t){y[t]=new b(t,3,!0,t,null,!1,!1)}),["capture","download"].forEach(function(t){y[t]=new b(t,4,!1,t,null,!1,!1)}),["cols","rows","size","span"].forEach(function(t){y[t]=new b(t,6,!1,t,null,!1,!1)}),["rowSpan","start"].forEach(function(t){y[t]=new b(t,5,!1,t.toLowerCase(),null,!1,!1)});var g=/[\-:]([a-z])/g;function I(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var r=t.replace(g,I);y[r]=new b(r,1,!1,t,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var r=t.replace(g,I);y[r]=new b(r,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(t){var r=t.replace(g,I);y[r]=new b(r,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(t){y[t]=new b(t,1,!1,t.toLowerCase(),null,!1,!1)}),y.xlinkHref=new b("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(t){y[t]=new b(t,1,!1,t.toLowerCase(),null,!0,!0)});function L(t,r,o,l){var c=y.hasOwnProperty(r)?y[r]:null;(c!==null?c.type!==0:l||!(2<r.length)||r[0]!=="o"&&r[0]!=="O"||r[1]!=="n"&&r[1]!=="N")&&(w(r,o,c,l)&&(o=null),l||c===null?_(r)&&(o===null?t.removeAttribute(r):t.setAttribute(r,""+o)):c.mustUseProperty?t[c.propertyName]=o===null?c.type===3?!1:"":o:(r=c.attributeName,l=c.attributeNamespace,o===null?t.removeAttribute(r):(c=c.type,o=c===3||c===4&&o===!0?"":""+o,l?t.setAttributeNS(l,r,o):t.setAttribute(r,o))))}var C=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,X=Symbol.for("react.element"),k=Symbol.for("react.portal"),F=Symbol.for("react.fragment"),j=Symbol.for("react.strict_mode"),R=Symbol.for("react.profiler"),A=Symbol.for("react.provider"),V=Symbol.for("react.context"),ie=Symbol.for("react.forward_ref"),ee=Symbol.for("react.suspense"),se=Symbol.for("react.suspense_list"),he=Symbol.for("react.memo"),oe=Symbol.for("react.lazy"),ue=Symbol.for("react.offscreen"),B=Symbol.iterator;function ae(t){return t===null||typeof t!="object"?null:(t=B&&t[B]||t["@@iterator"],typeof t=="function"?t:null)}var re=Object.assign,U;function te(t){if(U===void 0)try{throw Error()}catch(o){var r=o.stack.trim().match(/\n( *(at )?)/);U=r&&r[1]||""}return`
`+U+t}var Ue=!1;function K(t,r){if(!t||Ue)return"";Ue=!0;var o=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(r)if(r=function(){throw Error()},Object.defineProperty(r.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(r,[])}catch(Z){var l=Z}Reflect.construct(t,[],r)}else{try{r.call()}catch(Z){l=Z}t.call(r.prototype)}else{try{throw Error()}catch(Z){l=Z}t()}}catch(Z){if(Z&&l&&typeof Z.stack=="string"){for(var c=Z.stack.split(`
`),h=l.stack.split(`
`),M=c.length-1,D=h.length-1;1<=M&&0<=D&&c[M]!==h[D];)D--;for(;1<=M&&0<=D;M--,D--)if(c[M]!==h[D]){if(M!==1||D!==1)do if(M--,D--,0>D||c[M]!==h[D]){var N=`
`+c[M].replace(" at new "," at ");return t.displayName&&N.includes("<anonymous>")&&(N=N.replace("<anonymous>",t.displayName)),N}while(1<=M&&0<=D);break}}}finally{Ue=!1,Error.prepareStackTrace=o}return(t=t?t.displayName||t.name:"")?te(t):""}function le(t){switch(t.tag){case 5:return te(t.type);case 16:return te("Lazy");case 13:return te("Suspense");case 19:return te("SuspenseList");case 0:case 2:case 15:return t=K(t.type,!1),t;case 11:return t=K(t.type.render,!1),t;case 1:return t=K(t.type,!0),t;default:return""}}function Se(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case F:return"Fragment";case k:return"Portal";case R:return"Profiler";case j:return"StrictMode";case ee:return"Suspense";case se:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case V:return(t.displayName||"Context")+".Consumer";case A:return(t._context.displayName||"Context")+".Provider";case ie:var r=t.render;return t=t.displayName,t||(t=r.displayName||r.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case he:return r=t.displayName||null,r!==null?r:Se(t.type)||"Memo";case oe:r=t._payload,t=t._init;try{return Se(t(r))}catch{}}return null}function ve(t){var r=t.type;switch(t.tag){case 24:return"Cache";case 9:return(r.displayName||"Context")+".Consumer";case 10:return(r._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=r.render,t=t.displayName||t.name||"",r.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return r;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Se(r);case 8:return r===j?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof r=="function")return r.displayName||r.name||null;if(typeof r=="string")return r}return null}function Ee(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function Ie(t){var r=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(r==="checkbox"||r==="radio")}function Ze(t){var r=Ie(t)?"checked":"value",o=Object.getOwnPropertyDescriptor(t.constructor.prototype,r),l=""+t[r];if(!t.hasOwnProperty(r)&&typeof o<"u"&&typeof o.get=="function"&&typeof o.set=="function"){var c=o.get,h=o.set;return Object.defineProperty(t,r,{configurable:!0,get:function(){return c.call(this)},set:function(M){l=""+M,h.call(this,M)}}),Object.defineProperty(t,r,{enumerable:o.enumerable}),{getValue:function(){return l},setValue:function(M){l=""+M},stopTracking:function(){t._valueTracker=null,delete t[r]}}}}function St(t){t._valueTracker||(t._valueTracker=Ze(t))}function ft(t){if(!t)return!1;var r=t._valueTracker;if(!r)return!0;var o=r.getValue(),l="";return t&&(l=Ie(t)?t.checked?"true":"false":t.value),t=l,t!==o?(r.setValue(t),!0):!1}function Tt(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}function O(t,r){var o=r.checked;return re({},r,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:o??t._wrapperState.initialChecked})}function dn(t,r){var o=r.defaultValue==null?"":r.defaultValue,l=r.checked!=null?r.checked:r.defaultChecked;o=Ee(r.value!=null?r.value:o),t._wrapperState={initialChecked:l,initialValue:o,controlled:r.type==="checkbox"||r.type==="radio"?r.checked!=null:r.value!=null}}function lt(t,r){r=r.checked,r!=null&&L(t,"checked",r,!1)}function ot(t,r){lt(t,r);var o=Ee(r.value),l=r.type;if(o!=null)l==="number"?(o===0&&t.value===""||t.value!=o)&&(t.value=""+o):t.value!==""+o&&(t.value=""+o);else if(l==="submit"||l==="reset"){t.removeAttribute("value");return}r.hasOwnProperty("value")?yt(t,r.type,o):r.hasOwnProperty("defaultValue")&&yt(t,r.type,Ee(r.defaultValue)),r.checked==null&&r.defaultChecked!=null&&(t.defaultChecked=!!r.defaultChecked)}function Xe(t,r,o){if(r.hasOwnProperty("value")||r.hasOwnProperty("defaultValue")){var l=r.type;if(!(l!=="submit"&&l!=="reset"||r.value!==void 0&&r.value!==null))return;r=""+t._wrapperState.initialValue,o||r===t.value||(t.value=r),t.defaultValue=r}o=t.name,o!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,o!==""&&(t.name=o)}function yt(t,r,o){(r!=="number"||Tt(t.ownerDocument)!==t)&&(o==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+o&&(t.defaultValue=""+o))}var We=Array.isArray;function P(t,r,o,l){if(t=t.options,r){r={};for(var c=0;c<o.length;c++)r["$"+o[c]]=!0;for(o=0;o<t.length;o++)c=r.hasOwnProperty("$"+t[o].value),t[o].selected!==c&&(t[o].selected=c),c&&l&&(t[o].defaultSelected=!0)}else{for(o=""+Ee(o),r=null,c=0;c<t.length;c++){if(t[c].value===o){t[c].selected=!0,l&&(t[c].defaultSelected=!0);return}r!==null||t[c].disabled||(r=t[c])}r!==null&&(r.selected=!0)}}function E(t,r){if(r.dangerouslySetInnerHTML!=null)throw Error(n(91));return re({},r,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function $(t,r){var o=r.value;if(o==null){if(o=r.children,r=r.defaultValue,o!=null){if(r!=null)throw Error(n(92));if(We(o)){if(1<o.length)throw Error(n(93));o=o[0]}r=o}r==null&&(r=""),o=r}t._wrapperState={initialValue:Ee(o)}}function fe(t,r){var o=Ee(r.value),l=Ee(r.defaultValue);o!=null&&(o=""+o,o!==t.value&&(t.value=o),r.defaultValue==null&&t.defaultValue!==o&&(t.defaultValue=o)),l!=null&&(t.defaultValue=""+l)}function ge(t){var r=t.textContent;r===t._wrapperState.initialValue&&r!==""&&r!==null&&(t.value=r)}function ce(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ve(t,r){return t==null||t==="http://www.w3.org/1999/xhtml"?ce(r):t==="http://www.w3.org/2000/svg"&&r==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var Te,Ne=function(t){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(r,o,l,c){MSApp.execUnsafeLocalFunction(function(){return t(r,o,l,c)})}:t}(function(t,r){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=r;else{for(Te=Te||document.createElement("div"),Te.innerHTML="<svg>"+r.valueOf().toString()+"</svg>",r=Te.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;r.firstChild;)t.appendChild(r.firstChild)}});function at(t,r){if(r){var o=t.firstChild;if(o&&o===t.lastChild&&o.nodeType===3){o.nodeValue=r;return}}t.textContent=r}var ye={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Oe=["Webkit","ms","Moz","O"];Object.keys(ye).forEach(function(t){Oe.forEach(function(r){r=r+t.charAt(0).toUpperCase()+t.substring(1),ye[r]=ye[t]})});function Ye(t,r,o){return r==null||typeof r=="boolean"||r===""?"":o||typeof r!="number"||r===0||ye.hasOwnProperty(t)&&ye[t]?(""+r).trim():r+"px"}function Je(t,r){t=t.style;for(var o in r)if(r.hasOwnProperty(o)){var l=o.indexOf("--")===0,c=Ye(o,r[o],l);o==="float"&&(o="cssFloat"),l?t.setProperty(o,c):t[o]=c}}var ke=re({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function st(t,r){if(r){if(ke[t]&&(r.children!=null||r.dangerouslySetInnerHTML!=null))throw Error(n(137,t));if(r.dangerouslySetInnerHTML!=null){if(r.children!=null)throw Error(n(60));if(typeof r.dangerouslySetInnerHTML!="object"||!("__html"in r.dangerouslySetInnerHTML))throw Error(n(61))}if(r.style!=null&&typeof r.style!="object")throw Error(n(62))}}function nt(t,r){if(t.indexOf("-")===-1)return typeof r.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xt=null;function G(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var we=null,ne=null,de=null;function Re(t){if(t=ma(t)){if(typeof we!="function")throw Error(n(280));var r=t.stateNode;r&&(r=yo(r),we(t.stateNode,t.type,r))}}function be(t){ne?de?de.push(t):de=[t]:ne=t}function it(){if(ne){var t=ne,r=de;if(de=ne=null,Re(t),r)for(t=0;t<r.length;t++)Re(r[t])}}function bt(t,r){return t(r)}function Wt(){}var ht=!1;function _n(t,r,o){if(ht)return t(r,o);ht=!0;try{return bt(t,r,o)}finally{ht=!1,(ne!==null||de!==null)&&(Wt(),it())}}function fn(t,r){var o=t.stateNode;if(o===null)return null;var l=yo(o);if(l===null)return null;o=l[r];e:switch(r){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(l=!l.disabled)||(t=t.type,l=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!l;break e;default:t=!1}if(t)return null;if(o&&typeof o!="function")throw Error(n(231,r,typeof o));return o}var vi=!1;if(f)try{var yr={};Object.defineProperty(yr,"passive",{get:function(){vi=!0}}),window.addEventListener("test",yr,yr),window.removeEventListener("test",yr,yr)}catch{vi=!1}function ir(t,r,o,l,c,h,M,D,N){var Z=Array.prototype.slice.call(arguments,3);try{r.apply(o,Z)}catch(me){this.onError(me)}}var ar=!1,Xr=null,jr=!1,Sr=null,Ja={onError:function(t){ar=!0,Xr=t}};function _i(t,r,o,l,c,h,M,D,N){ar=!1,Xr=null,ir.apply(Ja,arguments)}function Qa(t,r,o,l,c,h,M,D,N){if(_i.apply(this,arguments),ar){if(ar){var Z=Xr;ar=!1,Xr=null}else throw Error(n(198));jr||(jr=!0,Sr=Z)}}function qn(t){var r=t,o=t;if(t.alternate)for(;r.return;)r=r.return;else{t=r;do r=t,r.flags&4098&&(o=r.return),t=r.return;while(t)}return r.tag===3?o:null}function eo(t){if(t.tag===13){var r=t.memoizedState;if(r===null&&(t=t.alternate,t!==null&&(r=t.memoizedState)),r!==null)return r.dehydrated}return null}function to(t){if(qn(t)!==t)throw Error(n(188))}function tl(t){var r=t.alternate;if(!r){if(r=qn(t),r===null)throw Error(n(188));return r!==t?null:t}for(var o=t,l=r;;){var c=o.return;if(c===null)break;var h=c.alternate;if(h===null){if(l=c.return,l!==null){o=l;continue}break}if(c.child===h.child){for(h=c.child;h;){if(h===o)return to(c),t;if(h===l)return to(c),r;h=h.sibling}throw Error(n(188))}if(o.return!==l.return)o=c,l=h;else{for(var M=!1,D=c.child;D;){if(D===o){M=!0,o=c,l=h;break}if(D===l){M=!0,l=c,o=h;break}D=D.sibling}if(!M){for(D=h.child;D;){if(D===o){M=!0,o=h,l=c;break}if(D===l){M=!0,l=h,o=c;break}D=D.sibling}if(!M)throw Error(n(189))}}if(o.alternate!==l)throw Error(n(190))}if(o.tag!==3)throw Error(n(188));return o.stateNode.current===o?t:r}function no(t){return t=tl(t),t!==null?ro(t):null}function ro(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var r=ro(t);if(r!==null)return r;t=t.sibling}return null}var T=e.unstable_scheduleCallback,W=e.unstable_cancelCallback,J=e.unstable_shouldYield,Q=e.unstable_requestPaint,z=e.unstable_now,_e=e.unstable_getCurrentPriorityLevel,Ae=e.unstable_ImmediatePriority,Le=e.unstable_UserBlockingPriority,ze=e.unstable_NormalPriority,tt=e.unstable_LowPriority,Qe=e.unstable_IdlePriority,je=null,rt=null;function vt(t){if(rt&&typeof rt.onCommitFiberRoot=="function")try{rt.onCommitFiberRoot(je,t,void 0,(t.current.flags&128)===128)}catch{}}var gt=Math.clz32?Math.clz32:qe,Et=Math.log,_t=Math.LN2;function qe(t){return t>>>=0,t===0?32:31-(Et(t)/_t|0)|0}var Ot=64,Pt=4194304;function Jt(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function Bn(t,r){var o=t.pendingLanes;if(o===0)return 0;var l=0,c=t.suspendedLanes,h=t.pingedLanes,M=o&268435455;if(M!==0){var D=M&~c;D!==0?l=Jt(D):(h&=M,h!==0&&(l=Jt(h)))}else M=o&~c,M!==0?l=Jt(M):h!==0&&(l=Jt(h));if(l===0)return 0;if(r!==0&&r!==l&&!(r&c)&&(c=l&-l,h=r&-r,c>=h||c===16&&(h&4194240)!==0))return r;if(l&4&&(l|=o&16),r=t.entangledLanes,r!==0)for(t=t.entanglements,r&=l;0<r;)o=31-gt(r),c=1<<o,l|=t[o],r&=~c;return l}function hn(t,r){switch(t){case 1:case 2:case 4:return r+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function qr(t,r){for(var o=t.suspendedLanes,l=t.pingedLanes,c=t.expirationTimes,h=t.pendingLanes;0<h;){var M=31-gt(h),D=1<<M,N=c[M];N===-1?(!(D&o)||D&l)&&(c[M]=hn(D,r)):N<=r&&(t.expiredLanes|=D),h&=~D}}function Mt(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function pn(){var t=Ot;return Ot<<=1,!(Ot&4194240)&&(Ot=64),t}function rn(t){for(var r=[],o=0;31>o;o++)r.push(t);return r}function Ut(t,r,o){t.pendingLanes|=r,r!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,r=31-gt(r),t[r]=o}function vn(t,r){var o=t.pendingLanes&~r;t.pendingLanes=r,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=r,t.mutableReadLanes&=r,t.entangledLanes&=r,r=t.entanglements;var l=t.eventTimes;for(t=t.expirationTimes;0<o;){var c=31-gt(o),h=1<<c;r[c]=0,l[c]=-1,t[c]=-1,o&=~h}}function Yr(t,r){var o=t.entangledLanes|=r;for(t=t.entanglements;o;){var l=31-gt(o),c=1<<l;c&r|t[l]&r&&(t[l]|=r),o&=~c}}var ut=0;function cd(t){return t&=-t,1<t?4<t?t&268435455?16:536870912:4:1}var dd,nl,fd,hd,pd,rl=!1,io=[],Mr=null,Er=null,Tr=null,Qi=new Map,ea=new Map,wr=[],Cm="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function md(t,r){switch(t){case"focusin":case"focusout":Mr=null;break;case"dragenter":case"dragleave":Er=null;break;case"mouseover":case"mouseout":Tr=null;break;case"pointerover":case"pointerout":Qi.delete(r.pointerId);break;case"gotpointercapture":case"lostpointercapture":ea.delete(r.pointerId)}}function ta(t,r,o,l,c,h){return t===null||t.nativeEvent!==h?(t={blockedOn:r,domEventName:o,eventSystemFlags:l,nativeEvent:h,targetContainers:[c]},r!==null&&(r=ma(r),r!==null&&nl(r)),t):(t.eventSystemFlags|=l,r=t.targetContainers,c!==null&&r.indexOf(c)===-1&&r.push(c),t)}function Pm(t,r,o,l,c){switch(r){case"focusin":return Mr=ta(Mr,t,r,o,l,c),!0;case"dragenter":return Er=ta(Er,t,r,o,l,c),!0;case"mouseover":return Tr=ta(Tr,t,r,o,l,c),!0;case"pointerover":var h=c.pointerId;return Qi.set(h,ta(Qi.get(h)||null,t,r,o,l,c)),!0;case"gotpointercapture":return h=c.pointerId,ea.set(h,ta(ea.get(h)||null,t,r,o,l,c)),!0}return!1}function gd(t){var r=$r(t.target);if(r!==null){var o=qn(r);if(o!==null){if(r=o.tag,r===13){if(r=eo(o),r!==null){t.blockedOn=r,pd(t.priority,function(){fd(o)});return}}else if(r===3&&o.stateNode.current.memoizedState.isDehydrated){t.blockedOn=o.tag===3?o.stateNode.containerInfo:null;return}}}t.blockedOn=null}function ao(t){if(t.blockedOn!==null)return!1;for(var r=t.targetContainers;0<r.length;){var o=al(t.domEventName,t.eventSystemFlags,r[0],t.nativeEvent);if(o===null){o=t.nativeEvent;var l=new o.constructor(o.type,o);xt=l,o.target.dispatchEvent(l),xt=null}else return r=ma(o),r!==null&&nl(r),t.blockedOn=o,!1;r.shift()}return!0}function vd(t,r,o){ao(t)&&o.delete(r)}function Dm(){rl=!1,Mr!==null&&ao(Mr)&&(Mr=null),Er!==null&&ao(Er)&&(Er=null),Tr!==null&&ao(Tr)&&(Tr=null),Qi.forEach(vd),ea.forEach(vd)}function na(t,r){t.blockedOn===r&&(t.blockedOn=null,rl||(rl=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,Dm)))}function ra(t){function r(c){return na(c,t)}if(0<io.length){na(io[0],t);for(var o=1;o<io.length;o++){var l=io[o];l.blockedOn===t&&(l.blockedOn=null)}}for(Mr!==null&&na(Mr,t),Er!==null&&na(Er,t),Tr!==null&&na(Tr,t),Qi.forEach(r),ea.forEach(r),o=0;o<wr.length;o++)l=wr[o],l.blockedOn===t&&(l.blockedOn=null);for(;0<wr.length&&(o=wr[0],o.blockedOn===null);)gd(o),o.blockedOn===null&&wr.shift()}var xi=C.ReactCurrentBatchConfig,oo=!0;function Lm(t,r,o,l){var c=ut,h=xi.transition;xi.transition=null;try{ut=1,il(t,r,o,l)}finally{ut=c,xi.transition=h}}function Um(t,r,o,l){var c=ut,h=xi.transition;xi.transition=null;try{ut=4,il(t,r,o,l)}finally{ut=c,xi.transition=h}}function il(t,r,o,l){if(oo){var c=al(t,r,o,l);if(c===null)Ml(t,r,l,so,o),md(t,l);else if(Pm(c,t,r,o,l))l.stopPropagation();else if(md(t,l),r&4&&-1<Cm.indexOf(t)){for(;c!==null;){var h=ma(c);if(h!==null&&dd(h),h=al(t,r,o,l),h===null&&Ml(t,r,l,so,o),h===c)break;c=h}c!==null&&l.stopPropagation()}else Ml(t,r,l,null,o)}}var so=null;function al(t,r,o,l){if(so=null,t=G(l),t=$r(t),t!==null)if(r=qn(t),r===null)t=null;else if(o=r.tag,o===13){if(t=eo(r),t!==null)return t;t=null}else if(o===3){if(r.stateNode.current.memoizedState.isDehydrated)return r.tag===3?r.stateNode.containerInfo:null;t=null}else r!==t&&(t=null);return so=t,null}function _d(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(_e()){case Ae:return 1;case Le:return 4;case ze:case tt:return 16;case Qe:return 536870912;default:return 16}default:return 16}}var br=null,ol=null,lo=null;function xd(){if(lo)return lo;var t,r=ol,o=r.length,l,c="value"in br?br.value:br.textContent,h=c.length;for(t=0;t<o&&r[t]===c[t];t++);var M=o-t;for(l=1;l<=M&&r[o-l]===c[h-l];l++);return lo=c.slice(t,1<l?1-l:void 0)}function uo(t){var r=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&r===13&&(t=13)):t=r,t===10&&(t=13),32<=t||t===13?t:0}function co(){return!0}function yd(){return!1}function Rn(t){function r(o,l,c,h,M){this._reactName=o,this._targetInst=c,this.type=l,this.nativeEvent=h,this.target=M,this.currentTarget=null;for(var D in t)t.hasOwnProperty(D)&&(o=t[D],this[D]=o?o(h):h[D]);return this.isDefaultPrevented=(h.defaultPrevented!=null?h.defaultPrevented:h.returnValue===!1)?co:yd,this.isPropagationStopped=yd,this}return re(r.prototype,{preventDefault:function(){this.defaultPrevented=!0;var o=this.nativeEvent;o&&(o.preventDefault?o.preventDefault():typeof o.returnValue!="unknown"&&(o.returnValue=!1),this.isDefaultPrevented=co)},stopPropagation:function(){var o=this.nativeEvent;o&&(o.stopPropagation?o.stopPropagation():typeof o.cancelBubble!="unknown"&&(o.cancelBubble=!0),this.isPropagationStopped=co)},persist:function(){},isPersistent:co}),r}var yi={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sl=Rn(yi),ia=re({},yi,{view:0,detail:0}),Im=Rn(ia),ll,ul,aa,fo=re({},ia,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:dl,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==aa&&(aa&&t.type==="mousemove"?(ll=t.screenX-aa.screenX,ul=t.screenY-aa.screenY):ul=ll=0,aa=t),ll)},movementY:function(t){return"movementY"in t?t.movementY:ul}}),Sd=Rn(fo),Nm=re({},fo,{dataTransfer:0}),Fm=Rn(Nm),Om=re({},ia,{relatedTarget:0}),cl=Rn(Om),km=re({},yi,{animationName:0,elapsedTime:0,pseudoElement:0}),zm=Rn(km),Bm=re({},yi,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),Hm=Rn(Bm),Vm=re({},yi,{data:0}),Md=Rn(Vm),Gm={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Wm={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Xm={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function jm(t){var r=this.nativeEvent;return r.getModifierState?r.getModifierState(t):(t=Xm[t])?!!r[t]:!1}function dl(){return jm}var qm=re({},ia,{key:function(t){if(t.key){var r=Gm[t.key]||t.key;if(r!=="Unidentified")return r}return t.type==="keypress"?(t=uo(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?Wm[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:dl,charCode:function(t){return t.type==="keypress"?uo(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?uo(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),Ym=Rn(qm),$m=re({},fo,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Ed=Rn($m),Km=re({},ia,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:dl}),Zm=Rn(Km),Jm=re({},yi,{propertyName:0,elapsedTime:0,pseudoElement:0}),Qm=Rn(Jm),eg=re({},fo,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),tg=Rn(eg),ng=[9,13,27,32],fl=f&&"CompositionEvent"in window,oa=null;f&&"documentMode"in document&&(oa=document.documentMode);var rg=f&&"TextEvent"in window&&!oa,Td=f&&(!fl||oa&&8<oa&&11>=oa),wd=" ",bd=!1;function Ad(t,r){switch(t){case"keyup":return ng.indexOf(r.keyCode)!==-1;case"keydown":return r.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Rd(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var Si=!1;function ig(t,r){switch(t){case"compositionend":return Rd(r);case"keypress":return r.which!==32?null:(bd=!0,wd);case"textInput":return t=r.data,t===wd&&bd?null:t;default:return null}}function ag(t,r){if(Si)return t==="compositionend"||!fl&&Ad(t,r)?(t=xd(),lo=ol=br=null,Si=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(r.ctrlKey||r.altKey||r.metaKey)||r.ctrlKey&&r.altKey){if(r.char&&1<r.char.length)return r.char;if(r.which)return String.fromCharCode(r.which)}return null;case"compositionend":return Td&&r.locale!=="ko"?null:r.data;default:return null}}var og={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Cd(t){var r=t&&t.nodeName&&t.nodeName.toLowerCase();return r==="input"?!!og[t.type]:r==="textarea"}function Pd(t,r,o,l){be(l),r=vo(r,"onChange"),0<r.length&&(o=new sl("onChange","change",null,o,l),t.push({event:o,listeners:r}))}var sa=null,la=null;function sg(t){Yd(t,0)}function ho(t){var r=bi(t);if(ft(r))return t}function lg(t,r){if(t==="change")return r}var Dd=!1;if(f){var hl;if(f){var pl="oninput"in document;if(!pl){var Ld=document.createElement("div");Ld.setAttribute("oninput","return;"),pl=typeof Ld.oninput=="function"}hl=pl}else hl=!1;Dd=hl&&(!document.documentMode||9<document.documentMode)}function Ud(){sa&&(sa.detachEvent("onpropertychange",Id),la=sa=null)}function Id(t){if(t.propertyName==="value"&&ho(la)){var r=[];Pd(r,la,t,G(t)),_n(sg,r)}}function ug(t,r,o){t==="focusin"?(Ud(),sa=r,la=o,sa.attachEvent("onpropertychange",Id)):t==="focusout"&&Ud()}function cg(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return ho(la)}function dg(t,r){if(t==="click")return ho(r)}function fg(t,r){if(t==="input"||t==="change")return ho(r)}function hg(t,r){return t===r&&(t!==0||1/t===1/r)||t!==t&&r!==r}var Hn=typeof Object.is=="function"?Object.is:hg;function ua(t,r){if(Hn(t,r))return!0;if(typeof t!="object"||t===null||typeof r!="object"||r===null)return!1;var o=Object.keys(t),l=Object.keys(r);if(o.length!==l.length)return!1;for(l=0;l<o.length;l++){var c=o[l];if(!p.call(r,c)||!Hn(t[c],r[c]))return!1}return!0}function Nd(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Fd(t,r){var o=Nd(t);t=0;for(var l;o;){if(o.nodeType===3){if(l=t+o.textContent.length,t<=r&&l>=r)return{node:o,offset:r-t};t=l}e:{for(;o;){if(o.nextSibling){o=o.nextSibling;break e}o=o.parentNode}o=void 0}o=Nd(o)}}function Od(t,r){return t&&r?t===r?!0:t&&t.nodeType===3?!1:r&&r.nodeType===3?Od(t,r.parentNode):"contains"in t?t.contains(r):t.compareDocumentPosition?!!(t.compareDocumentPosition(r)&16):!1:!1}function kd(){for(var t=window,r=Tt();r instanceof t.HTMLIFrameElement;){try{var o=typeof r.contentWindow.location.href=="string"}catch{o=!1}if(o)t=r.contentWindow;else break;r=Tt(t.document)}return r}function ml(t){var r=t&&t.nodeName&&t.nodeName.toLowerCase();return r&&(r==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||r==="textarea"||t.contentEditable==="true")}function pg(t){var r=kd(),o=t.focusedElem,l=t.selectionRange;if(r!==o&&o&&o.ownerDocument&&Od(o.ownerDocument.documentElement,o)){if(l!==null&&ml(o)){if(r=l.start,t=l.end,t===void 0&&(t=r),"selectionStart"in o)o.selectionStart=r,o.selectionEnd=Math.min(t,o.value.length);else if(t=(r=o.ownerDocument||document)&&r.defaultView||window,t.getSelection){t=t.getSelection();var c=o.textContent.length,h=Math.min(l.start,c);l=l.end===void 0?h:Math.min(l.end,c),!t.extend&&h>l&&(c=l,l=h,h=c),c=Fd(o,h);var M=Fd(o,l);c&&M&&(t.rangeCount!==1||t.anchorNode!==c.node||t.anchorOffset!==c.offset||t.focusNode!==M.node||t.focusOffset!==M.offset)&&(r=r.createRange(),r.setStart(c.node,c.offset),t.removeAllRanges(),h>l?(t.addRange(r),t.extend(M.node,M.offset)):(r.setEnd(M.node,M.offset),t.addRange(r)))}}for(r=[],t=o;t=t.parentNode;)t.nodeType===1&&r.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof o.focus=="function"&&o.focus(),o=0;o<r.length;o++)t=r[o],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var mg=f&&"documentMode"in document&&11>=document.documentMode,Mi=null,gl=null,ca=null,vl=!1;function zd(t,r,o){var l=o.window===o?o.document:o.nodeType===9?o:o.ownerDocument;vl||Mi==null||Mi!==Tt(l)||(l=Mi,"selectionStart"in l&&ml(l)?l={start:l.selectionStart,end:l.selectionEnd}:(l=(l.ownerDocument&&l.ownerDocument.defaultView||window).getSelection(),l={anchorNode:l.anchorNode,anchorOffset:l.anchorOffset,focusNode:l.focusNode,focusOffset:l.focusOffset}),ca&&ua(ca,l)||(ca=l,l=vo(gl,"onSelect"),0<l.length&&(r=new sl("onSelect","select",null,r,o),t.push({event:r,listeners:l}),r.target=Mi)))}function po(t,r){var o={};return o[t.toLowerCase()]=r.toLowerCase(),o["Webkit"+t]="webkit"+r,o["Moz"+t]="moz"+r,o}var Ei={animationend:po("Animation","AnimationEnd"),animationiteration:po("Animation","AnimationIteration"),animationstart:po("Animation","AnimationStart"),transitionend:po("Transition","TransitionEnd")},_l={},Bd={};f&&(Bd=document.createElement("div").style,"AnimationEvent"in window||(delete Ei.animationend.animation,delete Ei.animationiteration.animation,delete Ei.animationstart.animation),"TransitionEvent"in window||delete Ei.transitionend.transition);function mo(t){if(_l[t])return _l[t];if(!Ei[t])return t;var r=Ei[t],o;for(o in r)if(r.hasOwnProperty(o)&&o in Bd)return _l[t]=r[o];return t}var Hd=mo("animationend"),Vd=mo("animationiteration"),Gd=mo("animationstart"),Wd=mo("transitionend"),Xd=new Map,jd="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ar(t,r){Xd.set(t,r),u(r,[t])}for(var xl=0;xl<jd.length;xl++){var yl=jd[xl],gg=yl.toLowerCase(),vg=yl[0].toUpperCase()+yl.slice(1);Ar(gg,"on"+vg)}Ar(Hd,"onAnimationEnd"),Ar(Vd,"onAnimationIteration"),Ar(Gd,"onAnimationStart"),Ar("dblclick","onDoubleClick"),Ar("focusin","onFocus"),Ar("focusout","onBlur"),Ar(Wd,"onTransitionEnd"),d("onMouseEnter",["mouseout","mouseover"]),d("onMouseLeave",["mouseout","mouseover"]),d("onPointerEnter",["pointerout","pointerover"]),d("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var da="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),_g=new Set("cancel close invalid load scroll toggle".split(" ").concat(da));function qd(t,r,o){var l=t.type||"unknown-event";t.currentTarget=o,Qa(l,r,void 0,t),t.currentTarget=null}function Yd(t,r){r=(r&4)!==0;for(var o=0;o<t.length;o++){var l=t[o],c=l.event;l=l.listeners;e:{var h=void 0;if(r)for(var M=l.length-1;0<=M;M--){var D=l[M],N=D.instance,Z=D.currentTarget;if(D=D.listener,N!==h&&c.isPropagationStopped())break e;qd(c,D,Z),h=N}else for(M=0;M<l.length;M++){if(D=l[M],N=D.instance,Z=D.currentTarget,D=D.listener,N!==h&&c.isPropagationStopped())break e;qd(c,D,Z),h=N}}}if(jr)throw t=Sr,jr=!1,Sr=null,t}function At(t,r){var o=r[Rl];o===void 0&&(o=r[Rl]=new Set);var l=t+"__bubble";o.has(l)||($d(r,t,2,!1),o.add(l))}function Sl(t,r,o){var l=0;r&&(l|=4),$d(o,t,l,r)}var go="_reactListening"+Math.random().toString(36).slice(2);function fa(t){if(!t[go]){t[go]=!0,i.forEach(function(o){o!=="selectionchange"&&(_g.has(o)||Sl(o,!1,t),Sl(o,!0,t))});var r=t.nodeType===9?t:t.ownerDocument;r===null||r[go]||(r[go]=!0,Sl("selectionchange",!1,r))}}function $d(t,r,o,l){switch(_d(r)){case 1:var c=Lm;break;case 4:c=Um;break;default:c=il}o=c.bind(null,r,o,t),c=void 0,!vi||r!=="touchstart"&&r!=="touchmove"&&r!=="wheel"||(c=!0),l?c!==void 0?t.addEventListener(r,o,{capture:!0,passive:c}):t.addEventListener(r,o,!0):c!==void 0?t.addEventListener(r,o,{passive:c}):t.addEventListener(r,o,!1)}function Ml(t,r,o,l,c){var h=l;if(!(r&1)&&!(r&2)&&l!==null)e:for(;;){if(l===null)return;var M=l.tag;if(M===3||M===4){var D=l.stateNode.containerInfo;if(D===c||D.nodeType===8&&D.parentNode===c)break;if(M===4)for(M=l.return;M!==null;){var N=M.tag;if((N===3||N===4)&&(N=M.stateNode.containerInfo,N===c||N.nodeType===8&&N.parentNode===c))return;M=M.return}for(;D!==null;){if(M=$r(D),M===null)return;if(N=M.tag,N===5||N===6){l=h=M;continue e}D=D.parentNode}}l=l.return}_n(function(){var Z=h,me=G(o),xe=[];e:{var pe=Xd.get(t);if(pe!==void 0){var Ce=sl,Be=t;switch(t){case"keypress":if(uo(o)===0)break e;case"keydown":case"keyup":Ce=Ym;break;case"focusin":Be="focus",Ce=cl;break;case"focusout":Be="blur",Ce=cl;break;case"beforeblur":case"afterblur":Ce=cl;break;case"click":if(o.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":Ce=Sd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":Ce=Fm;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":Ce=Zm;break;case Hd:case Vd:case Gd:Ce=zm;break;case Wd:Ce=Qm;break;case"scroll":Ce=Im;break;case"wheel":Ce=tg;break;case"copy":case"cut":case"paste":Ce=Hm;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":Ce=Ed}var He=(r&4)!==0,kt=!He&&t==="scroll",q=He?pe!==null?pe+"Capture":null:pe;He=[];for(var H=Z,Y;H!==null;){Y=H;var Me=Y.stateNode;if(Y.tag===5&&Me!==null&&(Y=Me,q!==null&&(Me=fn(H,q),Me!=null&&He.push(ha(H,Me,Y)))),kt)break;H=H.return}0<He.length&&(pe=new Ce(pe,Be,null,o,me),xe.push({event:pe,listeners:He}))}}if(!(r&7)){e:{if(pe=t==="mouseover"||t==="pointerover",Ce=t==="mouseout"||t==="pointerout",pe&&o!==xt&&(Be=o.relatedTarget||o.fromElement)&&($r(Be)||Be[or]))break e;if((Ce||pe)&&(pe=me.window===me?me:(pe=me.ownerDocument)?pe.defaultView||pe.parentWindow:window,Ce?(Be=o.relatedTarget||o.toElement,Ce=Z,Be=Be?$r(Be):null,Be!==null&&(kt=qn(Be),Be!==kt||Be.tag!==5&&Be.tag!==6)&&(Be=null)):(Ce=null,Be=Z),Ce!==Be)){if(He=Sd,Me="onMouseLeave",q="onMouseEnter",H="mouse",(t==="pointerout"||t==="pointerover")&&(He=Ed,Me="onPointerLeave",q="onPointerEnter",H="pointer"),kt=Ce==null?pe:bi(Ce),Y=Be==null?pe:bi(Be),pe=new He(Me,H+"leave",Ce,o,me),pe.target=kt,pe.relatedTarget=Y,Me=null,$r(me)===Z&&(He=new He(q,H+"enter",Be,o,me),He.target=Y,He.relatedTarget=kt,Me=He),kt=Me,Ce&&Be)t:{for(He=Ce,q=Be,H=0,Y=He;Y;Y=Ti(Y))H++;for(Y=0,Me=q;Me;Me=Ti(Me))Y++;for(;0<H-Y;)He=Ti(He),H--;for(;0<Y-H;)q=Ti(q),Y--;for(;H--;){if(He===q||q!==null&&He===q.alternate)break t;He=Ti(He),q=Ti(q)}He=null}else He=null;Ce!==null&&Kd(xe,pe,Ce,He,!1),Be!==null&&kt!==null&&Kd(xe,kt,Be,He,!0)}}e:{if(pe=Z?bi(Z):window,Ce=pe.nodeName&&pe.nodeName.toLowerCase(),Ce==="select"||Ce==="input"&&pe.type==="file")var Ge=lg;else if(Cd(pe))if(Dd)Ge=fg;else{Ge=cg;var $e=ug}else(Ce=pe.nodeName)&&Ce.toLowerCase()==="input"&&(pe.type==="checkbox"||pe.type==="radio")&&(Ge=dg);if(Ge&&(Ge=Ge(t,Z))){Pd(xe,Ge,o,me);break e}$e&&$e(t,pe,Z),t==="focusout"&&($e=pe._wrapperState)&&$e.controlled&&pe.type==="number"&&yt(pe,"number",pe.value)}switch($e=Z?bi(Z):window,t){case"focusin":(Cd($e)||$e.contentEditable==="true")&&(Mi=$e,gl=Z,ca=null);break;case"focusout":ca=gl=Mi=null;break;case"mousedown":vl=!0;break;case"contextmenu":case"mouseup":case"dragend":vl=!1,zd(xe,o,me);break;case"selectionchange":if(mg)break;case"keydown":case"keyup":zd(xe,o,me)}var Ke;if(fl)e:{switch(t){case"compositionstart":var et="onCompositionStart";break e;case"compositionend":et="onCompositionEnd";break e;case"compositionupdate":et="onCompositionUpdate";break e}et=void 0}else Si?Ad(t,o)&&(et="onCompositionEnd"):t==="keydown"&&o.keyCode===229&&(et="onCompositionStart");et&&(Td&&o.locale!=="ko"&&(Si||et!=="onCompositionStart"?et==="onCompositionEnd"&&Si&&(Ke=xd()):(br=me,ol="value"in br?br.value:br.textContent,Si=!0)),$e=vo(Z,et),0<$e.length&&(et=new Md(et,t,null,o,me),xe.push({event:et,listeners:$e}),Ke?et.data=Ke:(Ke=Rd(o),Ke!==null&&(et.data=Ke)))),(Ke=rg?ig(t,o):ag(t,o))&&(Z=vo(Z,"onBeforeInput"),0<Z.length&&(me=new Md("onBeforeInput","beforeinput",null,o,me),xe.push({event:me,listeners:Z}),me.data=Ke))}Yd(xe,r)})}function ha(t,r,o){return{instance:t,listener:r,currentTarget:o}}function vo(t,r){for(var o=r+"Capture",l=[];t!==null;){var c=t,h=c.stateNode;c.tag===5&&h!==null&&(c=h,h=fn(t,o),h!=null&&l.unshift(ha(t,h,c)),h=fn(t,r),h!=null&&l.push(ha(t,h,c))),t=t.return}return l}function Ti(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function Kd(t,r,o,l,c){for(var h=r._reactName,M=[];o!==null&&o!==l;){var D=o,N=D.alternate,Z=D.stateNode;if(N!==null&&N===l)break;D.tag===5&&Z!==null&&(D=Z,c?(N=fn(o,h),N!=null&&M.unshift(ha(o,N,D))):c||(N=fn(o,h),N!=null&&M.push(ha(o,N,D)))),o=o.return}M.length!==0&&t.push({event:r,listeners:M})}var xg=/\r\n?/g,yg=/\u0000|\uFFFD/g;function Zd(t){return(typeof t=="string"?t:""+t).replace(xg,`
`).replace(yg,"")}function _o(t,r,o){if(r=Zd(r),Zd(t)!==r&&o)throw Error(n(425))}function xo(){}var El=null,Tl=null;function wl(t,r){return t==="textarea"||t==="noscript"||typeof r.children=="string"||typeof r.children=="number"||typeof r.dangerouslySetInnerHTML=="object"&&r.dangerouslySetInnerHTML!==null&&r.dangerouslySetInnerHTML.__html!=null}var bl=typeof setTimeout=="function"?setTimeout:void 0,Sg=typeof clearTimeout=="function"?clearTimeout:void 0,Jd=typeof Promise=="function"?Promise:void 0,Mg=typeof queueMicrotask=="function"?queueMicrotask:typeof Jd<"u"?function(t){return Jd.resolve(null).then(t).catch(Eg)}:bl;function Eg(t){setTimeout(function(){throw t})}function Al(t,r){var o=r,l=0;do{var c=o.nextSibling;if(t.removeChild(o),c&&c.nodeType===8)if(o=c.data,o==="/$"){if(l===0){t.removeChild(c),ra(r);return}l--}else o!=="$"&&o!=="$?"&&o!=="$!"||l++;o=c}while(o);ra(r)}function Rr(t){for(;t!=null;t=t.nextSibling){var r=t.nodeType;if(r===1||r===3)break;if(r===8){if(r=t.data,r==="$"||r==="$!"||r==="$?")break;if(r==="/$")return null}}return t}function Qd(t){t=t.previousSibling;for(var r=0;t;){if(t.nodeType===8){var o=t.data;if(o==="$"||o==="$!"||o==="$?"){if(r===0)return t;r--}else o==="/$"&&r++}t=t.previousSibling}return null}var wi=Math.random().toString(36).slice(2),Yn="__reactFiber$"+wi,pa="__reactProps$"+wi,or="__reactContainer$"+wi,Rl="__reactEvents$"+wi,Tg="__reactListeners$"+wi,wg="__reactHandles$"+wi;function $r(t){var r=t[Yn];if(r)return r;for(var o=t.parentNode;o;){if(r=o[or]||o[Yn]){if(o=r.alternate,r.child!==null||o!==null&&o.child!==null)for(t=Qd(t);t!==null;){if(o=t[Yn])return o;t=Qd(t)}return r}t=o,o=t.parentNode}return null}function ma(t){return t=t[Yn]||t[or],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function bi(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(n(33))}function yo(t){return t[pa]||null}var Cl=[],Ai=-1;function Cr(t){return{current:t}}function Rt(t){0>Ai||(t.current=Cl[Ai],Cl[Ai]=null,Ai--)}function wt(t,r){Ai++,Cl[Ai]=t.current,t.current=r}var Pr={},an=Cr(Pr),xn=Cr(!1),Kr=Pr;function Ri(t,r){var o=t.type.contextTypes;if(!o)return Pr;var l=t.stateNode;if(l&&l.__reactInternalMemoizedUnmaskedChildContext===r)return l.__reactInternalMemoizedMaskedChildContext;var c={},h;for(h in o)c[h]=r[h];return l&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=c),c}function yn(t){return t=t.childContextTypes,t!=null}function So(){Rt(xn),Rt(an)}function ef(t,r,o){if(an.current!==Pr)throw Error(n(168));wt(an,r),wt(xn,o)}function tf(t,r,o){var l=t.stateNode;if(r=r.childContextTypes,typeof l.getChildContext!="function")return o;l=l.getChildContext();for(var c in l)if(!(c in r))throw Error(n(108,ve(t)||"Unknown",c));return re({},o,l)}function Mo(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||Pr,Kr=an.current,wt(an,t),wt(xn,xn.current),!0}function nf(t,r,o){var l=t.stateNode;if(!l)throw Error(n(169));o?(t=tf(t,r,Kr),l.__reactInternalMemoizedMergedChildContext=t,Rt(xn),Rt(an),wt(an,t)):Rt(xn),wt(xn,o)}var sr=null,Eo=!1,Pl=!1;function rf(t){sr===null?sr=[t]:sr.push(t)}function bg(t){Eo=!0,rf(t)}function Dr(){if(!Pl&&sr!==null){Pl=!0;var t=0,r=ut;try{var o=sr;for(ut=1;t<o.length;t++){var l=o[t];do l=l(!0);while(l!==null)}sr=null,Eo=!1}catch(c){throw sr!==null&&(sr=sr.slice(t+1)),T(Ae,Dr),c}finally{ut=r,Pl=!1}}return null}var Ci=[],Pi=0,To=null,wo=0,In=[],Nn=0,Zr=null,lr=1,ur="";function Jr(t,r){Ci[Pi++]=wo,Ci[Pi++]=To,To=t,wo=r}function af(t,r,o){In[Nn++]=lr,In[Nn++]=ur,In[Nn++]=Zr,Zr=t;var l=lr;t=ur;var c=32-gt(l)-1;l&=~(1<<c),o+=1;var h=32-gt(r)+c;if(30<h){var M=c-c%5;h=(l&(1<<M)-1).toString(32),l>>=M,c-=M,lr=1<<32-gt(r)+c|o<<c|l,ur=h+t}else lr=1<<h|o<<c|l,ur=t}function Dl(t){t.return!==null&&(Jr(t,1),af(t,1,0))}function Ll(t){for(;t===To;)To=Ci[--Pi],Ci[Pi]=null,wo=Ci[--Pi],Ci[Pi]=null;for(;t===Zr;)Zr=In[--Nn],In[Nn]=null,ur=In[--Nn],In[Nn]=null,lr=In[--Nn],In[Nn]=null}var Cn=null,Pn=null,Ct=!1,Vn=null;function of(t,r){var o=zn(5,null,null,0);o.elementType="DELETED",o.stateNode=r,o.return=t,r=t.deletions,r===null?(t.deletions=[o],t.flags|=16):r.push(o)}function sf(t,r){switch(t.tag){case 5:var o=t.type;return r=r.nodeType!==1||o.toLowerCase()!==r.nodeName.toLowerCase()?null:r,r!==null?(t.stateNode=r,Cn=t,Pn=Rr(r.firstChild),!0):!1;case 6:return r=t.pendingProps===""||r.nodeType!==3?null:r,r!==null?(t.stateNode=r,Cn=t,Pn=null,!0):!1;case 13:return r=r.nodeType!==8?null:r,r!==null?(o=Zr!==null?{id:lr,overflow:ur}:null,t.memoizedState={dehydrated:r,treeContext:o,retryLane:1073741824},o=zn(18,null,null,0),o.stateNode=r,o.return=t,t.child=o,Cn=t,Pn=null,!0):!1;default:return!1}}function Ul(t){return(t.mode&1)!==0&&(t.flags&128)===0}function Il(t){if(Ct){var r=Pn;if(r){var o=r;if(!sf(t,r)){if(Ul(t))throw Error(n(418));r=Rr(o.nextSibling);var l=Cn;r&&sf(t,r)?of(l,o):(t.flags=t.flags&-4097|2,Ct=!1,Cn=t)}}else{if(Ul(t))throw Error(n(418));t.flags=t.flags&-4097|2,Ct=!1,Cn=t}}}function lf(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;Cn=t}function bo(t){if(t!==Cn)return!1;if(!Ct)return lf(t),Ct=!0,!1;var r;if((r=t.tag!==3)&&!(r=t.tag!==5)&&(r=t.type,r=r!=="head"&&r!=="body"&&!wl(t.type,t.memoizedProps)),r&&(r=Pn)){if(Ul(t))throw uf(),Error(n(418));for(;r;)of(t,r),r=Rr(r.nextSibling)}if(lf(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(n(317));e:{for(t=t.nextSibling,r=0;t;){if(t.nodeType===8){var o=t.data;if(o==="/$"){if(r===0){Pn=Rr(t.nextSibling);break e}r--}else o!=="$"&&o!=="$!"&&o!=="$?"||r++}t=t.nextSibling}Pn=null}}else Pn=Cn?Rr(t.stateNode.nextSibling):null;return!0}function uf(){for(var t=Pn;t;)t=Rr(t.nextSibling)}function Di(){Pn=Cn=null,Ct=!1}function Nl(t){Vn===null?Vn=[t]:Vn.push(t)}var Ag=C.ReactCurrentBatchConfig;function ga(t,r,o){if(t=o.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(o._owner){if(o=o._owner,o){if(o.tag!==1)throw Error(n(309));var l=o.stateNode}if(!l)throw Error(n(147,t));var c=l,h=""+t;return r!==null&&r.ref!==null&&typeof r.ref=="function"&&r.ref._stringRef===h?r.ref:(r=function(M){var D=c.refs;M===null?delete D[h]:D[h]=M},r._stringRef=h,r)}if(typeof t!="string")throw Error(n(284));if(!o._owner)throw Error(n(290,t))}return t}function Ao(t,r){throw t=Object.prototype.toString.call(r),Error(n(31,t==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":t))}function cf(t){var r=t._init;return r(t._payload)}function df(t){function r(q,H){if(t){var Y=q.deletions;Y===null?(q.deletions=[H],q.flags|=16):Y.push(H)}}function o(q,H){if(!t)return null;for(;H!==null;)r(q,H),H=H.sibling;return null}function l(q,H){for(q=new Map;H!==null;)H.key!==null?q.set(H.key,H):q.set(H.index,H),H=H.sibling;return q}function c(q,H){return q=zr(q,H),q.index=0,q.sibling=null,q}function h(q,H,Y){return q.index=Y,t?(Y=q.alternate,Y!==null?(Y=Y.index,Y<H?(q.flags|=2,H):Y):(q.flags|=2,H)):(q.flags|=1048576,H)}function M(q){return t&&q.alternate===null&&(q.flags|=2),q}function D(q,H,Y,Me){return H===null||H.tag!==6?(H=wu(Y,q.mode,Me),H.return=q,H):(H=c(H,Y),H.return=q,H)}function N(q,H,Y,Me){var Ge=Y.type;return Ge===F?me(q,H,Y.props.children,Me,Y.key):H!==null&&(H.elementType===Ge||typeof Ge=="object"&&Ge!==null&&Ge.$$typeof===oe&&cf(Ge)===H.type)?(Me=c(H,Y.props),Me.ref=ga(q,H,Y),Me.return=q,Me):(Me=Zo(Y.type,Y.key,Y.props,null,q.mode,Me),Me.ref=ga(q,H,Y),Me.return=q,Me)}function Z(q,H,Y,Me){return H===null||H.tag!==4||H.stateNode.containerInfo!==Y.containerInfo||H.stateNode.implementation!==Y.implementation?(H=bu(Y,q.mode,Me),H.return=q,H):(H=c(H,Y.children||[]),H.return=q,H)}function me(q,H,Y,Me,Ge){return H===null||H.tag!==7?(H=oi(Y,q.mode,Me,Ge),H.return=q,H):(H=c(H,Y),H.return=q,H)}function xe(q,H,Y){if(typeof H=="string"&&H!==""||typeof H=="number")return H=wu(""+H,q.mode,Y),H.return=q,H;if(typeof H=="object"&&H!==null){switch(H.$$typeof){case X:return Y=Zo(H.type,H.key,H.props,null,q.mode,Y),Y.ref=ga(q,null,H),Y.return=q,Y;case k:return H=bu(H,q.mode,Y),H.return=q,H;case oe:var Me=H._init;return xe(q,Me(H._payload),Y)}if(We(H)||ae(H))return H=oi(H,q.mode,Y,null),H.return=q,H;Ao(q,H)}return null}function pe(q,H,Y,Me){var Ge=H!==null?H.key:null;if(typeof Y=="string"&&Y!==""||typeof Y=="number")return Ge!==null?null:D(q,H,""+Y,Me);if(typeof Y=="object"&&Y!==null){switch(Y.$$typeof){case X:return Y.key===Ge?N(q,H,Y,Me):null;case k:return Y.key===Ge?Z(q,H,Y,Me):null;case oe:return Ge=Y._init,pe(q,H,Ge(Y._payload),Me)}if(We(Y)||ae(Y))return Ge!==null?null:me(q,H,Y,Me,null);Ao(q,Y)}return null}function Ce(q,H,Y,Me,Ge){if(typeof Me=="string"&&Me!==""||typeof Me=="number")return q=q.get(Y)||null,D(H,q,""+Me,Ge);if(typeof Me=="object"&&Me!==null){switch(Me.$$typeof){case X:return q=q.get(Me.key===null?Y:Me.key)||null,N(H,q,Me,Ge);case k:return q=q.get(Me.key===null?Y:Me.key)||null,Z(H,q,Me,Ge);case oe:var $e=Me._init;return Ce(q,H,Y,$e(Me._payload),Ge)}if(We(Me)||ae(Me))return q=q.get(Y)||null,me(H,q,Me,Ge,null);Ao(H,Me)}return null}function Be(q,H,Y,Me){for(var Ge=null,$e=null,Ke=H,et=H=0,Zt=null;Ke!==null&&et<Y.length;et++){Ke.index>et?(Zt=Ke,Ke=null):Zt=Ke.sibling;var mt=pe(q,Ke,Y[et],Me);if(mt===null){Ke===null&&(Ke=Zt);break}t&&Ke&&mt.alternate===null&&r(q,Ke),H=h(mt,H,et),$e===null?Ge=mt:$e.sibling=mt,$e=mt,Ke=Zt}if(et===Y.length)return o(q,Ke),Ct&&Jr(q,et),Ge;if(Ke===null){for(;et<Y.length;et++)Ke=xe(q,Y[et],Me),Ke!==null&&(H=h(Ke,H,et),$e===null?Ge=Ke:$e.sibling=Ke,$e=Ke);return Ct&&Jr(q,et),Ge}for(Ke=l(q,Ke);et<Y.length;et++)Zt=Ce(Ke,q,et,Y[et],Me),Zt!==null&&(t&&Zt.alternate!==null&&Ke.delete(Zt.key===null?et:Zt.key),H=h(Zt,H,et),$e===null?Ge=Zt:$e.sibling=Zt,$e=Zt);return t&&Ke.forEach(function(Br){return r(q,Br)}),Ct&&Jr(q,et),Ge}function He(q,H,Y,Me){var Ge=ae(Y);if(typeof Ge!="function")throw Error(n(150));if(Y=Ge.call(Y),Y==null)throw Error(n(151));for(var $e=Ge=null,Ke=H,et=H=0,Zt=null,mt=Y.next();Ke!==null&&!mt.done;et++,mt=Y.next()){Ke.index>et?(Zt=Ke,Ke=null):Zt=Ke.sibling;var Br=pe(q,Ke,mt.value,Me);if(Br===null){Ke===null&&(Ke=Zt);break}t&&Ke&&Br.alternate===null&&r(q,Ke),H=h(Br,H,et),$e===null?Ge=Br:$e.sibling=Br,$e=Br,Ke=Zt}if(mt.done)return o(q,Ke),Ct&&Jr(q,et),Ge;if(Ke===null){for(;!mt.done;et++,mt=Y.next())mt=xe(q,mt.value,Me),mt!==null&&(H=h(mt,H,et),$e===null?Ge=mt:$e.sibling=mt,$e=mt);return Ct&&Jr(q,et),Ge}for(Ke=l(q,Ke);!mt.done;et++,mt=Y.next())mt=Ce(Ke,q,et,mt.value,Me),mt!==null&&(t&&mt.alternate!==null&&Ke.delete(mt.key===null?et:mt.key),H=h(mt,H,et),$e===null?Ge=mt:$e.sibling=mt,$e=mt);return t&&Ke.forEach(function(av){return r(q,av)}),Ct&&Jr(q,et),Ge}function kt(q,H,Y,Me){if(typeof Y=="object"&&Y!==null&&Y.type===F&&Y.key===null&&(Y=Y.props.children),typeof Y=="object"&&Y!==null){switch(Y.$$typeof){case X:e:{for(var Ge=Y.key,$e=H;$e!==null;){if($e.key===Ge){if(Ge=Y.type,Ge===F){if($e.tag===7){o(q,$e.sibling),H=c($e,Y.props.children),H.return=q,q=H;break e}}else if($e.elementType===Ge||typeof Ge=="object"&&Ge!==null&&Ge.$$typeof===oe&&cf(Ge)===$e.type){o(q,$e.sibling),H=c($e,Y.props),H.ref=ga(q,$e,Y),H.return=q,q=H;break e}o(q,$e);break}else r(q,$e);$e=$e.sibling}Y.type===F?(H=oi(Y.props.children,q.mode,Me,Y.key),H.return=q,q=H):(Me=Zo(Y.type,Y.key,Y.props,null,q.mode,Me),Me.ref=ga(q,H,Y),Me.return=q,q=Me)}return M(q);case k:e:{for($e=Y.key;H!==null;){if(H.key===$e)if(H.tag===4&&H.stateNode.containerInfo===Y.containerInfo&&H.stateNode.implementation===Y.implementation){o(q,H.sibling),H=c(H,Y.children||[]),H.return=q,q=H;break e}else{o(q,H);break}else r(q,H);H=H.sibling}H=bu(Y,q.mode,Me),H.return=q,q=H}return M(q);case oe:return $e=Y._init,kt(q,H,$e(Y._payload),Me)}if(We(Y))return Be(q,H,Y,Me);if(ae(Y))return He(q,H,Y,Me);Ao(q,Y)}return typeof Y=="string"&&Y!==""||typeof Y=="number"?(Y=""+Y,H!==null&&H.tag===6?(o(q,H.sibling),H=c(H,Y),H.return=q,q=H):(o(q,H),H=wu(Y,q.mode,Me),H.return=q,q=H),M(q)):o(q,H)}return kt}var Li=df(!0),ff=df(!1),Ro=Cr(null),Co=null,Ui=null,Fl=null;function Ol(){Fl=Ui=Co=null}function kl(t){var r=Ro.current;Rt(Ro),t._currentValue=r}function zl(t,r,o){for(;t!==null;){var l=t.alternate;if((t.childLanes&r)!==r?(t.childLanes|=r,l!==null&&(l.childLanes|=r)):l!==null&&(l.childLanes&r)!==r&&(l.childLanes|=r),t===o)break;t=t.return}}function Ii(t,r){Co=t,Fl=Ui=null,t=t.dependencies,t!==null&&t.firstContext!==null&&(t.lanes&r&&(Sn=!0),t.firstContext=null)}function Fn(t){var r=t._currentValue;if(Fl!==t)if(t={context:t,memoizedValue:r,next:null},Ui===null){if(Co===null)throw Error(n(308));Ui=t,Co.dependencies={lanes:0,firstContext:t}}else Ui=Ui.next=t;return r}var Qr=null;function Bl(t){Qr===null?Qr=[t]:Qr.push(t)}function hf(t,r,o,l){var c=r.interleaved;return c===null?(o.next=o,Bl(r)):(o.next=c.next,c.next=o),r.interleaved=o,cr(t,l)}function cr(t,r){t.lanes|=r;var o=t.alternate;for(o!==null&&(o.lanes|=r),o=t,t=t.return;t!==null;)t.childLanes|=r,o=t.alternate,o!==null&&(o.childLanes|=r),o=t,t=t.return;return o.tag===3?o.stateNode:null}var Lr=!1;function Hl(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function pf(t,r){t=t.updateQueue,r.updateQueue===t&&(r.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function dr(t,r){return{eventTime:t,lane:r,tag:0,payload:null,callback:null,next:null}}function Ur(t,r,o){var l=t.updateQueue;if(l===null)return null;if(l=l.shared,pt&2){var c=l.pending;return c===null?r.next=r:(r.next=c.next,c.next=r),l.pending=r,cr(t,o)}return c=l.interleaved,c===null?(r.next=r,Bl(l)):(r.next=c.next,c.next=r),l.interleaved=r,cr(t,o)}function Po(t,r,o){if(r=r.updateQueue,r!==null&&(r=r.shared,(o&4194240)!==0)){var l=r.lanes;l&=t.pendingLanes,o|=l,r.lanes=o,Yr(t,o)}}function mf(t,r){var o=t.updateQueue,l=t.alternate;if(l!==null&&(l=l.updateQueue,o===l)){var c=null,h=null;if(o=o.firstBaseUpdate,o!==null){do{var M={eventTime:o.eventTime,lane:o.lane,tag:o.tag,payload:o.payload,callback:o.callback,next:null};h===null?c=h=M:h=h.next=M,o=o.next}while(o!==null);h===null?c=h=r:h=h.next=r}else c=h=r;o={baseState:l.baseState,firstBaseUpdate:c,lastBaseUpdate:h,shared:l.shared,effects:l.effects},t.updateQueue=o;return}t=o.lastBaseUpdate,t===null?o.firstBaseUpdate=r:t.next=r,o.lastBaseUpdate=r}function Do(t,r,o,l){var c=t.updateQueue;Lr=!1;var h=c.firstBaseUpdate,M=c.lastBaseUpdate,D=c.shared.pending;if(D!==null){c.shared.pending=null;var N=D,Z=N.next;N.next=null,M===null?h=Z:M.next=Z,M=N;var me=t.alternate;me!==null&&(me=me.updateQueue,D=me.lastBaseUpdate,D!==M&&(D===null?me.firstBaseUpdate=Z:D.next=Z,me.lastBaseUpdate=N))}if(h!==null){var xe=c.baseState;M=0,me=Z=N=null,D=h;do{var pe=D.lane,Ce=D.eventTime;if((l&pe)===pe){me!==null&&(me=me.next={eventTime:Ce,lane:0,tag:D.tag,payload:D.payload,callback:D.callback,next:null});e:{var Be=t,He=D;switch(pe=r,Ce=o,He.tag){case 1:if(Be=He.payload,typeof Be=="function"){xe=Be.call(Ce,xe,pe);break e}xe=Be;break e;case 3:Be.flags=Be.flags&-65537|128;case 0:if(Be=He.payload,pe=typeof Be=="function"?Be.call(Ce,xe,pe):Be,pe==null)break e;xe=re({},xe,pe);break e;case 2:Lr=!0}}D.callback!==null&&D.lane!==0&&(t.flags|=64,pe=c.effects,pe===null?c.effects=[D]:pe.push(D))}else Ce={eventTime:Ce,lane:pe,tag:D.tag,payload:D.payload,callback:D.callback,next:null},me===null?(Z=me=Ce,N=xe):me=me.next=Ce,M|=pe;if(D=D.next,D===null){if(D=c.shared.pending,D===null)break;pe=D,D=pe.next,pe.next=null,c.lastBaseUpdate=pe,c.shared.pending=null}}while(!0);if(me===null&&(N=xe),c.baseState=N,c.firstBaseUpdate=Z,c.lastBaseUpdate=me,r=c.shared.interleaved,r!==null){c=r;do M|=c.lane,c=c.next;while(c!==r)}else h===null&&(c.shared.lanes=0);ni|=M,t.lanes=M,t.memoizedState=xe}}function gf(t,r,o){if(t=r.effects,r.effects=null,t!==null)for(r=0;r<t.length;r++){var l=t[r],c=l.callback;if(c!==null){if(l.callback=null,l=o,typeof c!="function")throw Error(n(191,c));c.call(l)}}}var va={},$n=Cr(va),_a=Cr(va),xa=Cr(va);function ei(t){if(t===va)throw Error(n(174));return t}function Vl(t,r){switch(wt(xa,r),wt(_a,t),wt($n,va),t=r.nodeType,t){case 9:case 11:r=(r=r.documentElement)?r.namespaceURI:Ve(null,"");break;default:t=t===8?r.parentNode:r,r=t.namespaceURI||null,t=t.tagName,r=Ve(r,t)}Rt($n),wt($n,r)}function Ni(){Rt($n),Rt(_a),Rt(xa)}function vf(t){ei(xa.current);var r=ei($n.current),o=Ve(r,t.type);r!==o&&(wt(_a,t),wt($n,o))}function Gl(t){_a.current===t&&(Rt($n),Rt(_a))}var Dt=Cr(0);function Lo(t){for(var r=t;r!==null;){if(r.tag===13){var o=r.memoizedState;if(o!==null&&(o=o.dehydrated,o===null||o.data==="$?"||o.data==="$!"))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if(r.flags&128)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===t)break;for(;r.sibling===null;){if(r.return===null||r.return===t)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}var Wl=[];function Xl(){for(var t=0;t<Wl.length;t++)Wl[t]._workInProgressVersionPrimary=null;Wl.length=0}var Uo=C.ReactCurrentDispatcher,jl=C.ReactCurrentBatchConfig,ti=0,Lt=null,Xt=null,$t=null,Io=!1,ya=!1,Sa=0,Rg=0;function on(){throw Error(n(321))}function ql(t,r){if(r===null)return!1;for(var o=0;o<r.length&&o<t.length;o++)if(!Hn(t[o],r[o]))return!1;return!0}function Yl(t,r,o,l,c,h){if(ti=h,Lt=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,Uo.current=t===null||t.memoizedState===null?Lg:Ug,t=o(l,c),ya){h=0;do{if(ya=!1,Sa=0,25<=h)throw Error(n(301));h+=1,$t=Xt=null,r.updateQueue=null,Uo.current=Ig,t=o(l,c)}while(ya)}if(Uo.current=Oo,r=Xt!==null&&Xt.next!==null,ti=0,$t=Xt=Lt=null,Io=!1,r)throw Error(n(300));return t}function $l(){var t=Sa!==0;return Sa=0,t}function Kn(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return $t===null?Lt.memoizedState=$t=t:$t=$t.next=t,$t}function On(){if(Xt===null){var t=Lt.alternate;t=t!==null?t.memoizedState:null}else t=Xt.next;var r=$t===null?Lt.memoizedState:$t.next;if(r!==null)$t=r,Xt=t;else{if(t===null)throw Error(n(310));Xt=t,t={memoizedState:Xt.memoizedState,baseState:Xt.baseState,baseQueue:Xt.baseQueue,queue:Xt.queue,next:null},$t===null?Lt.memoizedState=$t=t:$t=$t.next=t}return $t}function Ma(t,r){return typeof r=="function"?r(t):r}function Kl(t){var r=On(),o=r.queue;if(o===null)throw Error(n(311));o.lastRenderedReducer=t;var l=Xt,c=l.baseQueue,h=o.pending;if(h!==null){if(c!==null){var M=c.next;c.next=h.next,h.next=M}l.baseQueue=c=h,o.pending=null}if(c!==null){h=c.next,l=l.baseState;var D=M=null,N=null,Z=h;do{var me=Z.lane;if((ti&me)===me)N!==null&&(N=N.next={lane:0,action:Z.action,hasEagerState:Z.hasEagerState,eagerState:Z.eagerState,next:null}),l=Z.hasEagerState?Z.eagerState:t(l,Z.action);else{var xe={lane:me,action:Z.action,hasEagerState:Z.hasEagerState,eagerState:Z.eagerState,next:null};N===null?(D=N=xe,M=l):N=N.next=xe,Lt.lanes|=me,ni|=me}Z=Z.next}while(Z!==null&&Z!==h);N===null?M=l:N.next=D,Hn(l,r.memoizedState)||(Sn=!0),r.memoizedState=l,r.baseState=M,r.baseQueue=N,o.lastRenderedState=l}if(t=o.interleaved,t!==null){c=t;do h=c.lane,Lt.lanes|=h,ni|=h,c=c.next;while(c!==t)}else c===null&&(o.lanes=0);return[r.memoizedState,o.dispatch]}function Zl(t){var r=On(),o=r.queue;if(o===null)throw Error(n(311));o.lastRenderedReducer=t;var l=o.dispatch,c=o.pending,h=r.memoizedState;if(c!==null){o.pending=null;var M=c=c.next;do h=t(h,M.action),M=M.next;while(M!==c);Hn(h,r.memoizedState)||(Sn=!0),r.memoizedState=h,r.baseQueue===null&&(r.baseState=h),o.lastRenderedState=h}return[h,l]}function _f(){}function xf(t,r){var o=Lt,l=On(),c=r(),h=!Hn(l.memoizedState,c);if(h&&(l.memoizedState=c,Sn=!0),l=l.queue,Jl(Mf.bind(null,o,l,t),[t]),l.getSnapshot!==r||h||$t!==null&&$t.memoizedState.tag&1){if(o.flags|=2048,Ea(9,Sf.bind(null,o,l,c,r),void 0,null),Kt===null)throw Error(n(349));ti&30||yf(o,r,c)}return c}function yf(t,r,o){t.flags|=16384,t={getSnapshot:r,value:o},r=Lt.updateQueue,r===null?(r={lastEffect:null,stores:null},Lt.updateQueue=r,r.stores=[t]):(o=r.stores,o===null?r.stores=[t]:o.push(t))}function Sf(t,r,o,l){r.value=o,r.getSnapshot=l,Ef(r)&&Tf(t)}function Mf(t,r,o){return o(function(){Ef(r)&&Tf(t)})}function Ef(t){var r=t.getSnapshot;t=t.value;try{var o=r();return!Hn(t,o)}catch{return!0}}function Tf(t){var r=cr(t,1);r!==null&&jn(r,t,1,-1)}function wf(t){var r=Kn();return typeof t=="function"&&(t=t()),r.memoizedState=r.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ma,lastRenderedState:t},r.queue=t,t=t.dispatch=Dg.bind(null,Lt,t),[r.memoizedState,t]}function Ea(t,r,o,l){return t={tag:t,create:r,destroy:o,deps:l,next:null},r=Lt.updateQueue,r===null?(r={lastEffect:null,stores:null},Lt.updateQueue=r,r.lastEffect=t.next=t):(o=r.lastEffect,o===null?r.lastEffect=t.next=t:(l=o.next,o.next=t,t.next=l,r.lastEffect=t)),t}function bf(){return On().memoizedState}function No(t,r,o,l){var c=Kn();Lt.flags|=t,c.memoizedState=Ea(1|r,o,void 0,l===void 0?null:l)}function Fo(t,r,o,l){var c=On();l=l===void 0?null:l;var h=void 0;if(Xt!==null){var M=Xt.memoizedState;if(h=M.destroy,l!==null&&ql(l,M.deps)){c.memoizedState=Ea(r,o,h,l);return}}Lt.flags|=t,c.memoizedState=Ea(1|r,o,h,l)}function Af(t,r){return No(8390656,8,t,r)}function Jl(t,r){return Fo(2048,8,t,r)}function Rf(t,r){return Fo(4,2,t,r)}function Cf(t,r){return Fo(4,4,t,r)}function Pf(t,r){if(typeof r=="function")return t=t(),r(t),function(){r(null)};if(r!=null)return t=t(),r.current=t,function(){r.current=null}}function Df(t,r,o){return o=o!=null?o.concat([t]):null,Fo(4,4,Pf.bind(null,r,t),o)}function Ql(){}function Lf(t,r){var o=On();r=r===void 0?null:r;var l=o.memoizedState;return l!==null&&r!==null&&ql(r,l[1])?l[0]:(o.memoizedState=[t,r],t)}function Uf(t,r){var o=On();r=r===void 0?null:r;var l=o.memoizedState;return l!==null&&r!==null&&ql(r,l[1])?l[0]:(t=t(),o.memoizedState=[t,r],t)}function If(t,r,o){return ti&21?(Hn(o,r)||(o=pn(),Lt.lanes|=o,ni|=o,t.baseState=!0),r):(t.baseState&&(t.baseState=!1,Sn=!0),t.memoizedState=o)}function Cg(t,r){var o=ut;ut=o!==0&&4>o?o:4,t(!0);var l=jl.transition;jl.transition={};try{t(!1),r()}finally{ut=o,jl.transition=l}}function Nf(){return On().memoizedState}function Pg(t,r,o){var l=Or(t);if(o={lane:l,action:o,hasEagerState:!1,eagerState:null,next:null},Ff(t))Of(r,o);else if(o=hf(t,r,o,l),o!==null){var c=gn();jn(o,t,l,c),kf(o,r,l)}}function Dg(t,r,o){var l=Or(t),c={lane:l,action:o,hasEagerState:!1,eagerState:null,next:null};if(Ff(t))Of(r,c);else{var h=t.alternate;if(t.lanes===0&&(h===null||h.lanes===0)&&(h=r.lastRenderedReducer,h!==null))try{var M=r.lastRenderedState,D=h(M,o);if(c.hasEagerState=!0,c.eagerState=D,Hn(D,M)){var N=r.interleaved;N===null?(c.next=c,Bl(r)):(c.next=N.next,N.next=c),r.interleaved=c;return}}catch{}finally{}o=hf(t,r,c,l),o!==null&&(c=gn(),jn(o,t,l,c),kf(o,r,l))}}function Ff(t){var r=t.alternate;return t===Lt||r!==null&&r===Lt}function Of(t,r){ya=Io=!0;var o=t.pending;o===null?r.next=r:(r.next=o.next,o.next=r),t.pending=r}function kf(t,r,o){if(o&4194240){var l=r.lanes;l&=t.pendingLanes,o|=l,r.lanes=o,Yr(t,o)}}var Oo={readContext:Fn,useCallback:on,useContext:on,useEffect:on,useImperativeHandle:on,useInsertionEffect:on,useLayoutEffect:on,useMemo:on,useReducer:on,useRef:on,useState:on,useDebugValue:on,useDeferredValue:on,useTransition:on,useMutableSource:on,useSyncExternalStore:on,useId:on,unstable_isNewReconciler:!1},Lg={readContext:Fn,useCallback:function(t,r){return Kn().memoizedState=[t,r===void 0?null:r],t},useContext:Fn,useEffect:Af,useImperativeHandle:function(t,r,o){return o=o!=null?o.concat([t]):null,No(4194308,4,Pf.bind(null,r,t),o)},useLayoutEffect:function(t,r){return No(4194308,4,t,r)},useInsertionEffect:function(t,r){return No(4,2,t,r)},useMemo:function(t,r){var o=Kn();return r=r===void 0?null:r,t=t(),o.memoizedState=[t,r],t},useReducer:function(t,r,o){var l=Kn();return r=o!==void 0?o(r):r,l.memoizedState=l.baseState=r,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:r},l.queue=t,t=t.dispatch=Pg.bind(null,Lt,t),[l.memoizedState,t]},useRef:function(t){var r=Kn();return t={current:t},r.memoizedState=t},useState:wf,useDebugValue:Ql,useDeferredValue:function(t){return Kn().memoizedState=t},useTransition:function(){var t=wf(!1),r=t[0];return t=Cg.bind(null,t[1]),Kn().memoizedState=t,[r,t]},useMutableSource:function(){},useSyncExternalStore:function(t,r,o){var l=Lt,c=Kn();if(Ct){if(o===void 0)throw Error(n(407));o=o()}else{if(o=r(),Kt===null)throw Error(n(349));ti&30||yf(l,r,o)}c.memoizedState=o;var h={value:o,getSnapshot:r};return c.queue=h,Af(Mf.bind(null,l,h,t),[t]),l.flags|=2048,Ea(9,Sf.bind(null,l,h,o,r),void 0,null),o},useId:function(){var t=Kn(),r=Kt.identifierPrefix;if(Ct){var o=ur,l=lr;o=(l&~(1<<32-gt(l)-1)).toString(32)+o,r=":"+r+"R"+o,o=Sa++,0<o&&(r+="H"+o.toString(32)),r+=":"}else o=Rg++,r=":"+r+"r"+o.toString(32)+":";return t.memoizedState=r},unstable_isNewReconciler:!1},Ug={readContext:Fn,useCallback:Lf,useContext:Fn,useEffect:Jl,useImperativeHandle:Df,useInsertionEffect:Rf,useLayoutEffect:Cf,useMemo:Uf,useReducer:Kl,useRef:bf,useState:function(){return Kl(Ma)},useDebugValue:Ql,useDeferredValue:function(t){var r=On();return If(r,Xt.memoizedState,t)},useTransition:function(){var t=Kl(Ma)[0],r=On().memoizedState;return[t,r]},useMutableSource:_f,useSyncExternalStore:xf,useId:Nf,unstable_isNewReconciler:!1},Ig={readContext:Fn,useCallback:Lf,useContext:Fn,useEffect:Jl,useImperativeHandle:Df,useInsertionEffect:Rf,useLayoutEffect:Cf,useMemo:Uf,useReducer:Zl,useRef:bf,useState:function(){return Zl(Ma)},useDebugValue:Ql,useDeferredValue:function(t){var r=On();return Xt===null?r.memoizedState=t:If(r,Xt.memoizedState,t)},useTransition:function(){var t=Zl(Ma)[0],r=On().memoizedState;return[t,r]},useMutableSource:_f,useSyncExternalStore:xf,useId:Nf,unstable_isNewReconciler:!1};function Gn(t,r){if(t&&t.defaultProps){r=re({},r),t=t.defaultProps;for(var o in t)r[o]===void 0&&(r[o]=t[o]);return r}return r}function eu(t,r,o,l){r=t.memoizedState,o=o(l,r),o=o==null?r:re({},r,o),t.memoizedState=o,t.lanes===0&&(t.updateQueue.baseState=o)}var ko={isMounted:function(t){return(t=t._reactInternals)?qn(t)===t:!1},enqueueSetState:function(t,r,o){t=t._reactInternals;var l=gn(),c=Or(t),h=dr(l,c);h.payload=r,o!=null&&(h.callback=o),r=Ur(t,h,c),r!==null&&(jn(r,t,c,l),Po(r,t,c))},enqueueReplaceState:function(t,r,o){t=t._reactInternals;var l=gn(),c=Or(t),h=dr(l,c);h.tag=1,h.payload=r,o!=null&&(h.callback=o),r=Ur(t,h,c),r!==null&&(jn(r,t,c,l),Po(r,t,c))},enqueueForceUpdate:function(t,r){t=t._reactInternals;var o=gn(),l=Or(t),c=dr(o,l);c.tag=2,r!=null&&(c.callback=r),r=Ur(t,c,l),r!==null&&(jn(r,t,l,o),Po(r,t,l))}};function zf(t,r,o,l,c,h,M){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(l,h,M):r.prototype&&r.prototype.isPureReactComponent?!ua(o,l)||!ua(c,h):!0}function Bf(t,r,o){var l=!1,c=Pr,h=r.contextType;return typeof h=="object"&&h!==null?h=Fn(h):(c=yn(r)?Kr:an.current,l=r.contextTypes,h=(l=l!=null)?Ri(t,c):Pr),r=new r(o,h),t.memoizedState=r.state!==null&&r.state!==void 0?r.state:null,r.updater=ko,t.stateNode=r,r._reactInternals=t,l&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=c,t.__reactInternalMemoizedMaskedChildContext=h),r}function Hf(t,r,o,l){t=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(o,l),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(o,l),r.state!==t&&ko.enqueueReplaceState(r,r.state,null)}function tu(t,r,o,l){var c=t.stateNode;c.props=o,c.state=t.memoizedState,c.refs={},Hl(t);var h=r.contextType;typeof h=="object"&&h!==null?c.context=Fn(h):(h=yn(r)?Kr:an.current,c.context=Ri(t,h)),c.state=t.memoizedState,h=r.getDerivedStateFromProps,typeof h=="function"&&(eu(t,r,h,o),c.state=t.memoizedState),typeof r.getDerivedStateFromProps=="function"||typeof c.getSnapshotBeforeUpdate=="function"||typeof c.UNSAFE_componentWillMount!="function"&&typeof c.componentWillMount!="function"||(r=c.state,typeof c.componentWillMount=="function"&&c.componentWillMount(),typeof c.UNSAFE_componentWillMount=="function"&&c.UNSAFE_componentWillMount(),r!==c.state&&ko.enqueueReplaceState(c,c.state,null),Do(t,o,c,l),c.state=t.memoizedState),typeof c.componentDidMount=="function"&&(t.flags|=4194308)}function Fi(t,r){try{var o="",l=r;do o+=le(l),l=l.return;while(l);var c=o}catch(h){c=`
Error generating stack: `+h.message+`
`+h.stack}return{value:t,source:r,stack:c,digest:null}}function nu(t,r,o){return{value:t,source:null,stack:o??null,digest:r??null}}function ru(t,r){try{console.error(r.value)}catch(o){setTimeout(function(){throw o})}}var Ng=typeof WeakMap=="function"?WeakMap:Map;function Vf(t,r,o){o=dr(-1,o),o.tag=3,o.payload={element:null};var l=r.value;return o.callback=function(){Xo||(Xo=!0,vu=l),ru(t,r)},o}function Gf(t,r,o){o=dr(-1,o),o.tag=3;var l=t.type.getDerivedStateFromError;if(typeof l=="function"){var c=r.value;o.payload=function(){return l(c)},o.callback=function(){ru(t,r)}}var h=t.stateNode;return h!==null&&typeof h.componentDidCatch=="function"&&(o.callback=function(){ru(t,r),typeof l!="function"&&(Nr===null?Nr=new Set([this]):Nr.add(this));var M=r.stack;this.componentDidCatch(r.value,{componentStack:M!==null?M:""})}),o}function Wf(t,r,o){var l=t.pingCache;if(l===null){l=t.pingCache=new Ng;var c=new Set;l.set(r,c)}else c=l.get(r),c===void 0&&(c=new Set,l.set(r,c));c.has(o)||(c.add(o),t=$g.bind(null,t,r,o),r.then(t,t))}function Xf(t){do{var r;if((r=t.tag===13)&&(r=t.memoizedState,r=r!==null?r.dehydrated!==null:!0),r)return t;t=t.return}while(t!==null);return null}function jf(t,r,o,l,c){return t.mode&1?(t.flags|=65536,t.lanes=c,t):(t===r?t.flags|=65536:(t.flags|=128,o.flags|=131072,o.flags&=-52805,o.tag===1&&(o.alternate===null?o.tag=17:(r=dr(-1,1),r.tag=2,Ur(o,r,1))),o.lanes|=1),t)}var Fg=C.ReactCurrentOwner,Sn=!1;function mn(t,r,o,l){r.child=t===null?ff(r,null,o,l):Li(r,t.child,o,l)}function qf(t,r,o,l,c){o=o.render;var h=r.ref;return Ii(r,c),l=Yl(t,r,o,l,h,c),o=$l(),t!==null&&!Sn?(r.updateQueue=t.updateQueue,r.flags&=-2053,t.lanes&=~c,fr(t,r,c)):(Ct&&o&&Dl(r),r.flags|=1,mn(t,r,l,c),r.child)}function Yf(t,r,o,l,c){if(t===null){var h=o.type;return typeof h=="function"&&!Tu(h)&&h.defaultProps===void 0&&o.compare===null&&o.defaultProps===void 0?(r.tag=15,r.type=h,$f(t,r,h,l,c)):(t=Zo(o.type,null,l,r,r.mode,c),t.ref=r.ref,t.return=r,r.child=t)}if(h=t.child,!(t.lanes&c)){var M=h.memoizedProps;if(o=o.compare,o=o!==null?o:ua,o(M,l)&&t.ref===r.ref)return fr(t,r,c)}return r.flags|=1,t=zr(h,l),t.ref=r.ref,t.return=r,r.child=t}function $f(t,r,o,l,c){if(t!==null){var h=t.memoizedProps;if(ua(h,l)&&t.ref===r.ref)if(Sn=!1,r.pendingProps=l=h,(t.lanes&c)!==0)t.flags&131072&&(Sn=!0);else return r.lanes=t.lanes,fr(t,r,c)}return iu(t,r,o,l,c)}function Kf(t,r,o){var l=r.pendingProps,c=l.children,h=t!==null?t.memoizedState:null;if(l.mode==="hidden")if(!(r.mode&1))r.memoizedState={baseLanes:0,cachePool:null,transitions:null},wt(ki,Dn),Dn|=o;else{if(!(o&1073741824))return t=h!==null?h.baseLanes|o:o,r.lanes=r.childLanes=1073741824,r.memoizedState={baseLanes:t,cachePool:null,transitions:null},r.updateQueue=null,wt(ki,Dn),Dn|=t,null;r.memoizedState={baseLanes:0,cachePool:null,transitions:null},l=h!==null?h.baseLanes:o,wt(ki,Dn),Dn|=l}else h!==null?(l=h.baseLanes|o,r.memoizedState=null):l=o,wt(ki,Dn),Dn|=l;return mn(t,r,c,o),r.child}function Zf(t,r){var o=r.ref;(t===null&&o!==null||t!==null&&t.ref!==o)&&(r.flags|=512,r.flags|=2097152)}function iu(t,r,o,l,c){var h=yn(o)?Kr:an.current;return h=Ri(r,h),Ii(r,c),o=Yl(t,r,o,l,h,c),l=$l(),t!==null&&!Sn?(r.updateQueue=t.updateQueue,r.flags&=-2053,t.lanes&=~c,fr(t,r,c)):(Ct&&l&&Dl(r),r.flags|=1,mn(t,r,o,c),r.child)}function Jf(t,r,o,l,c){if(yn(o)){var h=!0;Mo(r)}else h=!1;if(Ii(r,c),r.stateNode===null)Bo(t,r),Bf(r,o,l),tu(r,o,l,c),l=!0;else if(t===null){var M=r.stateNode,D=r.memoizedProps;M.props=D;var N=M.context,Z=o.contextType;typeof Z=="object"&&Z!==null?Z=Fn(Z):(Z=yn(o)?Kr:an.current,Z=Ri(r,Z));var me=o.getDerivedStateFromProps,xe=typeof me=="function"||typeof M.getSnapshotBeforeUpdate=="function";xe||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(D!==l||N!==Z)&&Hf(r,M,l,Z),Lr=!1;var pe=r.memoizedState;M.state=pe,Do(r,l,M,c),N=r.memoizedState,D!==l||pe!==N||xn.current||Lr?(typeof me=="function"&&(eu(r,o,me,l),N=r.memoizedState),(D=Lr||zf(r,o,D,l,pe,N,Z))?(xe||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=l,r.memoizedState=N),M.props=l,M.state=N,M.context=Z,l=D):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),l=!1)}else{M=r.stateNode,pf(t,r),D=r.memoizedProps,Z=r.type===r.elementType?D:Gn(r.type,D),M.props=Z,xe=r.pendingProps,pe=M.context,N=o.contextType,typeof N=="object"&&N!==null?N=Fn(N):(N=yn(o)?Kr:an.current,N=Ri(r,N));var Ce=o.getDerivedStateFromProps;(me=typeof Ce=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(D!==xe||pe!==N)&&Hf(r,M,l,N),Lr=!1,pe=r.memoizedState,M.state=pe,Do(r,l,M,c);var Be=r.memoizedState;D!==xe||pe!==Be||xn.current||Lr?(typeof Ce=="function"&&(eu(r,o,Ce,l),Be=r.memoizedState),(Z=Lr||zf(r,o,Z,l,pe,Be,N)||!1)?(me||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(l,Be,N),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(l,Be,N)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||D===t.memoizedProps&&pe===t.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||D===t.memoizedProps&&pe===t.memoizedState||(r.flags|=1024),r.memoizedProps=l,r.memoizedState=Be),M.props=l,M.state=Be,M.context=N,l=Z):(typeof M.componentDidUpdate!="function"||D===t.memoizedProps&&pe===t.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||D===t.memoizedProps&&pe===t.memoizedState||(r.flags|=1024),l=!1)}return au(t,r,o,l,h,c)}function au(t,r,o,l,c,h){Zf(t,r);var M=(r.flags&128)!==0;if(!l&&!M)return c&&nf(r,o,!1),fr(t,r,h);l=r.stateNode,Fg.current=r;var D=M&&typeof o.getDerivedStateFromError!="function"?null:l.render();return r.flags|=1,t!==null&&M?(r.child=Li(r,t.child,null,h),r.child=Li(r,null,D,h)):mn(t,r,D,h),r.memoizedState=l.state,c&&nf(r,o,!0),r.child}function Qf(t){var r=t.stateNode;r.pendingContext?ef(t,r.pendingContext,r.pendingContext!==r.context):r.context&&ef(t,r.context,!1),Vl(t,r.containerInfo)}function eh(t,r,o,l,c){return Di(),Nl(c),r.flags|=256,mn(t,r,o,l),r.child}var ou={dehydrated:null,treeContext:null,retryLane:0};function su(t){return{baseLanes:t,cachePool:null,transitions:null}}function th(t,r,o){var l=r.pendingProps,c=Dt.current,h=!1,M=(r.flags&128)!==0,D;if((D=M)||(D=t!==null&&t.memoizedState===null?!1:(c&2)!==0),D?(h=!0,r.flags&=-129):(t===null||t.memoizedState!==null)&&(c|=1),wt(Dt,c&1),t===null)return Il(r),t=r.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?(r.mode&1?t.data==="$!"?r.lanes=8:r.lanes=1073741824:r.lanes=1,null):(M=l.children,t=l.fallback,h?(l=r.mode,h=r.child,M={mode:"hidden",children:M},!(l&1)&&h!==null?(h.childLanes=0,h.pendingProps=M):h=Jo(M,l,0,null),t=oi(t,l,o,null),h.return=r,t.return=r,h.sibling=t,r.child=h,r.child.memoizedState=su(o),r.memoizedState=ou,t):lu(r,M));if(c=t.memoizedState,c!==null&&(D=c.dehydrated,D!==null))return Og(t,r,M,l,D,c,o);if(h){h=l.fallback,M=r.mode,c=t.child,D=c.sibling;var N={mode:"hidden",children:l.children};return!(M&1)&&r.child!==c?(l=r.child,l.childLanes=0,l.pendingProps=N,r.deletions=null):(l=zr(c,N),l.subtreeFlags=c.subtreeFlags&14680064),D!==null?h=zr(D,h):(h=oi(h,M,o,null),h.flags|=2),h.return=r,l.return=r,l.sibling=h,r.child=l,l=h,h=r.child,M=t.child.memoizedState,M=M===null?su(o):{baseLanes:M.baseLanes|o,cachePool:null,transitions:M.transitions},h.memoizedState=M,h.childLanes=t.childLanes&~o,r.memoizedState=ou,l}return h=t.child,t=h.sibling,l=zr(h,{mode:"visible",children:l.children}),!(r.mode&1)&&(l.lanes=o),l.return=r,l.sibling=null,t!==null&&(o=r.deletions,o===null?(r.deletions=[t],r.flags|=16):o.push(t)),r.child=l,r.memoizedState=null,l}function lu(t,r){return r=Jo({mode:"visible",children:r},t.mode,0,null),r.return=t,t.child=r}function zo(t,r,o,l){return l!==null&&Nl(l),Li(r,t.child,null,o),t=lu(r,r.pendingProps.children),t.flags|=2,r.memoizedState=null,t}function Og(t,r,o,l,c,h,M){if(o)return r.flags&256?(r.flags&=-257,l=nu(Error(n(422))),zo(t,r,M,l)):r.memoizedState!==null?(r.child=t.child,r.flags|=128,null):(h=l.fallback,c=r.mode,l=Jo({mode:"visible",children:l.children},c,0,null),h=oi(h,c,M,null),h.flags|=2,l.return=r,h.return=r,l.sibling=h,r.child=l,r.mode&1&&Li(r,t.child,null,M),r.child.memoizedState=su(M),r.memoizedState=ou,h);if(!(r.mode&1))return zo(t,r,M,null);if(c.data==="$!"){if(l=c.nextSibling&&c.nextSibling.dataset,l)var D=l.dgst;return l=D,h=Error(n(419)),l=nu(h,l,void 0),zo(t,r,M,l)}if(D=(M&t.childLanes)!==0,Sn||D){if(l=Kt,l!==null){switch(M&-M){case 4:c=2;break;case 16:c=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:c=32;break;case 536870912:c=268435456;break;default:c=0}c=c&(l.suspendedLanes|M)?0:c,c!==0&&c!==h.retryLane&&(h.retryLane=c,cr(t,c),jn(l,t,c,-1))}return Eu(),l=nu(Error(n(421))),zo(t,r,M,l)}return c.data==="$?"?(r.flags|=128,r.child=t.child,r=Kg.bind(null,t),c._reactRetry=r,null):(t=h.treeContext,Pn=Rr(c.nextSibling),Cn=r,Ct=!0,Vn=null,t!==null&&(In[Nn++]=lr,In[Nn++]=ur,In[Nn++]=Zr,lr=t.id,ur=t.overflow,Zr=r),r=lu(r,l.children),r.flags|=4096,r)}function nh(t,r,o){t.lanes|=r;var l=t.alternate;l!==null&&(l.lanes|=r),zl(t.return,r,o)}function uu(t,r,o,l,c){var h=t.memoizedState;h===null?t.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:l,tail:o,tailMode:c}:(h.isBackwards=r,h.rendering=null,h.renderingStartTime=0,h.last=l,h.tail=o,h.tailMode=c)}function rh(t,r,o){var l=r.pendingProps,c=l.revealOrder,h=l.tail;if(mn(t,r,l.children,o),l=Dt.current,l&2)l=l&1|2,r.flags|=128;else{if(t!==null&&t.flags&128)e:for(t=r.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&nh(t,o,r);else if(t.tag===19)nh(t,o,r);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===r)break e;for(;t.sibling===null;){if(t.return===null||t.return===r)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}l&=1}if(wt(Dt,l),!(r.mode&1))r.memoizedState=null;else switch(c){case"forwards":for(o=r.child,c=null;o!==null;)t=o.alternate,t!==null&&Lo(t)===null&&(c=o),o=o.sibling;o=c,o===null?(c=r.child,r.child=null):(c=o.sibling,o.sibling=null),uu(r,!1,c,o,h);break;case"backwards":for(o=null,c=r.child,r.child=null;c!==null;){if(t=c.alternate,t!==null&&Lo(t)===null){r.child=c;break}t=c.sibling,c.sibling=o,o=c,c=t}uu(r,!0,o,null,h);break;case"together":uu(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function Bo(t,r){!(r.mode&1)&&t!==null&&(t.alternate=null,r.alternate=null,r.flags|=2)}function fr(t,r,o){if(t!==null&&(r.dependencies=t.dependencies),ni|=r.lanes,!(o&r.childLanes))return null;if(t!==null&&r.child!==t.child)throw Error(n(153));if(r.child!==null){for(t=r.child,o=zr(t,t.pendingProps),r.child=o,o.return=r;t.sibling!==null;)t=t.sibling,o=o.sibling=zr(t,t.pendingProps),o.return=r;o.sibling=null}return r.child}function kg(t,r,o){switch(r.tag){case 3:Qf(r),Di();break;case 5:vf(r);break;case 1:yn(r.type)&&Mo(r);break;case 4:Vl(r,r.stateNode.containerInfo);break;case 10:var l=r.type._context,c=r.memoizedProps.value;wt(Ro,l._currentValue),l._currentValue=c;break;case 13:if(l=r.memoizedState,l!==null)return l.dehydrated!==null?(wt(Dt,Dt.current&1),r.flags|=128,null):o&r.child.childLanes?th(t,r,o):(wt(Dt,Dt.current&1),t=fr(t,r,o),t!==null?t.sibling:null);wt(Dt,Dt.current&1);break;case 19:if(l=(o&r.childLanes)!==0,t.flags&128){if(l)return rh(t,r,o);r.flags|=128}if(c=r.memoizedState,c!==null&&(c.rendering=null,c.tail=null,c.lastEffect=null),wt(Dt,Dt.current),l)break;return null;case 22:case 23:return r.lanes=0,Kf(t,r,o)}return fr(t,r,o)}var ih,cu,ah,oh;ih=function(t,r){for(var o=r.child;o!==null;){if(o.tag===5||o.tag===6)t.appendChild(o.stateNode);else if(o.tag!==4&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===r)break;for(;o.sibling===null;){if(o.return===null||o.return===r)return;o=o.return}o.sibling.return=o.return,o=o.sibling}},cu=function(){},ah=function(t,r,o,l){var c=t.memoizedProps;if(c!==l){t=r.stateNode,ei($n.current);var h=null;switch(o){case"input":c=O(t,c),l=O(t,l),h=[];break;case"select":c=re({},c,{value:void 0}),l=re({},l,{value:void 0}),h=[];break;case"textarea":c=E(t,c),l=E(t,l),h=[];break;default:typeof c.onClick!="function"&&typeof l.onClick=="function"&&(t.onclick=xo)}st(o,l);var M;o=null;for(Z in c)if(!l.hasOwnProperty(Z)&&c.hasOwnProperty(Z)&&c[Z]!=null)if(Z==="style"){var D=c[Z];for(M in D)D.hasOwnProperty(M)&&(o||(o={}),o[M]="")}else Z!=="dangerouslySetInnerHTML"&&Z!=="children"&&Z!=="suppressContentEditableWarning"&&Z!=="suppressHydrationWarning"&&Z!=="autoFocus"&&(s.hasOwnProperty(Z)?h||(h=[]):(h=h||[]).push(Z,null));for(Z in l){var N=l[Z];if(D=c!=null?c[Z]:void 0,l.hasOwnProperty(Z)&&N!==D&&(N!=null||D!=null))if(Z==="style")if(D){for(M in D)!D.hasOwnProperty(M)||N&&N.hasOwnProperty(M)||(o||(o={}),o[M]="");for(M in N)N.hasOwnProperty(M)&&D[M]!==N[M]&&(o||(o={}),o[M]=N[M])}else o||(h||(h=[]),h.push(Z,o)),o=N;else Z==="dangerouslySetInnerHTML"?(N=N?N.__html:void 0,D=D?D.__html:void 0,N!=null&&D!==N&&(h=h||[]).push(Z,N)):Z==="children"?typeof N!="string"&&typeof N!="number"||(h=h||[]).push(Z,""+N):Z!=="suppressContentEditableWarning"&&Z!=="suppressHydrationWarning"&&(s.hasOwnProperty(Z)?(N!=null&&Z==="onScroll"&&At("scroll",t),h||D===N||(h=[])):(h=h||[]).push(Z,N))}o&&(h=h||[]).push("style",o);var Z=h;(r.updateQueue=Z)&&(r.flags|=4)}},oh=function(t,r,o,l){o!==l&&(r.flags|=4)};function Ta(t,r){if(!Ct)switch(t.tailMode){case"hidden":r=t.tail;for(var o=null;r!==null;)r.alternate!==null&&(o=r),r=r.sibling;o===null?t.tail=null:o.sibling=null;break;case"collapsed":o=t.tail;for(var l=null;o!==null;)o.alternate!==null&&(l=o),o=o.sibling;l===null?r||t.tail===null?t.tail=null:t.tail.sibling=null:l.sibling=null}}function sn(t){var r=t.alternate!==null&&t.alternate.child===t.child,o=0,l=0;if(r)for(var c=t.child;c!==null;)o|=c.lanes|c.childLanes,l|=c.subtreeFlags&14680064,l|=c.flags&14680064,c.return=t,c=c.sibling;else for(c=t.child;c!==null;)o|=c.lanes|c.childLanes,l|=c.subtreeFlags,l|=c.flags,c.return=t,c=c.sibling;return t.subtreeFlags|=l,t.childLanes=o,r}function zg(t,r,o){var l=r.pendingProps;switch(Ll(r),r.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return sn(r),null;case 1:return yn(r.type)&&So(),sn(r),null;case 3:return l=r.stateNode,Ni(),Rt(xn),Rt(an),Xl(),l.pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),(t===null||t.child===null)&&(bo(r)?r.flags|=4:t===null||t.memoizedState.isDehydrated&&!(r.flags&256)||(r.flags|=1024,Vn!==null&&(yu(Vn),Vn=null))),cu(t,r),sn(r),null;case 5:Gl(r);var c=ei(xa.current);if(o=r.type,t!==null&&r.stateNode!=null)ah(t,r,o,l,c),t.ref!==r.ref&&(r.flags|=512,r.flags|=2097152);else{if(!l){if(r.stateNode===null)throw Error(n(166));return sn(r),null}if(t=ei($n.current),bo(r)){l=r.stateNode,o=r.type;var h=r.memoizedProps;switch(l[Yn]=r,l[pa]=h,t=(r.mode&1)!==0,o){case"dialog":At("cancel",l),At("close",l);break;case"iframe":case"object":case"embed":At("load",l);break;case"video":case"audio":for(c=0;c<da.length;c++)At(da[c],l);break;case"source":At("error",l);break;case"img":case"image":case"link":At("error",l),At("load",l);break;case"details":At("toggle",l);break;case"input":dn(l,h),At("invalid",l);break;case"select":l._wrapperState={wasMultiple:!!h.multiple},At("invalid",l);break;case"textarea":$(l,h),At("invalid",l)}st(o,h),c=null;for(var M in h)if(h.hasOwnProperty(M)){var D=h[M];M==="children"?typeof D=="string"?l.textContent!==D&&(h.suppressHydrationWarning!==!0&&_o(l.textContent,D,t),c=["children",D]):typeof D=="number"&&l.textContent!==""+D&&(h.suppressHydrationWarning!==!0&&_o(l.textContent,D,t),c=["children",""+D]):s.hasOwnProperty(M)&&D!=null&&M==="onScroll"&&At("scroll",l)}switch(o){case"input":St(l),Xe(l,h,!0);break;case"textarea":St(l),ge(l);break;case"select":case"option":break;default:typeof h.onClick=="function"&&(l.onclick=xo)}l=c,r.updateQueue=l,l!==null&&(r.flags|=4)}else{M=c.nodeType===9?c:c.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=ce(o)),t==="http://www.w3.org/1999/xhtml"?o==="script"?(t=M.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof l.is=="string"?t=M.createElement(o,{is:l.is}):(t=M.createElement(o),o==="select"&&(M=t,l.multiple?M.multiple=!0:l.size&&(M.size=l.size))):t=M.createElementNS(t,o),t[Yn]=r,t[pa]=l,ih(t,r,!1,!1),r.stateNode=t;e:{switch(M=nt(o,l),o){case"dialog":At("cancel",t),At("close",t),c=l;break;case"iframe":case"object":case"embed":At("load",t),c=l;break;case"video":case"audio":for(c=0;c<da.length;c++)At(da[c],t);c=l;break;case"source":At("error",t),c=l;break;case"img":case"image":case"link":At("error",t),At("load",t),c=l;break;case"details":At("toggle",t),c=l;break;case"input":dn(t,l),c=O(t,l),At("invalid",t);break;case"option":c=l;break;case"select":t._wrapperState={wasMultiple:!!l.multiple},c=re({},l,{value:void 0}),At("invalid",t);break;case"textarea":$(t,l),c=E(t,l),At("invalid",t);break;default:c=l}st(o,c),D=c;for(h in D)if(D.hasOwnProperty(h)){var N=D[h];h==="style"?Je(t,N):h==="dangerouslySetInnerHTML"?(N=N?N.__html:void 0,N!=null&&Ne(t,N)):h==="children"?typeof N=="string"?(o!=="textarea"||N!=="")&&at(t,N):typeof N=="number"&&at(t,""+N):h!=="suppressContentEditableWarning"&&h!=="suppressHydrationWarning"&&h!=="autoFocus"&&(s.hasOwnProperty(h)?N!=null&&h==="onScroll"&&At("scroll",t):N!=null&&L(t,h,N,M))}switch(o){case"input":St(t),Xe(t,l,!1);break;case"textarea":St(t),ge(t);break;case"option":l.value!=null&&t.setAttribute("value",""+Ee(l.value));break;case"select":t.multiple=!!l.multiple,h=l.value,h!=null?P(t,!!l.multiple,h,!1):l.defaultValue!=null&&P(t,!!l.multiple,l.defaultValue,!0);break;default:typeof c.onClick=="function"&&(t.onclick=xo)}switch(o){case"button":case"input":case"select":case"textarea":l=!!l.autoFocus;break e;case"img":l=!0;break e;default:l=!1}}l&&(r.flags|=4)}r.ref!==null&&(r.flags|=512,r.flags|=2097152)}return sn(r),null;case 6:if(t&&r.stateNode!=null)oh(t,r,t.memoizedProps,l);else{if(typeof l!="string"&&r.stateNode===null)throw Error(n(166));if(o=ei(xa.current),ei($n.current),bo(r)){if(l=r.stateNode,o=r.memoizedProps,l[Yn]=r,(h=l.nodeValue!==o)&&(t=Cn,t!==null))switch(t.tag){case 3:_o(l.nodeValue,o,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&_o(l.nodeValue,o,(t.mode&1)!==0)}h&&(r.flags|=4)}else l=(o.nodeType===9?o:o.ownerDocument).createTextNode(l),l[Yn]=r,r.stateNode=l}return sn(r),null;case 13:if(Rt(Dt),l=r.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(Ct&&Pn!==null&&r.mode&1&&!(r.flags&128))uf(),Di(),r.flags|=98560,h=!1;else if(h=bo(r),l!==null&&l.dehydrated!==null){if(t===null){if(!h)throw Error(n(318));if(h=r.memoizedState,h=h!==null?h.dehydrated:null,!h)throw Error(n(317));h[Yn]=r}else Di(),!(r.flags&128)&&(r.memoizedState=null),r.flags|=4;sn(r),h=!1}else Vn!==null&&(yu(Vn),Vn=null),h=!0;if(!h)return r.flags&65536?r:null}return r.flags&128?(r.lanes=o,r):(l=l!==null,l!==(t!==null&&t.memoizedState!==null)&&l&&(r.child.flags|=8192,r.mode&1&&(t===null||Dt.current&1?jt===0&&(jt=3):Eu())),r.updateQueue!==null&&(r.flags|=4),sn(r),null);case 4:return Ni(),cu(t,r),t===null&&fa(r.stateNode.containerInfo),sn(r),null;case 10:return kl(r.type._context),sn(r),null;case 17:return yn(r.type)&&So(),sn(r),null;case 19:if(Rt(Dt),h=r.memoizedState,h===null)return sn(r),null;if(l=(r.flags&128)!==0,M=h.rendering,M===null)if(l)Ta(h,!1);else{if(jt!==0||t!==null&&t.flags&128)for(t=r.child;t!==null;){if(M=Lo(t),M!==null){for(r.flags|=128,Ta(h,!1),l=M.updateQueue,l!==null&&(r.updateQueue=l,r.flags|=4),r.subtreeFlags=0,l=o,o=r.child;o!==null;)h=o,t=l,h.flags&=14680066,M=h.alternate,M===null?(h.childLanes=0,h.lanes=t,h.child=null,h.subtreeFlags=0,h.memoizedProps=null,h.memoizedState=null,h.updateQueue=null,h.dependencies=null,h.stateNode=null):(h.childLanes=M.childLanes,h.lanes=M.lanes,h.child=M.child,h.subtreeFlags=0,h.deletions=null,h.memoizedProps=M.memoizedProps,h.memoizedState=M.memoizedState,h.updateQueue=M.updateQueue,h.type=M.type,t=M.dependencies,h.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),o=o.sibling;return wt(Dt,Dt.current&1|2),r.child}t=t.sibling}h.tail!==null&&z()>zi&&(r.flags|=128,l=!0,Ta(h,!1),r.lanes=4194304)}else{if(!l)if(t=Lo(M),t!==null){if(r.flags|=128,l=!0,o=t.updateQueue,o!==null&&(r.updateQueue=o,r.flags|=4),Ta(h,!0),h.tail===null&&h.tailMode==="hidden"&&!M.alternate&&!Ct)return sn(r),null}else 2*z()-h.renderingStartTime>zi&&o!==1073741824&&(r.flags|=128,l=!0,Ta(h,!1),r.lanes=4194304);h.isBackwards?(M.sibling=r.child,r.child=M):(o=h.last,o!==null?o.sibling=M:r.child=M,h.last=M)}return h.tail!==null?(r=h.tail,h.rendering=r,h.tail=r.sibling,h.renderingStartTime=z(),r.sibling=null,o=Dt.current,wt(Dt,l?o&1|2:o&1),r):(sn(r),null);case 22:case 23:return Mu(),l=r.memoizedState!==null,t!==null&&t.memoizedState!==null!==l&&(r.flags|=8192),l&&r.mode&1?Dn&1073741824&&(sn(r),r.subtreeFlags&6&&(r.flags|=8192)):sn(r),null;case 24:return null;case 25:return null}throw Error(n(156,r.tag))}function Bg(t,r){switch(Ll(r),r.tag){case 1:return yn(r.type)&&So(),t=r.flags,t&65536?(r.flags=t&-65537|128,r):null;case 3:return Ni(),Rt(xn),Rt(an),Xl(),t=r.flags,t&65536&&!(t&128)?(r.flags=t&-65537|128,r):null;case 5:return Gl(r),null;case 13:if(Rt(Dt),t=r.memoizedState,t!==null&&t.dehydrated!==null){if(r.alternate===null)throw Error(n(340));Di()}return t=r.flags,t&65536?(r.flags=t&-65537|128,r):null;case 19:return Rt(Dt),null;case 4:return Ni(),null;case 10:return kl(r.type._context),null;case 22:case 23:return Mu(),null;case 24:return null;default:return null}}var Ho=!1,ln=!1,Hg=typeof WeakSet=="function"?WeakSet:Set,Fe=null;function Oi(t,r){var o=t.ref;if(o!==null)if(typeof o=="function")try{o(null)}catch(l){It(t,r,l)}else o.current=null}function sc(t,r,o){try{o()}catch(l){It(t,r,l)}}var sh=!1;function Vg(t,r){if(El=oo,t=kd(),ml(t)){if("selectionStart"in t)var o={start:t.selectionStart,end:t.selectionEnd};else e:{o=(o=t.ownerDocument)&&o.defaultView||window;var l=o.getSelection&&o.getSelection();if(l&&l.rangeCount!==0){o=l.anchorNode;var c=l.anchorOffset,h=l.focusNode;l=l.focusOffset;try{o.nodeType,h.nodeType}catch{o=null;break e}var M=0,D=-1,N=-1,Z=0,me=0,xe=t,pe=null;t:for(;;){for(var Ce;xe!==o||c!==0&&xe.nodeType!==3||(D=M+c),xe!==h||l!==0&&xe.nodeType!==3||(N=M+l),xe.nodeType===3&&(M+=xe.nodeValue.length),(Ce=xe.firstChild)!==null;)pe=xe,xe=Ce;for(;;){if(xe===t)break t;if(pe===o&&++Z===c&&(D=M),pe===h&&++me===l&&(N=M),(Ce=xe.nextSibling)!==null)break;xe=pe,pe=xe.parentNode}xe=Ce}o=D===-1||N===-1?null:{start:D,end:N}}else o=null}o=o||{start:0,end:0}}else o=null;for(Tl={focusedElem:t,selectionRange:o},oo=!1,Fe=r;Fe!==null;)if(r=Fe,t=r.child,(r.subtreeFlags&1028)!==0&&t!==null)t.return=r,Fe=t;else for(;Fe!==null;){r=Fe;try{var Be=r.alternate;if(r.flags&1024)switch(r.tag){case 0:case 11:case 15:break;case 1:if(Be!==null){var He=Be.memoizedProps,kt=Be.memoizedState,q=r.stateNode,H=q.getSnapshotBeforeUpdate(r.elementType===r.type?He:Gn(r.type,He),kt);q.__reactInternalSnapshotBeforeUpdate=H}break;case 3:var Y=r.stateNode.containerInfo;Y.nodeType===1?Y.textContent="":Y.nodeType===9&&Y.documentElement&&Y.removeChild(Y.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(n(163))}}catch(Me){It(r,r.return,Me)}if(t=r.sibling,t!==null){t.return=r.return,Fe=t;break}Fe=r.return}return Be=sh,sh=!1,Be}function wa(t,r,o){var l=r.updateQueue;if(l=l!==null?l.lastEffect:null,l!==null){var c=l=l.next;do{if((c.tag&t)===t){var h=c.destroy;c.destroy=void 0,h!==void 0&&sc(r,o,h)}c=c.next}while(c!==l)}}function Vo(t,r){if(r=r.updateQueue,r=r!==null?r.lastEffect:null,r!==null){var o=r=r.next;do{if((o.tag&t)===t){var l=o.create;o.destroy=l()}o=o.next}while(o!==r)}}function du(t){var r=t.ref;if(r!==null){var o=t.stateNode;switch(t.tag){case 5:t=o;break;default:t=o}typeof r=="function"?r(t):r.current=t}}function lh(t){var r=t.alternate;r!==null&&(t.alternate=null,lh(r)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(r=t.stateNode,r!==null&&(delete r[Yn],delete r[pa],delete r[Rl],delete r[Tg],delete r[wg])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function uh(t){return t.tag===5||t.tag===3||t.tag===4}function ch(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||uh(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function fu(t,r,o){var l=t.tag;if(l===5||l===6)t=t.stateNode,r?o.nodeType===8?o.parentNode.insertBefore(t,r):o.insertBefore(t,r):(o.nodeType===8?(r=o.parentNode,r.insertBefore(t,o)):(r=o,r.appendChild(t)),o=o._reactRootContainer,o!=null||r.onclick!==null||(r.onclick=xo));else if(l!==4&&(t=t.child,t!==null))for(fu(t,r,o),t=t.sibling;t!==null;)fu(t,r,o),t=t.sibling}function hu(t,r,o){var l=t.tag;if(l===5||l===6)t=t.stateNode,r?o.insertBefore(t,r):o.appendChild(t);else if(l!==4&&(t=t.child,t!==null))for(hu(t,r,o),t=t.sibling;t!==null;)hu(t,r,o),t=t.sibling}var Qt=null,Wn=!1;function Ir(t,r,o){for(o=o.child;o!==null;)dh(t,r,o),o=o.sibling}function dh(t,r,o){if(rt&&typeof rt.onCommitFiberUnmount=="function")try{rt.onCommitFiberUnmount(je,o)}catch{}switch(o.tag){case 5:ln||Oi(o,r);case 6:var l=Qt,c=Wn;Qt=null,Ir(t,r,o),Qt=l,Wn=c,Qt!==null&&(Wn?(t=Qt,o=o.stateNode,t.nodeType===8?t.parentNode.removeChild(o):t.removeChild(o)):Qt.removeChild(o.stateNode));break;case 18:Qt!==null&&(Wn?(t=Qt,o=o.stateNode,t.nodeType===8?Al(t.parentNode,o):t.nodeType===1&&Al(t,o),ra(t)):Al(Qt,o.stateNode));break;case 4:l=Qt,c=Wn,Qt=o.stateNode.containerInfo,Wn=!0,Ir(t,r,o),Qt=l,Wn=c;break;case 0:case 11:case 14:case 15:if(!ln&&(l=o.updateQueue,l!==null&&(l=l.lastEffect,l!==null))){c=l=l.next;do{var h=c,M=h.destroy;h=h.tag,M!==void 0&&(h&2||h&4)&&sc(o,r,M),c=c.next}while(c!==l)}Ir(t,r,o);break;case 1:if(!ln&&(Oi(o,r),l=o.stateNode,typeof l.componentWillUnmount=="function"))try{l.props=o.memoizedProps,l.state=o.memoizedState,l.componentWillUnmount()}catch(D){It(o,r,D)}Ir(t,r,o);break;case 21:Ir(t,r,o);break;case 22:o.mode&1?(ln=(l=ln)||o.memoizedState!==null,Ir(t,r,o),ln=l):Ir(t,r,o);break;default:Ir(t,r,o)}}function fh(t){var r=t.updateQueue;if(r!==null){t.updateQueue=null;var o=t.stateNode;o===null&&(o=t.stateNode=new Hg),r.forEach(function(l){var c=Zg.bind(null,t,l);o.has(l)||(o.add(l),l.then(c,c))})}}function Xn(t,r){var o=r.deletions;if(o!==null)for(var l=0;l<o.length;l++){var c=o[l];try{var h=t,M=r,D=M;e:for(;D!==null;){switch(D.tag){case 5:Qt=D.stateNode,Wn=!1;break e;case 3:Qt=D.stateNode.containerInfo,Wn=!0;break e;case 4:Qt=D.stateNode.containerInfo,Wn=!0;break e}D=D.return}if(Qt===null)throw Error(n(160));dh(h,M,c),Qt=null,Wn=!1;var N=c.alternate;N!==null&&(N.return=null),c.return=null}catch(Z){It(c,r,Z)}}if(r.subtreeFlags&12854)for(r=r.child;r!==null;)hh(r,t),r=r.sibling}function hh(t,r){var o=t.alternate,l=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(Xn(r,t),Zn(t),l&4){try{wa(3,t,t.return),Vo(3,t)}catch(He){It(t,t.return,He)}try{wa(5,t,t.return)}catch(He){It(t,t.return,He)}}break;case 1:Xn(r,t),Zn(t),l&512&&o!==null&&Oi(o,o.return);break;case 5:if(Xn(r,t),Zn(t),l&512&&o!==null&&Oi(o,o.return),t.flags&32){var c=t.stateNode;try{at(c,"")}catch(He){It(t,t.return,He)}}if(l&4&&(c=t.stateNode,c!=null)){var h=t.memoizedProps,M=o!==null?o.memoizedProps:h,D=t.type,N=t.updateQueue;if(t.updateQueue=null,N!==null)try{D==="input"&&h.type==="radio"&&h.name!=null&&lt(c,h),nt(D,M);var Z=nt(D,h);for(M=0;M<N.length;M+=2){var me=N[M],xe=N[M+1];me==="style"?Je(c,xe):me==="dangerouslySetInnerHTML"?Ne(c,xe):me==="children"?at(c,xe):L(c,me,xe,Z)}switch(D){case"input":ot(c,h);break;case"textarea":fe(c,h);break;case"select":var pe=c._wrapperState.wasMultiple;c._wrapperState.wasMultiple=!!h.multiple;var Ce=h.value;Ce!=null?P(c,!!h.multiple,Ce,!1):pe!==!!h.multiple&&(h.defaultValue!=null?P(c,!!h.multiple,h.defaultValue,!0):P(c,!!h.multiple,h.multiple?[]:"",!1))}c[pa]=h}catch(He){It(t,t.return,He)}}break;case 6:if(Xn(r,t),Zn(t),l&4){if(t.stateNode===null)throw Error(n(162));c=t.stateNode,h=t.memoizedProps;try{c.nodeValue=h}catch(He){It(t,t.return,He)}}break;case 3:if(Xn(r,t),Zn(t),l&4&&o!==null&&o.memoizedState.isDehydrated)try{ra(r.containerInfo)}catch(He){It(t,t.return,He)}break;case 4:Xn(r,t),Zn(t);break;case 13:Xn(r,t),Zn(t),c=t.child,c.flags&8192&&(h=c.memoizedState!==null,c.stateNode.isHidden=h,!h||c.alternate!==null&&c.alternate.memoizedState!==null||(gu=z())),l&4&&fh(t);break;case 22:if(me=o!==null&&o.memoizedState!==null,t.mode&1?(ln=(Z=ln)||me,Xn(r,t),ln=Z):Xn(r,t),Zn(t),l&8192){if(Z=t.memoizedState!==null,(t.stateNode.isHidden=Z)&&!me&&t.mode&1)for(Fe=t,me=t.child;me!==null;){for(xe=Fe=me;Fe!==null;){switch(pe=Fe,Ce=pe.child,pe.tag){case 0:case 11:case 14:case 15:wa(4,pe,pe.return);break;case 1:Oi(pe,pe.return);var Be=pe.stateNode;if(typeof Be.componentWillUnmount=="function"){l=pe,o=pe.return;try{r=l,Be.props=r.memoizedProps,Be.state=r.memoizedState,Be.componentWillUnmount()}catch(He){It(l,o,He)}}break;case 5:Oi(pe,pe.return);break;case 22:if(pe.memoizedState!==null){gh(xe);continue}}Ce!==null?(Ce.return=pe,Fe=Ce):gh(xe)}me=me.sibling}e:for(me=null,xe=t;;){if(xe.tag===5){if(me===null){me=xe;try{c=xe.stateNode,Z?(h=c.style,typeof h.setProperty=="function"?h.setProperty("display","none","important"):h.display="none"):(D=xe.stateNode,N=xe.memoizedProps.style,M=N!=null&&N.hasOwnProperty("display")?N.display:null,D.style.display=Ye("display",M))}catch(He){It(t,t.return,He)}}}else if(xe.tag===6){if(me===null)try{xe.stateNode.nodeValue=Z?"":xe.memoizedProps}catch(He){It(t,t.return,He)}}else if((xe.tag!==22&&xe.tag!==23||xe.memoizedState===null||xe===t)&&xe.child!==null){xe.child.return=xe,xe=xe.child;continue}if(xe===t)break e;for(;xe.sibling===null;){if(xe.return===null||xe.return===t)break e;me===xe&&(me=null),xe=xe.return}me===xe&&(me=null),xe.sibling.return=xe.return,xe=xe.sibling}}break;case 19:Xn(r,t),Zn(t),l&4&&fh(t);break;case 21:break;default:Xn(r,t),Zn(t)}}function Zn(t){var r=t.flags;if(r&2){try{e:{for(var o=t.return;o!==null;){if(uh(o)){var l=o;break e}o=o.return}throw Error(n(160))}switch(l.tag){case 5:var c=l.stateNode;l.flags&32&&(at(c,""),l.flags&=-33);var h=ch(t);hu(t,h,c);break;case 3:case 4:var M=l.stateNode.containerInfo,D=ch(t);fu(t,D,M);break;default:throw Error(n(161))}}catch(N){It(t,t.return,N)}t.flags&=-3}r&4096&&(t.flags&=-4097)}function Gg(t,r,o){Fe=t,ph(t)}function ph(t,r,o){for(var l=(t.mode&1)!==0;Fe!==null;){var c=Fe,h=c.child;if(c.tag===22&&l){var M=c.memoizedState!==null||Ho;if(!M){var D=c.alternate,N=D!==null&&D.memoizedState!==null||ln;D=Ho;var Z=ln;if(Ho=M,(ln=N)&&!Z)for(Fe=c;Fe!==null;)M=Fe,N=M.child,M.tag===22&&M.memoizedState!==null?vh(c):N!==null?(N.return=M,Fe=N):vh(c);for(;h!==null;)Fe=h,ph(h),h=h.sibling;Fe=c,Ho=D,ln=Z}mh(t)}else c.subtreeFlags&8772&&h!==null?(h.return=c,Fe=h):mh(t)}}function mh(t){for(;Fe!==null;){var r=Fe;if(r.flags&8772){var o=r.alternate;try{if(r.flags&8772)switch(r.tag){case 0:case 11:case 15:ln||Vo(5,r);break;case 1:var l=r.stateNode;if(r.flags&4&&!ln)if(o===null)l.componentDidMount();else{var c=r.elementType===r.type?o.memoizedProps:Gn(r.type,o.memoizedProps);l.componentDidUpdate(c,o.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}var h=r.updateQueue;h!==null&&gf(r,h,l);break;case 3:var M=r.updateQueue;if(M!==null){if(o=null,r.child!==null)switch(r.child.tag){case 5:o=r.child.stateNode;break;case 1:o=r.child.stateNode}gf(r,M,o)}break;case 5:var D=r.stateNode;if(o===null&&r.flags&4){o=D;var N=r.memoizedProps;switch(r.type){case"button":case"input":case"select":case"textarea":N.autoFocus&&o.focus();break;case"img":N.src&&(o.src=N.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(r.memoizedState===null){var Z=r.alternate;if(Z!==null){var me=Z.memoizedState;if(me!==null){var xe=me.dehydrated;xe!==null&&ra(xe)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(n(163))}ln||r.flags&512&&du(r)}catch(pe){It(r,r.return,pe)}}if(r===t){Fe=null;break}if(o=r.sibling,o!==null){o.return=r.return,Fe=o;break}Fe=r.return}}function gh(t){for(;Fe!==null;){var r=Fe;if(r===t){Fe=null;break}var o=r.sibling;if(o!==null){o.return=r.return,Fe=o;break}Fe=r.return}}function vh(t){for(;Fe!==null;){var r=Fe;try{switch(r.tag){case 0:case 11:case 15:var o=r.return;try{Vo(4,r)}catch(N){It(r,o,N)}break;case 1:var l=r.stateNode;if(typeof l.componentDidMount=="function"){var c=r.return;try{l.componentDidMount()}catch(N){It(r,c,N)}}var h=r.return;try{du(r)}catch(N){It(r,h,N)}break;case 5:var M=r.return;try{du(r)}catch(N){It(r,M,N)}}}catch(N){It(r,r.return,N)}if(r===t){Fe=null;break}var D=r.sibling;if(D!==null){D.return=r.return,Fe=D;break}Fe=r.return}}var Wg=Math.ceil,Go=C.ReactCurrentDispatcher,pu=C.ReactCurrentOwner,kn=C.ReactCurrentBatchConfig,pt=0,Kt=null,zt=null,en=0,Dn=0,ki=Cr(0),jt=0,ba=null,ni=0,Wo=0,mu=0,Aa=null,Mn=null,gu=0,zi=1/0,hr=null,Xo=!1,vu=null,Nr=null,jo=!1,Fr=null,qo=0,Ra=0,_u=null,Yo=-1,$o=0;function gn(){return pt&6?z():Yo!==-1?Yo:Yo=z()}function Or(t){return t.mode&1?pt&2&&en!==0?en&-en:Ag.transition!==null?($o===0&&($o=pn()),$o):(t=ut,t!==0||(t=window.event,t=t===void 0?16:_d(t.type)),t):1}function jn(t,r,o,l){if(50<Ra)throw Ra=0,_u=null,Error(n(185));Ut(t,o,l),(!(pt&2)||t!==Kt)&&(t===Kt&&(!(pt&2)&&(Wo|=o),jt===4&&kr(t,en)),En(t,l),o===1&&pt===0&&!(r.mode&1)&&(zi=z()+500,Eo&&Dr()))}function En(t,r){var o=t.callbackNode;qr(t,r);var l=Bn(t,t===Kt?en:0);if(l===0)o!==null&&W(o),t.callbackNode=null,t.callbackPriority=0;else if(r=l&-l,t.callbackPriority!==r){if(o!=null&&W(o),r===1)t.tag===0?bg(xh.bind(null,t)):rf(xh.bind(null,t)),Mg(function(){!(pt&6)&&Dr()}),o=null;else{switch(cd(l)){case 1:o=Ae;break;case 4:o=Le;break;case 16:o=ze;break;case 536870912:o=Qe;break;default:o=ze}o=Ah(o,_h.bind(null,t))}t.callbackPriority=r,t.callbackNode=o}}function _h(t,r){if(Yo=-1,$o=0,pt&6)throw Error(n(327));var o=t.callbackNode;if(Bi()&&t.callbackNode!==o)return null;var l=Bn(t,t===Kt?en:0);if(l===0)return null;if(l&30||l&t.expiredLanes||r)r=Ko(t,l);else{r=l;var c=pt;pt|=2;var h=Sh();(Kt!==t||en!==r)&&(hr=null,zi=z()+500,ii(t,r));do try{qg();break}catch(D){yh(t,D)}while(!0);Ol(),Go.current=h,pt=c,zt!==null?r=0:(Kt=null,en=0,r=jt)}if(r!==0){if(r===2&&(c=Mt(t),c!==0&&(l=c,r=xu(t,c))),r===1)throw o=ba,ii(t,0),kr(t,l),En(t,z()),o;if(r===6)kr(t,l);else{if(c=t.current.alternate,!(l&30)&&!Xg(c)&&(r=Ko(t,l),r===2&&(h=Mt(t),h!==0&&(l=h,r=xu(t,h))),r===1))throw o=ba,ii(t,0),kr(t,l),En(t,z()),o;switch(t.finishedWork=c,t.finishedLanes=l,r){case 0:case 1:throw Error(n(345));case 2:ai(t,Mn,hr);break;case 3:if(kr(t,l),(l&130023424)===l&&(r=gu+500-z(),10<r)){if(Bn(t,0)!==0)break;if(c=t.suspendedLanes,(c&l)!==l){gn(),t.pingedLanes|=t.suspendedLanes&c;break}t.timeoutHandle=bl(ai.bind(null,t,Mn,hr),r);break}ai(t,Mn,hr);break;case 4:if(kr(t,l),(l&4194240)===l)break;for(r=t.eventTimes,c=-1;0<l;){var M=31-gt(l);h=1<<M,M=r[M],M>c&&(c=M),l&=~h}if(l=c,l=z()-l,l=(120>l?120:480>l?480:1080>l?1080:1920>l?1920:3e3>l?3e3:4320>l?4320:1960*Wg(l/1960))-l,10<l){t.timeoutHandle=bl(ai.bind(null,t,Mn,hr),l);break}ai(t,Mn,hr);break;case 5:ai(t,Mn,hr);break;default:throw Error(n(329))}}}return En(t,z()),t.callbackNode===o?_h.bind(null,t):null}function xu(t,r){var o=Aa;return t.current.memoizedState.isDehydrated&&(ii(t,r).flags|=256),t=Ko(t,r),t!==2&&(r=Mn,Mn=o,r!==null&&yu(r)),t}function yu(t){Mn===null?Mn=t:Mn.push.apply(Mn,t)}function Xg(t){for(var r=t;;){if(r.flags&16384){var o=r.updateQueue;if(o!==null&&(o=o.stores,o!==null))for(var l=0;l<o.length;l++){var c=o[l],h=c.getSnapshot;c=c.value;try{if(!Hn(h(),c))return!1}catch{return!1}}}if(o=r.child,r.subtreeFlags&16384&&o!==null)o.return=r,r=o;else{if(r===t)break;for(;r.sibling===null;){if(r.return===null||r.return===t)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function kr(t,r){for(r&=~mu,r&=~Wo,t.suspendedLanes|=r,t.pingedLanes&=~r,t=t.expirationTimes;0<r;){var o=31-gt(r),l=1<<o;t[o]=-1,r&=~l}}function xh(t){if(pt&6)throw Error(n(327));Bi();var r=Bn(t,0);if(!(r&1))return En(t,z()),null;var o=Ko(t,r);if(t.tag!==0&&o===2){var l=Mt(t);l!==0&&(r=l,o=xu(t,l))}if(o===1)throw o=ba,ii(t,0),kr(t,r),En(t,z()),o;if(o===6)throw Error(n(345));return t.finishedWork=t.current.alternate,t.finishedLanes=r,ai(t,Mn,hr),En(t,z()),null}function Su(t,r){var o=pt;pt|=1;try{return t(r)}finally{pt=o,pt===0&&(zi=z()+500,Eo&&Dr())}}function ri(t){Fr!==null&&Fr.tag===0&&!(pt&6)&&Bi();var r=pt;pt|=1;var o=kn.transition,l=ut;try{if(kn.transition=null,ut=1,t)return t()}finally{ut=l,kn.transition=o,pt=r,!(pt&6)&&Dr()}}function Mu(){Dn=ki.current,Rt(ki)}function ii(t,r){t.finishedWork=null,t.finishedLanes=0;var o=t.timeoutHandle;if(o!==-1&&(t.timeoutHandle=-1,Sg(o)),zt!==null)for(o=zt.return;o!==null;){var l=o;switch(Ll(l),l.tag){case 1:l=l.type.childContextTypes,l!=null&&So();break;case 3:Ni(),Rt(xn),Rt(an),Xl();break;case 5:Gl(l);break;case 4:Ni();break;case 13:Rt(Dt);break;case 19:Rt(Dt);break;case 10:kl(l.type._context);break;case 22:case 23:Mu()}o=o.return}if(Kt=t,zt=t=zr(t.current,null),en=Dn=r,jt=0,ba=null,mu=Wo=ni=0,Mn=Aa=null,Qr!==null){for(r=0;r<Qr.length;r++)if(o=Qr[r],l=o.interleaved,l!==null){o.interleaved=null;var c=l.next,h=o.pending;if(h!==null){var M=h.next;h.next=c,l.next=M}o.pending=l}Qr=null}return t}function yh(t,r){do{var o=zt;try{if(Ol(),Uo.current=Oo,Io){for(var l=Lt.memoizedState;l!==null;){var c=l.queue;c!==null&&(c.pending=null),l=l.next}Io=!1}if(ti=0,$t=Xt=Lt=null,ya=!1,Sa=0,pu.current=null,o===null||o.return===null){jt=1,ba=r,zt=null;break}e:{var h=t,M=o.return,D=o,N=r;if(r=en,D.flags|=32768,N!==null&&typeof N=="object"&&typeof N.then=="function"){var Z=N,me=D,xe=me.tag;if(!(me.mode&1)&&(xe===0||xe===11||xe===15)){var pe=me.alternate;pe?(me.updateQueue=pe.updateQueue,me.memoizedState=pe.memoizedState,me.lanes=pe.lanes):(me.updateQueue=null,me.memoizedState=null)}var Ce=Xf(M);if(Ce!==null){Ce.flags&=-257,jf(Ce,M,D,h,r),Ce.mode&1&&Wf(h,Z,r),r=Ce,N=Z;var Be=r.updateQueue;if(Be===null){var He=new Set;He.add(N),r.updateQueue=He}else Be.add(N);break e}else{if(!(r&1)){Wf(h,Z,r),Eu();break e}N=Error(n(426))}}else if(Ct&&D.mode&1){var kt=Xf(M);if(kt!==null){!(kt.flags&65536)&&(kt.flags|=256),jf(kt,M,D,h,r),Nl(Fi(N,D));break e}}h=N=Fi(N,D),jt!==4&&(jt=2),Aa===null?Aa=[h]:Aa.push(h),h=M;do{switch(h.tag){case 3:h.flags|=65536,r&=-r,h.lanes|=r;var q=Vf(h,N,r);mf(h,q);break e;case 1:D=N;var H=h.type,Y=h.stateNode;if(!(h.flags&128)&&(typeof H.getDerivedStateFromError=="function"||Y!==null&&typeof Y.componentDidCatch=="function"&&(Nr===null||!Nr.has(Y)))){h.flags|=65536,r&=-r,h.lanes|=r;var Me=Gf(h,D,r);mf(h,Me);break e}}h=h.return}while(h!==null)}Eh(o)}catch(Ge){r=Ge,zt===o&&o!==null&&(zt=o=o.return);continue}break}while(!0)}function Sh(){var t=Go.current;return Go.current=Oo,t===null?Oo:t}function Eu(){(jt===0||jt===3||jt===2)&&(jt=4),Kt===null||!(ni&268435455)&&!(Wo&268435455)||kr(Kt,en)}function Ko(t,r){var o=pt;pt|=2;var l=Sh();(Kt!==t||en!==r)&&(hr=null,ii(t,r));do try{jg();break}catch(c){yh(t,c)}while(!0);if(Ol(),pt=o,Go.current=l,zt!==null)throw Error(n(261));return Kt=null,en=0,jt}function jg(){for(;zt!==null;)Mh(zt)}function qg(){for(;zt!==null&&!J();)Mh(zt)}function Mh(t){var r=bh(t.alternate,t,Dn);t.memoizedProps=t.pendingProps,r===null?Eh(t):zt=r,pu.current=null}function Eh(t){var r=t;do{var o=r.alternate;if(t=r.return,r.flags&32768){if(o=Bg(o,r),o!==null){o.flags&=32767,zt=o;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{jt=6,zt=null;return}}else if(o=zg(o,r,Dn),o!==null){zt=o;return}if(r=r.sibling,r!==null){zt=r;return}zt=r=t}while(r!==null);jt===0&&(jt=5)}function ai(t,r,o){var l=ut,c=kn.transition;try{kn.transition=null,ut=1,Yg(t,r,o,l)}finally{kn.transition=c,ut=l}return null}function Yg(t,r,o,l){do Bi();while(Fr!==null);if(pt&6)throw Error(n(327));o=t.finishedWork;var c=t.finishedLanes;if(o===null)return null;if(t.finishedWork=null,t.finishedLanes=0,o===t.current)throw Error(n(177));t.callbackNode=null,t.callbackPriority=0;var h=o.lanes|o.childLanes;if(vn(t,h),t===Kt&&(zt=Kt=null,en=0),!(o.subtreeFlags&2064)&&!(o.flags&2064)||jo||(jo=!0,Ah(ze,function(){return Bi(),null})),h=(o.flags&15990)!==0,o.subtreeFlags&15990||h){h=kn.transition,kn.transition=null;var M=ut;ut=1;var D=pt;pt|=4,pu.current=null,Vg(t,o),hh(o,t),pg(Tl),oo=!!El,Tl=El=null,t.current=o,Gg(o),Q(),pt=D,ut=M,kn.transition=h}else t.current=o;if(jo&&(jo=!1,Fr=t,qo=c),h=t.pendingLanes,h===0&&(Nr=null),vt(o.stateNode),En(t,z()),r!==null)for(l=t.onRecoverableError,o=0;o<r.length;o++)c=r[o],l(c.value,{componentStack:c.stack,digest:c.digest});if(Xo)throw Xo=!1,t=vu,vu=null,t;return qo&1&&t.tag!==0&&Bi(),h=t.pendingLanes,h&1?t===_u?Ra++:(Ra=0,_u=t):Ra=0,Dr(),null}function Bi(){if(Fr!==null){var t=cd(qo),r=kn.transition,o=ut;try{if(kn.transition=null,ut=16>t?16:t,Fr===null)var l=!1;else{if(t=Fr,Fr=null,qo=0,pt&6)throw Error(n(331));var c=pt;for(pt|=4,Fe=t.current;Fe!==null;){var h=Fe,M=h.child;if(Fe.flags&16){var D=h.deletions;if(D!==null){for(var N=0;N<D.length;N++){var Z=D[N];for(Fe=Z;Fe!==null;){var me=Fe;switch(me.tag){case 0:case 11:case 15:wa(8,me,h)}var xe=me.child;if(xe!==null)xe.return=me,Fe=xe;else for(;Fe!==null;){me=Fe;var pe=me.sibling,Ce=me.return;if(lh(me),me===Z){Fe=null;break}if(pe!==null){pe.return=Ce,Fe=pe;break}Fe=Ce}}}var Be=h.alternate;if(Be!==null){var He=Be.child;if(He!==null){Be.child=null;do{var kt=He.sibling;He.sibling=null,He=kt}while(He!==null)}}Fe=h}}if(h.subtreeFlags&2064&&M!==null)M.return=h,Fe=M;else e:for(;Fe!==null;){if(h=Fe,h.flags&2048)switch(h.tag){case 0:case 11:case 15:wa(9,h,h.return)}var q=h.sibling;if(q!==null){q.return=h.return,Fe=q;break e}Fe=h.return}}var H=t.current;for(Fe=H;Fe!==null;){M=Fe;var Y=M.child;if(M.subtreeFlags&2064&&Y!==null)Y.return=M,Fe=Y;else e:for(M=H;Fe!==null;){if(D=Fe,D.flags&2048)try{switch(D.tag){case 0:case 11:case 15:Vo(9,D)}}catch(Ge){It(D,D.return,Ge)}if(D===M){Fe=null;break e}var Me=D.sibling;if(Me!==null){Me.return=D.return,Fe=Me;break e}Fe=D.return}}if(pt=c,Dr(),rt&&typeof rt.onPostCommitFiberRoot=="function")try{rt.onPostCommitFiberRoot(je,t)}catch{}l=!0}return l}finally{ut=o,kn.transition=r}}return!1}function Th(t,r,o){r=Fi(o,r),r=Vf(t,r,1),t=Ur(t,r,1),r=gn(),t!==null&&(Ut(t,1,r),En(t,r))}function It(t,r,o){if(t.tag===3)Th(t,t,o);else for(;r!==null;){if(r.tag===3){Th(r,t,o);break}else if(r.tag===1){var l=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof l.componentDidCatch=="function"&&(Nr===null||!Nr.has(l))){t=Fi(o,t),t=Gf(r,t,1),r=Ur(r,t,1),t=gn(),r!==null&&(Ut(r,1,t),En(r,t));break}}r=r.return}}function $g(t,r,o){var l=t.pingCache;l!==null&&l.delete(r),r=gn(),t.pingedLanes|=t.suspendedLanes&o,Kt===t&&(en&o)===o&&(jt===4||jt===3&&(en&130023424)===en&&500>z()-gu?ii(t,0):mu|=o),En(t,r)}function wh(t,r){r===0&&(t.mode&1?(r=Pt,Pt<<=1,!(Pt&130023424)&&(Pt=4194304)):r=1);var o=gn();t=cr(t,r),t!==null&&(Ut(t,r,o),En(t,o))}function Kg(t){var r=t.memoizedState,o=0;r!==null&&(o=r.retryLane),wh(t,o)}function Zg(t,r){var o=0;switch(t.tag){case 13:var l=t.stateNode,c=t.memoizedState;c!==null&&(o=c.retryLane);break;case 19:l=t.stateNode;break;default:throw Error(n(314))}l!==null&&l.delete(r),wh(t,o)}var bh;bh=function(t,r,o){if(t!==null)if(t.memoizedProps!==r.pendingProps||xn.current)Sn=!0;else{if(!(t.lanes&o)&&!(r.flags&128))return Sn=!1,kg(t,r,o);Sn=!!(t.flags&131072)}else Sn=!1,Ct&&r.flags&1048576&&af(r,wo,r.index);switch(r.lanes=0,r.tag){case 2:var l=r.type;Bo(t,r),t=r.pendingProps;var c=Ri(r,an.current);Ii(r,o),c=Yl(null,r,l,t,c,o);var h=$l();return r.flags|=1,typeof c=="object"&&c!==null&&typeof c.render=="function"&&c.$$typeof===void 0?(r.tag=1,r.memoizedState=null,r.updateQueue=null,yn(l)?(h=!0,Mo(r)):h=!1,r.memoizedState=c.state!==null&&c.state!==void 0?c.state:null,Hl(r),c.updater=ko,r.stateNode=c,c._reactInternals=r,tu(r,l,t,o),r=au(null,r,l,!0,h,o)):(r.tag=0,Ct&&h&&Dl(r),mn(null,r,c,o),r=r.child),r;case 16:l=r.elementType;e:{switch(Bo(t,r),t=r.pendingProps,c=l._init,l=c(l._payload),r.type=l,c=r.tag=Qg(l),t=Gn(l,t),c){case 0:r=iu(null,r,l,t,o);break e;case 1:r=Jf(null,r,l,t,o);break e;case 11:r=qf(null,r,l,t,o);break e;case 14:r=Yf(null,r,l,Gn(l.type,t),o);break e}throw Error(n(306,l,""))}return r;case 0:return l=r.type,c=r.pendingProps,c=r.elementType===l?c:Gn(l,c),iu(t,r,l,c,o);case 1:return l=r.type,c=r.pendingProps,c=r.elementType===l?c:Gn(l,c),Jf(t,r,l,c,o);case 3:e:{if(Qf(r),t===null)throw Error(n(387));l=r.pendingProps,h=r.memoizedState,c=h.element,pf(t,r),Do(r,l,null,o);var M=r.memoizedState;if(l=M.element,h.isDehydrated)if(h={element:l,isDehydrated:!1,cache:M.cache,pendingSuspenseBoundaries:M.pendingSuspenseBoundaries,transitions:M.transitions},r.updateQueue.baseState=h,r.memoizedState=h,r.flags&256){c=Fi(Error(n(423)),r),r=eh(t,r,l,o,c);break e}else if(l!==c){c=Fi(Error(n(424)),r),r=eh(t,r,l,o,c);break e}else for(Pn=Rr(r.stateNode.containerInfo.firstChild),Cn=r,Ct=!0,Vn=null,o=ff(r,null,l,o),r.child=o;o;)o.flags=o.flags&-3|4096,o=o.sibling;else{if(Di(),l===c){r=fr(t,r,o);break e}mn(t,r,l,o)}r=r.child}return r;case 5:return vf(r),t===null&&Il(r),l=r.type,c=r.pendingProps,h=t!==null?t.memoizedProps:null,M=c.children,wl(l,c)?M=null:h!==null&&wl(l,h)&&(r.flags|=32),Zf(t,r),mn(t,r,M,o),r.child;case 6:return t===null&&Il(r),null;case 13:return th(t,r,o);case 4:return Vl(r,r.stateNode.containerInfo),l=r.pendingProps,t===null?r.child=Li(r,null,l,o):mn(t,r,l,o),r.child;case 11:return l=r.type,c=r.pendingProps,c=r.elementType===l?c:Gn(l,c),qf(t,r,l,c,o);case 7:return mn(t,r,r.pendingProps,o),r.child;case 8:return mn(t,r,r.pendingProps.children,o),r.child;case 12:return mn(t,r,r.pendingProps.children,o),r.child;case 10:e:{if(l=r.type._context,c=r.pendingProps,h=r.memoizedProps,M=c.value,wt(Ro,l._currentValue),l._currentValue=M,h!==null)if(Hn(h.value,M)){if(h.children===c.children&&!xn.current){r=fr(t,r,o);break e}}else for(h=r.child,h!==null&&(h.return=r);h!==null;){var D=h.dependencies;if(D!==null){M=h.child;for(var N=D.firstContext;N!==null;){if(N.context===l){if(h.tag===1){N=dr(-1,o&-o),N.tag=2;var Z=h.updateQueue;if(Z!==null){Z=Z.shared;var me=Z.pending;me===null?N.next=N:(N.next=me.next,me.next=N),Z.pending=N}}h.lanes|=o,N=h.alternate,N!==null&&(N.lanes|=o),zl(h.return,o,r),D.lanes|=o;break}N=N.next}}else if(h.tag===10)M=h.type===r.type?null:h.child;else if(h.tag===18){if(M=h.return,M===null)throw Error(n(341));M.lanes|=o,D=M.alternate,D!==null&&(D.lanes|=o),zl(M,o,r),M=h.sibling}else M=h.child;if(M!==null)M.return=h;else for(M=h;M!==null;){if(M===r){M=null;break}if(h=M.sibling,h!==null){h.return=M.return,M=h;break}M=M.return}h=M}mn(t,r,c.children,o),r=r.child}return r;case 9:return c=r.type,l=r.pendingProps.children,Ii(r,o),c=Fn(c),l=l(c),r.flags|=1,mn(t,r,l,o),r.child;case 14:return l=r.type,c=Gn(l,r.pendingProps),c=Gn(l.type,c),Yf(t,r,l,c,o);case 15:return $f(t,r,r.type,r.pendingProps,o);case 17:return l=r.type,c=r.pendingProps,c=r.elementType===l?c:Gn(l,c),Bo(t,r),r.tag=1,yn(l)?(t=!0,Mo(r)):t=!1,Ii(r,o),Bf(r,l,c),tu(r,l,c,o),au(null,r,l,!0,t,o);case 19:return rh(t,r,o);case 22:return Kf(t,r,o)}throw Error(n(156,r.tag))};function Ah(t,r){return T(t,r)}function Jg(t,r,o,l){this.tag=t,this.key=o,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=l,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function zn(t,r,o,l){return new Jg(t,r,o,l)}function Tu(t){return t=t.prototype,!(!t||!t.isReactComponent)}function Qg(t){if(typeof t=="function")return Tu(t)?1:0;if(t!=null){if(t=t.$$typeof,t===ie)return 11;if(t===he)return 14}return 2}function zr(t,r){var o=t.alternate;return o===null?(o=zn(t.tag,r,t.key,t.mode),o.elementType=t.elementType,o.type=t.type,o.stateNode=t.stateNode,o.alternate=t,t.alternate=o):(o.pendingProps=r,o.type=t.type,o.flags=0,o.subtreeFlags=0,o.deletions=null),o.flags=t.flags&14680064,o.childLanes=t.childLanes,o.lanes=t.lanes,o.child=t.child,o.memoizedProps=t.memoizedProps,o.memoizedState=t.memoizedState,o.updateQueue=t.updateQueue,r=t.dependencies,o.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},o.sibling=t.sibling,o.index=t.index,o.ref=t.ref,o}function Zo(t,r,o,l,c,h){var M=2;if(l=t,typeof t=="function")Tu(t)&&(M=1);else if(typeof t=="string")M=5;else e:switch(t){case F:return oi(o.children,c,h,r);case j:M=8,c|=8;break;case R:return t=zn(12,o,r,c|2),t.elementType=R,t.lanes=h,t;case ee:return t=zn(13,o,r,c),t.elementType=ee,t.lanes=h,t;case se:return t=zn(19,o,r,c),t.elementType=se,t.lanes=h,t;case ue:return Jo(o,c,h,r);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case A:M=10;break e;case V:M=9;break e;case ie:M=11;break e;case he:M=14;break e;case oe:M=16,l=null;break e}throw Error(n(130,t==null?t:typeof t,""))}return r=zn(M,o,r,c),r.elementType=t,r.type=l,r.lanes=h,r}function oi(t,r,o,l){return t=zn(7,t,l,r),t.lanes=o,t}function Jo(t,r,o,l){return t=zn(22,t,l,r),t.elementType=ue,t.lanes=o,t.stateNode={isHidden:!1},t}function wu(t,r,o){return t=zn(6,t,null,r),t.lanes=o,t}function bu(t,r,o){return r=zn(4,t.children!==null?t.children:[],t.key,r),r.lanes=o,r.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},r}function ev(t,r,o,l,c){this.tag=r,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=rn(0),this.expirationTimes=rn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=rn(0),this.identifierPrefix=l,this.onRecoverableError=c,this.mutableSourceEagerHydrationData=null}function Au(t,r,o,l,c,h,M,D,N){return t=new ev(t,r,o,D,N),r===1?(r=1,h===!0&&(r|=8)):r=0,h=zn(3,null,null,r),t.current=h,h.stateNode=t,h.memoizedState={element:l,isDehydrated:o,cache:null,transitions:null,pendingSuspenseBoundaries:null},Hl(h),t}function tv(t,r,o){var l=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:k,key:l==null?null:""+l,children:t,containerInfo:r,implementation:o}}function Rh(t){if(!t)return Pr;t=t._reactInternals;e:{if(qn(t)!==t||t.tag!==1)throw Error(n(170));var r=t;do{switch(r.tag){case 3:r=r.stateNode.context;break e;case 1:if(yn(r.type)){r=r.stateNode.__reactInternalMemoizedMergedChildContext;break e}}r=r.return}while(r!==null);throw Error(n(171))}if(t.tag===1){var o=t.type;if(yn(o))return tf(t,o,r)}return r}function Ch(t,r,o,l,c,h,M,D,N){return t=Au(o,l,!0,t,c,h,M,D,N),t.context=Rh(null),o=t.current,l=gn(),c=Or(o),h=dr(l,c),h.callback=r??null,Ur(o,h,c),t.current.lanes=c,Ut(t,c,l),En(t,l),t}function Qo(t,r,o,l){var c=r.current,h=gn(),M=Or(c);return o=Rh(o),r.context===null?r.context=o:r.pendingContext=o,r=dr(h,M),r.payload={element:t},l=l===void 0?null:l,l!==null&&(r.callback=l),t=Ur(c,r,M),t!==null&&(jn(t,c,M,h),Po(t,c,M)),M}function es(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function Ph(t,r){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var o=t.retryLane;t.retryLane=o!==0&&o<r?o:r}}function Ru(t,r){Ph(t,r),(t=t.alternate)&&Ph(t,r)}var Dh=typeof reportError=="function"?reportError:function(t){console.error(t)};function Cu(t){this._internalRoot=t}ts.prototype.render=Cu.prototype.render=function(t){var r=this._internalRoot;if(r===null)throw Error(n(409));Qo(t,r,null,null)},ts.prototype.unmount=Cu.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var r=t.containerInfo;ri(function(){Qo(null,t,null,null)}),r[or]=null}};function ts(t){this._internalRoot=t}ts.prototype.unstable_scheduleHydration=function(t){if(t){var r=hd();t={blockedOn:null,target:t,priority:r};for(var o=0;o<wr.length&&r!==0&&r<wr[o].priority;o++);wr.splice(o,0,t),o===0&&gd(t)}};function Pu(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function ns(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function Lh(){}function nv(t,r,o,l,c){if(c){if(typeof l=="function"){var h=l;l=function(){var Z=es(M);h.call(Z)}}var M=Ch(r,l,t,0,null,!1,!1,"",Lh);return t._reactRootContainer=M,t[or]=M.current,fa(t.nodeType===8?t.parentNode:t),ri(),M}for(;c=t.lastChild;)t.removeChild(c);if(typeof l=="function"){var D=l;l=function(){var Z=es(N);D.call(Z)}}var N=Au(t,0,!1,null,null,!1,!1,"",Lh);return t._reactRootContainer=N,t[or]=N.current,fa(t.nodeType===8?t.parentNode:t),ri(function(){Qo(r,N,o,l)}),N}function rs(t,r,o,l,c){var h=o._reactRootContainer;if(h){var M=h;if(typeof c=="function"){var D=c;c=function(){var N=es(M);D.call(N)}}Qo(r,M,t,c)}else M=nv(o,r,t,c,l);return es(M)}dd=function(t){switch(t.tag){case 3:var r=t.stateNode;if(r.current.memoizedState.isDehydrated){var o=Jt(r.pendingLanes);o!==0&&(Yr(r,o|1),En(r,z()),!(pt&6)&&(zi=z()+500,Dr()))}break;case 13:ri(function(){var l=cr(t,1);if(l!==null){var c=gn();jn(l,t,1,c)}}),Ru(t,1)}},nl=function(t){if(t.tag===13){var r=cr(t,134217728);if(r!==null){var o=gn();jn(r,t,134217728,o)}Ru(t,134217728)}},fd=function(t){if(t.tag===13){var r=Or(t),o=cr(t,r);if(o!==null){var l=gn();jn(o,t,r,l)}Ru(t,r)}},hd=function(){return ut},pd=function(t,r){var o=ut;try{return ut=t,r()}finally{ut=o}},we=function(t,r,o){switch(r){case"input":if(ot(t,o),r=o.name,o.type==="radio"&&r!=null){for(o=t;o.parentNode;)o=o.parentNode;for(o=o.querySelectorAll("input[name="+JSON.stringify(""+r)+'][type="radio"]'),r=0;r<o.length;r++){var l=o[r];if(l!==t&&l.form===t.form){var c=yo(l);if(!c)throw Error(n(90));ft(l),ot(l,c)}}}break;case"textarea":fe(t,o);break;case"select":r=o.value,r!=null&&P(t,!!o.multiple,r,!1)}},bt=Su,Wt=ri;var rv={usingClientEntryPoint:!1,Events:[ma,bi,yo,be,it,Su]},Ca={findFiberByHostInstance:$r,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},iv={bundleType:Ca.bundleType,version:Ca.version,rendererPackageName:Ca.rendererPackageName,rendererConfig:Ca.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:C.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=no(t),t===null?null:t.stateNode},findFiberByHostInstance:Ca.findFiberByHostInstance,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var is=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!is.isDisabled&&is.supportsFiber)try{je=is.inject(iv),rt=is}catch{}}return di.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=rv,di.createPortal=function(t,r){var o=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Pu(r))throw Error(n(200));return tv(t,r,null,o)},di.createRoot=function(t,r){if(!Pu(t))throw Error(n(299));var o=!1,l="",c=Dh;return r!=null&&(r.unstable_strictMode===!0&&(o=!0),r.identifierPrefix!==void 0&&(l=r.identifierPrefix),r.onRecoverableError!==void 0&&(c=r.onRecoverableError)),r=Au(t,1,!1,null,null,o,!1,l,c),t[or]=r.current,fa(t.nodeType===8?t.parentNode:t),new Cu(r)},di.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var r=t._reactInternals;if(r===void 0)throw typeof t.render=="function"?Error(n(188)):(t=Object.keys(t).join(","),Error(n(268,t)));return t=no(r),t=t===null?null:t.stateNode,t},di.flushSync=function(t){return ri(t)},di.hydrate=function(t,r,o){if(!ns(r))throw Error(n(200));return rs(null,t,r,!0,o)},di.hydrateRoot=function(t,r,o){if(!Pu(t))throw Error(n(405));var l=o!=null&&o.hydratedSources||null,c=!1,h="",M=Dh;if(o!=null&&(o.unstable_strictMode===!0&&(c=!0),o.identifierPrefix!==void 0&&(h=o.identifierPrefix),o.onRecoverableError!==void 0&&(M=o.onRecoverableError)),r=Ch(r,null,t,1,o??null,c,!1,h,M),t[or]=r.current,fa(t),l)for(t=0;t<l.length;t++)o=l[t],c=o._getVersion,c=c(o._source),r.mutableSourceEagerHydrationData==null?r.mutableSourceEagerHydrationData=[o,c]:r.mutableSourceEagerHydrationData.push(o,c);return new ts(r)},di.render=function(t,r,o){if(!ns(r))throw Error(n(200));return rs(null,t,r,!1,o)},di.unmountComponentAtNode=function(t){if(!ns(t))throw Error(n(40));return t._reactRootContainer?(ri(function(){rs(null,null,t,!1,function(){t._reactRootContainer=null,t[or]=null})}),!0):!1},di.unstable_batchedUpdates=Su,di.unstable_renderSubtreeIntoContainer=function(t,r,o,l){if(!ns(o))throw Error(n(200));if(t==null||t._reactInternals===void 0)throw Error(n(38));return rs(t,r,o,!1,l)},di.version="18.3.1-next-f1338f8080-20240426",di}var zy;function ZR(){if(zy)return Vv.exports;zy=1;function a(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(a)}catch(e){console.error(e)}}return a(),Vv.exports=KR(),Vv.exports}var By;function JR(){if(By)return Cp;By=1;var a=ZR();return Cp.createRoot=a.createRoot,Cp.hydrateRoot=a.hydrateRoot,Cp}var QR=JR();const eC=()=>Ft.jsxs("header",{className:"header-container",children:[Ft.jsx("h1",{className:"header-title",children:"Arystans' Portfolio"}),Ft.jsx("p",{className:"header-subtitle",children:"FullStack Developer | Node Enthusiast"})]}),tC=({title:a,description:e,github:n})=>{const i=()=>{window.open(n,"_blank")};return Ft.jsxs("div",{className:"project-card",onClick:i,children:[Ft.jsx("h3",{className:"project-title",children:a}),Ft.jsx("p",{className:"project-description",children:e})]})};var Hy={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/var Vy;function nC(){return Vy||(Vy=1,function(a){(function(){var e={}.hasOwnProperty;function n(){for(var u="",d=0;d<arguments.length;d++){var f=arguments[d];f&&(u=s(u,i(f)))}return u}function i(u){if(typeof u=="string"||typeof u=="number")return u;if(typeof u!="object")return"";if(Array.isArray(u))return n.apply(null,u);if(u.toString!==Object.prototype.toString&&!u.toString.toString().includes("[native code]"))return u.toString();var d="";for(var f in u)e.call(u,f)&&u[f]&&(d=s(d,f));return d}function s(u,d){return d?u?u+" "+d:u+d:u}a.exports?(n.default=n,a.exports=n):window.classNames=n})()}(Hy)),Hy.exports}var rC=nC();const T1=E1(rC),iC=["xxl","xl","lg","md","sm","xs"],aC="xs",oC=Rs.createContext({prefixes:{},breakpoints:iC,minBreakpoint:aC});function sC(a,e){const{prefixes:n}=Rs.useContext(oC);return a||n[e]||e}function lC(a,e){let n=0;return Rs.Children.map(a,i=>Rs.isValidElement(i)?e(i,n++):i)}const Gy=1e3;function uC(a,e,n){const i=(a-e)/(n-e)*100;return Math.round(i*Gy)/Gy}function Wy({min:a,now:e,max:n,label:i,visuallyHidden:s,striped:u,animated:d,className:f,style:p,variant:m,bsPrefix:v,...x},_){return Ft.jsx("div",{ref:_,...x,role:"progressbar",className:T1(f,`${v}-bar`,{[`bg-${m}`]:m,[`${v}-bar-animated`]:d,[`${v}-bar-striped`]:d||u}),style:{width:`${uC(e,a,n)}%`,...p},"aria-valuenow":e,"aria-valuemin":a,"aria-valuemax":n,children:s?Ft.jsx("span",{className:"visually-hidden",children:i}):i})}const im=Rs.forwardRef(({isChild:a=!1,...e},n)=>{const i={min:0,max:100,animated:!1,visuallyHidden:!1,striped:!1,...e};if(i.bsPrefix=sC(i.bsPrefix,"progress"),a)return Wy(i,n);const{min:s,now:u,max:d,label:f,visuallyHidden:p,striped:m,animated:v,bsPrefix:x,variant:_,className:S,children:w,...b}=i;return Ft.jsx("div",{ref:n,...b,className:T1(S,x),children:w?lC(w,y=>Rs.cloneElement(y,{isChild:!0})):Wy({min:s,now:u,max:d,label:f,visuallyHidden:p,striped:m,animated:v,bsPrefix:x,variant:_},n)})});im.displayName="ProgressBar";const cC=()=>Ft.jsxs("div",{className:"stats-container",children:[Ft.jsxs("div",{className:"stat",children:[Ft.jsx("h4",{className:"stat-title",children:"JavaScript"}),Ft.jsx(im,{now:85,label:"85%",className:"stat-progress",variant:"info",style:{height:"15px",borderRadius:"20px"}})]}),Ft.jsxs("div",{className:"stat",children:[Ft.jsx("h4",{className:"stat-title",children:"React"}),Ft.jsx(im,{now:90,label:"90%",className:"stat-progress",variant:"success",style:{height:"15px",borderRadius:"20px"}})]}),Ft.jsxs("div",{className:"stat",children:[Ft.jsx("h4",{className:"stat-title",children:"CSS / SCSS"}),Ft.jsx(im,{now:75,label:"75%",className:"stat-progress",variant:"warning",style:{height:"15px",borderRadius:"20px"}})]})]});var w1={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},Xy=nc.createContext&&nc.createContext(w1),dC=["attr","size","title"];function fC(a,e){if(a==null)return{};var n=hC(a,e),i,s;if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(a);for(s=0;s<u.length;s++)i=u[s],!(e.indexOf(i)>=0)&&Object.prototype.propertyIsEnumerable.call(a,i)&&(n[i]=a[i])}return n}function hC(a,e){if(a==null)return{};var n={};for(var i in a)if(Object.prototype.hasOwnProperty.call(a,i)){if(e.indexOf(i)>=0)continue;n[i]=a[i]}return n}function gm(){return gm=Object.assign?Object.assign.bind():function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(a[i]=n[i])}return a},gm.apply(this,arguments)}function jy(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);e&&(i=i.filter(function(s){return Object.getOwnPropertyDescriptor(a,s).enumerable})),n.push.apply(n,i)}return n}function vm(a){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?jy(Object(n),!0).forEach(function(i){pC(a,i,n[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):jy(Object(n)).forEach(function(i){Object.defineProperty(a,i,Object.getOwnPropertyDescriptor(n,i))})}return a}function pC(a,e,n){return e=mC(e),e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function mC(a){var e=gC(a,"string");return typeof e=="symbol"?e:e+""}function gC(a,e){if(typeof a!="object"||!a)return a;var n=a[Symbol.toPrimitive];if(n!==void 0){var i=n.call(a,e||"default");if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(a)}function b1(a){return a&&a.map((e,n)=>nc.createElement(e.tag,vm({key:n},e.attr),b1(e.child)))}function sx(a){return e=>nc.createElement(vC,gm({attr:vm({},a.attr)},e),b1(a.child))}function vC(a){var e=n=>{var{attr:i,size:s,title:u}=a,d=fC(a,dC),f=s||n.size||"1em",p;return n.className&&(p=n.className),a.className&&(p=(p?p+" ":"")+a.className),nc.createElement("svg",gm({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},n.attr,i,d,{className:p,style:vm(vm({color:a.color||n.color},n.style),a.style),height:f,width:f,xmlns:"http://www.w3.org/2000/svg"}),u&&nc.createElement("title",null,u),a.children)};return Xy!==void 0?nc.createElement(Xy.Consumer,null,n=>e(n)):e(w1)}function _C(a){return sx({tag:"svg",attr:{viewBox:"0 0 496 512"},child:[{tag:"path",attr:{d:"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"},child:[]}]})(a)}function xC(a){return sx({tag:"svg",attr:{viewBox:"0 0 448 512"},child:[{tag:"path",attr:{d:"M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"},child:[]}]})(a)}function yC(a){return sx({tag:"svg",attr:{viewBox:"0 0 448 512"},child:[{tag:"path",attr:{d:"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"},child:[]}]})(a)}const SC=()=>Ft.jsxs("div",{className:"social-links-container",children:[Ft.jsx("a",{href:"https://www.linkedin.com/in/arystan-tanekov-089639338?trk=contact-info",target:"_blank",className:"social-button",children:Ft.jsx(yC,{})}),Ft.jsx("a",{href:"https://github.com/avomasrq",target:"_blank",className:"social-button",children:Ft.jsx(_C,{})}),Ft.jsx("a",{href:"https://www.instagram.com/avomasrq?igsh=dHQ4ZDJ6aHdhcXk3&utm_source=qr",target:"_blank",className:"social-button",children:Ft.jsx(xC,{})})]}),MC=()=>Ft.jsxs("div",{className:"about-me-card",children:[Ft.jsx("h2",{className:"about-me-title",children:"About Me"}),Ft.jsx("p",{className:"about-me-description",children:"Hi, I'm a passionate frontend and backend developer with a love for building clean and modern web applications. Right now i study in Tamos education in 10 th grade. I'm in the AP class on a engineering package. I also love sports. I used to do boxing 2 years;however, due to lack of time i train at home. Finally, i really like studying new skills and languages."})]});/**
* @license
* Copyright 2010-2024 Three.js Authors
* SPDX-License-Identifier: MIT
*/const lx="171",EC=0,qy=1,TC=2,A1=1,wC=2,gs=3,Zs=0,mi=1,_s=2,qs=0,Gc=1,Yy=2,$y=3,Ky=4,bC=5,$u=100,AC=101,RC=102,CC=103,PC=104,DC=200,LC=201,UC=202,IC=203,o0=204,s0=205,NC=206,FC=207,OC=208,kC=209,zC=210,BC=211,HC=212,VC=213,GC=214,l0=0,u0=1,c0=2,Qc=3,d0=4,f0=5,h0=6,p0=7,R1=0,WC=1,XC=2,Ys=0,jC=1,qC=2,YC=3,$C=4,KC=5,ZC=6,JC=7,C1=300,ed=301,td=302,m0=303,g0=304,wm=306,v0=1e3,Qu=1001,_0=1002,Ha=1003,QC=1004,Pp=1005,ja=1006,Gv=1007,ec=1008,Cs=1009,P1=1010,D1=1011,Kh=1012,ux=1013,ac=1014,Ss=1015,np=1016,cx=1017,dx=1018,nd=1020,L1=35902,U1=1021,I1=1022,za=1023,N1=1024,F1=1025,Wc=1026,rd=1027,O1=1028,fx=1029,k1=1030,hx=1031,px=1033,am=33776,om=33777,sm=33778,lm=33779,x0=35840,y0=35841,S0=35842,M0=35843,E0=36196,T0=37492,w0=37496,b0=37808,A0=37809,R0=37810,C0=37811,P0=37812,D0=37813,L0=37814,U0=37815,I0=37816,N0=37817,F0=37818,O0=37819,k0=37820,z0=37821,um=36492,B0=36494,H0=36495,z1=36283,V0=36284,G0=36285,W0=36286,e2=3200,t2=3201,n2=0,r2=1,Ws="",Ki="srgb",id="srgb-linear",_m="linear",wn="srgb",Mc=7680,Zy=519,i2=512,a2=513,o2=514,B1=515,s2=516,l2=517,u2=518,c2=519,Jy=35044,Qy="300 es",Ms=2e3,xm=2001;class ld{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(n);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,u=i.length;s<u;s++)i[s].call(this,e);e.target=null}}}const Gr=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Wv=Math.PI/180,X0=180/Math.PI;function rp(){const a=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Gr[a&255]+Gr[a>>8&255]+Gr[a>>16&255]+Gr[a>>24&255]+"-"+Gr[e&255]+Gr[e>>8&255]+"-"+Gr[e>>16&15|64]+Gr[e>>24&255]+"-"+Gr[n&63|128]+Gr[n>>8&255]+"-"+Gr[n>>16&255]+Gr[n>>24&255]+Gr[i&255]+Gr[i>>8&255]+Gr[i>>16&255]+Gr[i>>24&255]).toLowerCase()}function nn(a,e,n){return Math.max(e,Math.min(n,a))}function d2(a,e){return(a%e+e)%e}function Xv(a,e,n){return(1-n)*a+n*e}function Bh(a,e){switch(e.constructor){case Float32Array:return a;case Uint32Array:return a/4294967295;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int32Array:return Math.max(a/2147483647,-1);case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw new Error("Invalid component type.")}}function fi(a,e){switch(e.constructor){case Float32Array:return a;case Uint32Array:return Math.round(a*4294967295);case Uint16Array:return Math.round(a*65535);case Uint8Array:return Math.round(a*255);case Int32Array:return Math.round(a*2147483647);case Int16Array:return Math.round(a*32767);case Int8Array:return Math.round(a*127);default:throw new Error("Invalid component type.")}}class Un{constructor(e=0,n=0){Un.prototype.isVector2=!0,this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6],this.y=s[1]*n+s[4]*i+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=nn(this.x,e.x,n.x),this.y=nn(this.y,e.y,n.y),this}clampScalar(e,n){return this.x=nn(this.x,e,n),this.y=nn(this.y,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(nn(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(nn(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),s=Math.sin(n),u=this.x-e.x,d=this.y-e.y;return this.x=u*i-d*s+e.x,this.y=u*s+d*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ht{constructor(e,n,i,s,u,d,f,p,m){Ht.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,n,i,s,u,d,f,p,m)}set(e,n,i,s,u,d,f,p,m){const v=this.elements;return v[0]=e,v[1]=s,v[2]=f,v[3]=n,v[4]=u,v[5]=p,v[6]=i,v[7]=d,v[8]=m,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,u=this.elements,d=i[0],f=i[3],p=i[6],m=i[1],v=i[4],x=i[7],_=i[2],S=i[5],w=i[8],b=s[0],y=s[3],g=s[6],I=s[1],L=s[4],C=s[7],X=s[2],k=s[5],F=s[8];return u[0]=d*b+f*I+p*X,u[3]=d*y+f*L+p*k,u[6]=d*g+f*C+p*F,u[1]=m*b+v*I+x*X,u[4]=m*y+v*L+x*k,u[7]=m*g+v*C+x*F,u[2]=_*b+S*I+w*X,u[5]=_*y+S*L+w*k,u[8]=_*g+S*C+w*F,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],s=e[2],u=e[3],d=e[4],f=e[5],p=e[6],m=e[7],v=e[8];return n*d*v-n*f*m-i*u*v+i*f*p+s*u*m-s*d*p}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],u=e[3],d=e[4],f=e[5],p=e[6],m=e[7],v=e[8],x=v*d-f*m,_=f*p-v*u,S=m*u-d*p,w=n*x+i*_+s*S;if(w===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/w;return e[0]=x*b,e[1]=(s*m-v*i)*b,e[2]=(f*i-s*d)*b,e[3]=_*b,e[4]=(v*n-s*p)*b,e[5]=(s*u-f*n)*b,e[6]=S*b,e[7]=(i*p-m*n)*b,e[8]=(d*n-i*u)*b,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,s,u,d,f){const p=Math.cos(u),m=Math.sin(u);return this.set(i*p,i*m,-i*(p*d+m*f)+d+e,-s*m,s*p,-s*(-m*d+p*f)+f+n,0,0,1),this}scale(e,n){return this.premultiply(jv.makeScale(e,n)),this}rotate(e){return this.premultiply(jv.makeRotation(-e)),this}translate(e,n){return this.premultiply(jv.makeTranslation(e,n)),this}makeTranslation(e,n){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,n,0,0,1),this}makeRotation(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(e,n){return this.set(e,0,0,0,n,0,0,0,1),this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<9;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const jv=new Ht;function H1(a){for(let e=a.length-1;e>=0;--e)if(a[e]>=65535)return!0;return!1}function ym(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function f2(){const a=ym("canvas");return a.style.display="block",a}const eS={};function Oc(a){a in eS||(eS[a]=!0,console.warn(a))}function h2(a,e,n){return new Promise(function(i,s){function u(){switch(a.clientWaitSync(e,a.SYNC_FLUSH_COMMANDS_BIT,0)){case a.WAIT_FAILED:s();break;case a.TIMEOUT_EXPIRED:setTimeout(u,n);break;default:i()}}setTimeout(u,n)})}function p2(a){const e=a.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function m2(a){const e=a.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const tS=new Ht().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),nS=new Ht().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function g2(){const a={enabled:!0,workingColorSpace:id,spaces:{},convert:function(s,u,d){return this.enabled===!1||u===d||!u||!d||(this.spaces[u].transfer===wn&&(s.r=Ts(s.r),s.g=Ts(s.g),s.b=Ts(s.b)),this.spaces[u].primaries!==this.spaces[d].primaries&&(s.applyMatrix3(this.spaces[u].toXYZ),s.applyMatrix3(this.spaces[d].fromXYZ)),this.spaces[d].transfer===wn&&(s.r=Xc(s.r),s.g=Xc(s.g),s.b=Xc(s.b))),s},fromWorkingColorSpace:function(s,u){return this.convert(s,this.workingColorSpace,u)},toWorkingColorSpace:function(s,u){return this.convert(s,u,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===Ws?_m:this.spaces[s].transfer},getLuminanceCoefficients:function(s,u=this.workingColorSpace){return s.fromArray(this.spaces[u].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,u,d){return s.copy(this.spaces[u].toXYZ).multiply(this.spaces[d].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return a.define({[id]:{primaries:e,whitePoint:i,transfer:_m,toXYZ:tS,fromXYZ:nS,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:Ki},outputColorSpaceConfig:{drawingBufferColorSpace:Ki}},[Ki]:{primaries:e,whitePoint:i,transfer:wn,toXYZ:tS,fromXYZ:nS,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:Ki}}}),a}const cn=g2();function Ts(a){return a<.04045?a*.0773993808:Math.pow(a*.9478672986+.0521327014,2.4)}function Xc(a){return a<.0031308?a*12.92:1.055*Math.pow(a,.41666)-.055}let Ec;class v2{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Ec===void 0&&(Ec=ym("canvas")),Ec.width=e.width,Ec.height=e.height;const i=Ec.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=Ec}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const n=ym("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const s=i.getImageData(0,0,e.width,e.height),u=s.data;for(let d=0;d<u.length;d++)u[d]=Ts(u[d]/255)*255;return i.putImageData(s,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(Ts(n[i]/255)*255):n[i]=Ts(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let _2=0;class V1{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:_2++}),this.uuid=rp(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let u;if(Array.isArray(s)){u=[];for(let d=0,f=s.length;d<f;d++)s[d].isDataTexture?u.push(qv(s[d].image)):u.push(qv(s[d]))}else u=qv(s);i.url=u}return n||(e.images[this.uuid]=i),i}}function qv(a){return typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&a instanceof ImageBitmap?v2.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let x2=0;class gi extends ld{constructor(e=gi.DEFAULT_IMAGE,n=gi.DEFAULT_MAPPING,i=Qu,s=Qu,u=ja,d=ec,f=za,p=Cs,m=gi.DEFAULT_ANISOTROPY,v=Ws){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:x2++}),this.uuid=rp(),this.name="",this.source=new V1(e),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=u,this.minFilter=d,this.anisotropy=m,this.format=f,this.internalFormat=null,this.type=p,this.offset=new Un(0,0),this.repeat=new Un(1,1),this.center=new Un(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ht,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=v,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==C1)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case v0:e.x=e.x-Math.floor(e.x);break;case Qu:e.x=e.x<0?0:1;break;case _0:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case v0:e.y=e.y-Math.floor(e.y);break;case Qu:e.y=e.y<0?0:1;break;case _0:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}gi.DEFAULT_IMAGE=null;gi.DEFAULT_MAPPING=C1;gi.DEFAULT_ANISOTROPY=1;class Qn{constructor(e=0,n=0,i=0,s=1){Qn.prototype.isVector4=!0,this.x=e,this.y=n,this.z=i,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,s){return this.x=e,this.y=n,this.z=i,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,u=this.w,d=e.elements;return this.x=d[0]*n+d[4]*i+d[8]*s+d[12]*u,this.y=d[1]*n+d[5]*i+d[9]*s+d[13]*u,this.z=d[2]*n+d[6]*i+d[10]*s+d[14]*u,this.w=d[3]*n+d[7]*i+d[11]*s+d[15]*u,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,s,u;const d=e.elements,f=d[0],p=d[4],m=d[8],v=d[1],x=d[5],_=d[9],S=d[2],w=d[6],b=d[10];if(Math.abs(p-v)<.01&&Math.abs(m-S)<.01&&Math.abs(_-w)<.01){if(Math.abs(p+v)<.1&&Math.abs(m+S)<.1&&Math.abs(_+w)<.1&&Math.abs(f+x+b-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const g=(f+1)/2,I=(x+1)/2,L=(b+1)/2,C=(p+v)/4,X=(m+S)/4,k=(_+w)/4;return g>I&&g>L?g<.01?(i=0,s=.707106781,u=.707106781):(i=Math.sqrt(g),s=C/i,u=X/i):I>L?I<.01?(i=.707106781,s=0,u=.707106781):(s=Math.sqrt(I),i=C/s,u=k/s):L<.01?(i=.707106781,s=.707106781,u=0):(u=Math.sqrt(L),i=X/u,s=k/u),this.set(i,s,u,n),this}let y=Math.sqrt((w-_)*(w-_)+(m-S)*(m-S)+(v-p)*(v-p));return Math.abs(y)<.001&&(y=1),this.x=(w-_)/y,this.y=(m-S)/y,this.z=(v-p)/y,this.w=Math.acos((f+x+b-1)/2),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this.w=n[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=nn(this.x,e.x,n.x),this.y=nn(this.y,e.y,n.y),this.z=nn(this.z,e.z,n.z),this.w=nn(this.w,e.w,n.w),this}clampScalar(e,n){return this.x=nn(this.x,e,n),this.y=nn(this.y,e,n),this.z=nn(this.z,e,n),this.w=nn(this.w,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(nn(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class y2 extends ld{constructor(e=1,n=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=n,this.depth=1,this.scissor=new Qn(0,0,e,n),this.scissorTest=!1,this.viewport=new Qn(0,0,e,n);const s={width:e,height:n,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ja,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const u=new gi(s,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);u.flipY=!1,u.generateMipmaps=i.generateMipmaps,u.internalFormat=i.internalFormat,this.textures=[];const d=i.count;for(let f=0;f<d;f++)this.textures[f]=u.clone(),this.textures[f].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let s=0,u=this.textures.length;s<u;s++)this.textures[s].image.width=e,this.textures[s].image.height=n,this.textures[s].image.depth=i;this.dispose()}this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,s=e.textures.length;i<s;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const n=Object.assign({},e.texture.image);return this.texture.source=new V1(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class oc extends y2{constructor(e=1,n=1,i={}){super(e,n,i),this.isWebGLRenderTarget=!0}}class G1 extends gi{constructor(e=null,n=1,i=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=Ha,this.minFilter=Ha,this.wrapR=Qu,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class S2 extends gi{constructor(e=null,n=1,i=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=Ha,this.minFilter=Ha,this.wrapR=Qu,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ip{constructor(e=0,n=0,i=0,s=1){this.isQuaternion=!0,this._x=e,this._y=n,this._z=i,this._w=s}static slerpFlat(e,n,i,s,u,d,f){let p=i[s+0],m=i[s+1],v=i[s+2],x=i[s+3];const _=u[d+0],S=u[d+1],w=u[d+2],b=u[d+3];if(f===0){e[n+0]=p,e[n+1]=m,e[n+2]=v,e[n+3]=x;return}if(f===1){e[n+0]=_,e[n+1]=S,e[n+2]=w,e[n+3]=b;return}if(x!==b||p!==_||m!==S||v!==w){let y=1-f;const g=p*_+m*S+v*w+x*b,I=g>=0?1:-1,L=1-g*g;if(L>Number.EPSILON){const X=Math.sqrt(L),k=Math.atan2(X,g*I);y=Math.sin(y*k)/X,f=Math.sin(f*k)/X}const C=f*I;if(p=p*y+_*C,m=m*y+S*C,v=v*y+w*C,x=x*y+b*C,y===1-f){const X=1/Math.sqrt(p*p+m*m+v*v+x*x);p*=X,m*=X,v*=X,x*=X}}e[n]=p,e[n+1]=m,e[n+2]=v,e[n+3]=x}static multiplyQuaternionsFlat(e,n,i,s,u,d){const f=i[s],p=i[s+1],m=i[s+2],v=i[s+3],x=u[d],_=u[d+1],S=u[d+2],w=u[d+3];return e[n]=f*w+v*x+p*S-m*_,e[n+1]=p*w+v*_+m*x-f*S,e[n+2]=m*w+v*S+f*_-p*x,e[n+3]=v*w-f*x-p*_-m*S,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,s){return this._x=e,this._y=n,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n=!0){const i=e._x,s=e._y,u=e._z,d=e._order,f=Math.cos,p=Math.sin,m=f(i/2),v=f(s/2),x=f(u/2),_=p(i/2),S=p(s/2),w=p(u/2);switch(d){case"XYZ":this._x=_*v*x+m*S*w,this._y=m*S*x-_*v*w,this._z=m*v*w+_*S*x,this._w=m*v*x-_*S*w;break;case"YXZ":this._x=_*v*x+m*S*w,this._y=m*S*x-_*v*w,this._z=m*v*w-_*S*x,this._w=m*v*x+_*S*w;break;case"ZXY":this._x=_*v*x-m*S*w,this._y=m*S*x+_*v*w,this._z=m*v*w+_*S*x,this._w=m*v*x-_*S*w;break;case"ZYX":this._x=_*v*x-m*S*w,this._y=m*S*x+_*v*w,this._z=m*v*w-_*S*x,this._w=m*v*x+_*S*w;break;case"YZX":this._x=_*v*x+m*S*w,this._y=m*S*x+_*v*w,this._z=m*v*w-_*S*x,this._w=m*v*x-_*S*w;break;case"XZY":this._x=_*v*x-m*S*w,this._y=m*S*x-_*v*w,this._z=m*v*w+_*S*x,this._w=m*v*x+_*S*w;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+d)}return n===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,s=Math.sin(i);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],s=n[4],u=n[8],d=n[1],f=n[5],p=n[9],m=n[2],v=n[6],x=n[10],_=i+f+x;if(_>0){const S=.5/Math.sqrt(_+1);this._w=.25/S,this._x=(v-p)*S,this._y=(u-m)*S,this._z=(d-s)*S}else if(i>f&&i>x){const S=2*Math.sqrt(1+i-f-x);this._w=(v-p)/S,this._x=.25*S,this._y=(s+d)/S,this._z=(u+m)/S}else if(f>x){const S=2*Math.sqrt(1+f-i-x);this._w=(u-m)/S,this._x=(s+d)/S,this._y=.25*S,this._z=(p+v)/S}else{const S=2*Math.sqrt(1+x-i-f);this._w=(d-s)/S,this._x=(u+m)/S,this._y=(p+v)/S,this._z=.25*S}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(nn(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const s=Math.min(1,n/i);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,s=e._y,u=e._z,d=e._w,f=n._x,p=n._y,m=n._z,v=n._w;return this._x=i*v+d*f+s*m-u*p,this._y=s*v+d*p+u*f-i*m,this._z=u*v+d*m+i*p-s*f,this._w=d*v-i*f-s*p-u*m,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,s=this._y,u=this._z,d=this._w;let f=d*e._w+i*e._x+s*e._y+u*e._z;if(f<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,f=-f):this.copy(e),f>=1)return this._w=d,this._x=i,this._y=s,this._z=u,this;const p=1-f*f;if(p<=Number.EPSILON){const S=1-n;return this._w=S*d+n*this._w,this._x=S*i+n*this._x,this._y=S*s+n*this._y,this._z=S*u+n*this._z,this.normalize(),this}const m=Math.sqrt(p),v=Math.atan2(m,f),x=Math.sin((1-n)*v)/m,_=Math.sin(n*v)/m;return this._w=d*x+this._w*_,this._x=i*x+this._x*_,this._y=s*x+this._y*_,this._z=u*x+this._z*_,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=2*Math.PI*Math.random(),n=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),u=Math.sqrt(i);return this.set(s*Math.sin(e),s*Math.cos(e),u*Math.sin(n),u*Math.cos(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class De{constructor(e=0,n=0,i=0){De.prototype.isVector3=!0,this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return this.applyQuaternion(rS.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(rS.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,s=this.z,u=e.elements;return this.x=u[0]*n+u[3]*i+u[6]*s,this.y=u[1]*n+u[4]*i+u[7]*s,this.z=u[2]*n+u[5]*i+u[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,u=e.elements,d=1/(u[3]*n+u[7]*i+u[11]*s+u[15]);return this.x=(u[0]*n+u[4]*i+u[8]*s+u[12])*d,this.y=(u[1]*n+u[5]*i+u[9]*s+u[13])*d,this.z=(u[2]*n+u[6]*i+u[10]*s+u[14])*d,this}applyQuaternion(e){const n=this.x,i=this.y,s=this.z,u=e.x,d=e.y,f=e.z,p=e.w,m=2*(d*s-f*i),v=2*(f*n-u*s),x=2*(u*i-d*n);return this.x=n+p*m+d*x-f*v,this.y=i+p*v+f*m-u*x,this.z=s+p*x+u*v-d*m,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,s=this.z,u=e.elements;return this.x=u[0]*n+u[4]*i+u[8]*s,this.y=u[1]*n+u[5]*i+u[9]*s,this.z=u[2]*n+u[6]*i+u[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=nn(this.x,e.x,n.x),this.y=nn(this.y,e.y,n.y),this.z=nn(this.z,e.z,n.z),this}clampScalar(e,n){return this.x=nn(this.x,e,n),this.y=nn(this.y,e,n),this.z=nn(this.z,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(nn(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,s=e.y,u=e.z,d=n.x,f=n.y,p=n.z;return this.x=s*p-u*f,this.y=u*d-i*p,this.z=i*f-s*d,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Yv.copy(this).projectOnVector(e),this.sub(Yv)}reflect(e){return this.sub(Yv.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(nn(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,s=this.z-e.z;return n*n+i*i+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const s=Math.sin(n)*e;return this.x=s*Math.sin(i),this.y=Math.cos(n)*e,this.z=s*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=s,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,n=Math.random()*2-1,i=Math.sqrt(1-n*n);return this.x=i*Math.cos(e),this.y=n,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Yv=new De,rS=new ip;class ap{constructor(e=new De(1/0,1/0,1/0),n=new De(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n+=3)this.expandByPoint(Ua.fromArray(e,n));return this}setFromBufferAttribute(e){this.makeEmpty();for(let n=0,i=e.count;n<i;n++)this.expandByPoint(Ua.fromBufferAttribute(e,n));return this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Ua.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const u=i.getAttribute("position");if(n===!0&&u!==void 0&&e.isInstancedMesh!==!0)for(let d=0,f=u.count;d<f;d++)e.isMesh===!0?e.getVertexPosition(d,Ua):Ua.fromBufferAttribute(u,d),Ua.applyMatrix4(e.matrixWorld),this.expandByPoint(Ua);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Dp.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Dp.copy(i.boundingBox)),Dp.applyMatrix4(e.matrixWorld),this.union(Dp)}const s=e.children;for(let u=0,d=s.length;u<d;u++)this.expandByObject(s[u],n);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Ua),Ua.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Hh),Lp.subVectors(this.max,Hh),Tc.subVectors(e.a,Hh),wc.subVectors(e.b,Hh),bc.subVectors(e.c,Hh),Os.subVectors(wc,Tc),ks.subVectors(bc,wc),Ou.subVectors(Tc,bc);let n=[0,-Os.z,Os.y,0,-ks.z,ks.y,0,-Ou.z,Ou.y,Os.z,0,-Os.x,ks.z,0,-ks.x,Ou.z,0,-Ou.x,-Os.y,Os.x,0,-ks.y,ks.x,0,-Ou.y,Ou.x,0];return!$v(n,Tc,wc,bc,Lp)||(n=[1,0,0,0,1,0,0,0,1],!$v(n,Tc,wc,bc,Lp))?!1:(Up.crossVectors(Os,ks),n=[Up.x,Up.y,Up.z],$v(n,Tc,wc,bc,Lp))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ua).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ua).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(cs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),cs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),cs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),cs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),cs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),cs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),cs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),cs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(cs),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const cs=[new De,new De,new De,new De,new De,new De,new De,new De],Ua=new De,Dp=new ap,Tc=new De,wc=new De,bc=new De,Os=new De,ks=new De,Ou=new De,Hh=new De,Lp=new De,Up=new De,ku=new De;function $v(a,e,n,i,s){for(let u=0,d=a.length-3;u<=d;u+=3){ku.fromArray(a,u);const f=s.x*Math.abs(ku.x)+s.y*Math.abs(ku.y)+s.z*Math.abs(ku.z),p=e.dot(ku),m=n.dot(ku),v=i.dot(ku);if(Math.max(-Math.max(p,m,v),Math.min(p,m,v))>f)return!1}return!0}const M2=new ap,Vh=new De,Kv=new De;class mx{constructor(e=new De,n=-1){this.isSphere=!0,this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):M2.setFromPoints(e).getCenter(i);let s=0;for(let u=0,d=e.length;u<d;u++)s=Math.max(s,i.distanceToSquared(e[u]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Vh.subVectors(e,this.center);const n=Vh.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),s=(i-this.radius)*.5;this.center.addScaledVector(Vh,s/i),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Kv.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Vh.copy(e.center).add(Kv)),this.expandByPoint(Vh.copy(e.center).sub(Kv))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ds=new De,Zv=new De,Ip=new De,zs=new De,Jv=new De,Np=new De,Qv=new De;class E2{constructor(e=new De,n=new De(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ds)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=ds.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(ds.copy(this.origin).addScaledVector(this.direction,n),ds.distanceToSquared(e))}distanceSqToSegment(e,n,i,s){Zv.copy(e).add(n).multiplyScalar(.5),Ip.copy(n).sub(e).normalize(),zs.copy(this.origin).sub(Zv);const u=e.distanceTo(n)*.5,d=-this.direction.dot(Ip),f=zs.dot(this.direction),p=-zs.dot(Ip),m=zs.lengthSq(),v=Math.abs(1-d*d);let x,_,S,w;if(v>0)if(x=d*p-f,_=d*f-p,w=u*v,x>=0)if(_>=-w)if(_<=w){const b=1/v;x*=b,_*=b,S=x*(x+d*_+2*f)+_*(d*x+_+2*p)+m}else _=u,x=Math.max(0,-(d*_+f)),S=-x*x+_*(_+2*p)+m;else _=-u,x=Math.max(0,-(d*_+f)),S=-x*x+_*(_+2*p)+m;else _<=-w?(x=Math.max(0,-(-d*u+f)),_=x>0?-u:Math.min(Math.max(-u,-p),u),S=-x*x+_*(_+2*p)+m):_<=w?(x=0,_=Math.min(Math.max(-u,-p),u),S=_*(_+2*p)+m):(x=Math.max(0,-(d*u+f)),_=x>0?u:Math.min(Math.max(-u,-p),u),S=-x*x+_*(_+2*p)+m);else _=d>0?-u:u,x=Math.max(0,-(d*_+f)),S=-x*x+_*(_+2*p)+m;return i&&i.copy(this.origin).addScaledVector(this.direction,x),s&&s.copy(Zv).addScaledVector(Ip,_),S}intersectSphere(e,n){ds.subVectors(e.center,this.origin);const i=ds.dot(this.direction),s=ds.dot(ds)-i*i,u=e.radius*e.radius;if(s>u)return null;const d=Math.sqrt(u-s),f=i-d,p=i+d;return p<0?null:f<0?this.at(p,n):this.at(f,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,s,u,d,f,p;const m=1/this.direction.x,v=1/this.direction.y,x=1/this.direction.z,_=this.origin;return m>=0?(i=(e.min.x-_.x)*m,s=(e.max.x-_.x)*m):(i=(e.max.x-_.x)*m,s=(e.min.x-_.x)*m),v>=0?(u=(e.min.y-_.y)*v,d=(e.max.y-_.y)*v):(u=(e.max.y-_.y)*v,d=(e.min.y-_.y)*v),i>d||u>s||((u>i||isNaN(i))&&(i=u),(d<s||isNaN(s))&&(s=d),x>=0?(f=(e.min.z-_.z)*x,p=(e.max.z-_.z)*x):(f=(e.max.z-_.z)*x,p=(e.min.z-_.z)*x),i>p||f>s)||((f>i||i!==i)&&(i=f),(p<s||s!==s)&&(s=p),s<0)?null:this.at(i>=0?i:s,n)}intersectsBox(e){return this.intersectBox(e,ds)!==null}intersectTriangle(e,n,i,s,u){Jv.subVectors(n,e),Np.subVectors(i,e),Qv.crossVectors(Jv,Np);let d=this.direction.dot(Qv),f;if(d>0){if(s)return null;f=1}else if(d<0)f=-1,d=-d;else return null;zs.subVectors(this.origin,e);const p=f*this.direction.dot(Np.crossVectors(zs,Np));if(p<0)return null;const m=f*this.direction.dot(Jv.cross(zs));if(m<0||p+m>d)return null;const v=-f*zs.dot(Qv);return v<0?null:this.at(v/d,u)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class rr{constructor(e,n,i,s,u,d,f,p,m,v,x,_,S,w,b,y){rr.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,n,i,s,u,d,f,p,m,v,x,_,S,w,b,y)}set(e,n,i,s,u,d,f,p,m,v,x,_,S,w,b,y){const g=this.elements;return g[0]=e,g[4]=n,g[8]=i,g[12]=s,g[1]=u,g[5]=d,g[9]=f,g[13]=p,g[2]=m,g[6]=v,g[10]=x,g[14]=_,g[3]=S,g[7]=w,g[11]=b,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new rr().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,s=1/Ac.setFromMatrixColumn(e,0).length(),u=1/Ac.setFromMatrixColumn(e,1).length(),d=1/Ac.setFromMatrixColumn(e,2).length();return n[0]=i[0]*s,n[1]=i[1]*s,n[2]=i[2]*s,n[3]=0,n[4]=i[4]*u,n[5]=i[5]*u,n[6]=i[6]*u,n[7]=0,n[8]=i[8]*d,n[9]=i[9]*d,n[10]=i[10]*d,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){const n=this.elements,i=e.x,s=e.y,u=e.z,d=Math.cos(i),f=Math.sin(i),p=Math.cos(s),m=Math.sin(s),v=Math.cos(u),x=Math.sin(u);if(e.order==="XYZ"){const _=d*v,S=d*x,w=f*v,b=f*x;n[0]=p*v,n[4]=-p*x,n[8]=m,n[1]=S+w*m,n[5]=_-b*m,n[9]=-f*p,n[2]=b-_*m,n[6]=w+S*m,n[10]=d*p}else if(e.order==="YXZ"){const _=p*v,S=p*x,w=m*v,b=m*x;n[0]=_+b*f,n[4]=w*f-S,n[8]=d*m,n[1]=d*x,n[5]=d*v,n[9]=-f,n[2]=S*f-w,n[6]=b+_*f,n[10]=d*p}else if(e.order==="ZXY"){const _=p*v,S=p*x,w=m*v,b=m*x;n[0]=_-b*f,n[4]=-d*x,n[8]=w+S*f,n[1]=S+w*f,n[5]=d*v,n[9]=b-_*f,n[2]=-d*m,n[6]=f,n[10]=d*p}else if(e.order==="ZYX"){const _=d*v,S=d*x,w=f*v,b=f*x;n[0]=p*v,n[4]=w*m-S,n[8]=_*m+b,n[1]=p*x,n[5]=b*m+_,n[9]=S*m-w,n[2]=-m,n[6]=f*p,n[10]=d*p}else if(e.order==="YZX"){const _=d*p,S=d*m,w=f*p,b=f*m;n[0]=p*v,n[4]=b-_*x,n[8]=w*x+S,n[1]=x,n[5]=d*v,n[9]=-f*v,n[2]=-m*v,n[6]=S*x+w,n[10]=_-b*x}else if(e.order==="XZY"){const _=d*p,S=d*m,w=f*p,b=f*m;n[0]=p*v,n[4]=-x,n[8]=m*v,n[1]=_*x+b,n[5]=d*v,n[9]=S*x-w,n[2]=w*x-S,n[6]=f*v,n[10]=b*x+_}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(T2,e,w2)}lookAt(e,n,i){const s=this.elements;return Gi.subVectors(e,n),Gi.lengthSq()===0&&(Gi.z=1),Gi.normalize(),Bs.crossVectors(i,Gi),Bs.lengthSq()===0&&(Math.abs(i.z)===1?Gi.x+=1e-4:Gi.z+=1e-4,Gi.normalize(),Bs.crossVectors(i,Gi)),Bs.normalize(),Fp.crossVectors(Gi,Bs),s[0]=Bs.x,s[4]=Fp.x,s[8]=Gi.x,s[1]=Bs.y,s[5]=Fp.y,s[9]=Gi.y,s[2]=Bs.z,s[6]=Fp.z,s[10]=Gi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,u=this.elements,d=i[0],f=i[4],p=i[8],m=i[12],v=i[1],x=i[5],_=i[9],S=i[13],w=i[2],b=i[6],y=i[10],g=i[14],I=i[3],L=i[7],C=i[11],X=i[15],k=s[0],F=s[4],j=s[8],R=s[12],A=s[1],V=s[5],ie=s[9],ee=s[13],se=s[2],he=s[6],oe=s[10],ue=s[14],B=s[3],ae=s[7],re=s[11],U=s[15];return u[0]=d*k+f*A+p*se+m*B,u[4]=d*F+f*V+p*he+m*ae,u[8]=d*j+f*ie+p*oe+m*re,u[12]=d*R+f*ee+p*ue+m*U,u[1]=v*k+x*A+_*se+S*B,u[5]=v*F+x*V+_*he+S*ae,u[9]=v*j+x*ie+_*oe+S*re,u[13]=v*R+x*ee+_*ue+S*U,u[2]=w*k+b*A+y*se+g*B,u[6]=w*F+b*V+y*he+g*ae,u[10]=w*j+b*ie+y*oe+g*re,u[14]=w*R+b*ee+y*ue+g*U,u[3]=I*k+L*A+C*se+X*B,u[7]=I*F+L*V+C*he+X*ae,u[11]=I*j+L*ie+C*oe+X*re,u[15]=I*R+L*ee+C*ue+X*U,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],s=e[8],u=e[12],d=e[1],f=e[5],p=e[9],m=e[13],v=e[2],x=e[6],_=e[10],S=e[14],w=e[3],b=e[7],y=e[11],g=e[15];return w*(+u*p*x-s*m*x-u*f*_+i*m*_+s*f*S-i*p*S)+b*(+n*p*S-n*m*_+u*d*_-s*d*S+s*m*v-u*p*v)+y*(+n*m*x-n*f*S-u*d*x+i*d*S+u*f*v-i*m*v)+g*(-s*f*v-n*p*x+n*f*_+s*d*x-i*d*_+i*p*v)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=n,s[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],u=e[3],d=e[4],f=e[5],p=e[6],m=e[7],v=e[8],x=e[9],_=e[10],S=e[11],w=e[12],b=e[13],y=e[14],g=e[15],I=x*y*m-b*_*m+b*p*S-f*y*S-x*p*g+f*_*g,L=w*_*m-v*y*m-w*p*S+d*y*S+v*p*g-d*_*g,C=v*b*m-w*x*m+w*f*S-d*b*S-v*f*g+d*x*g,X=w*x*p-v*b*p-w*f*_+d*b*_+v*f*y-d*x*y,k=n*I+i*L+s*C+u*X;if(k===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const F=1/k;return e[0]=I*F,e[1]=(b*_*u-x*y*u-b*s*S+i*y*S+x*s*g-i*_*g)*F,e[2]=(f*y*u-b*p*u+b*s*m-i*y*m-f*s*g+i*p*g)*F,e[3]=(x*p*u-f*_*u-x*s*m+i*_*m+f*s*S-i*p*S)*F,e[4]=L*F,e[5]=(v*y*u-w*_*u+w*s*S-n*y*S-v*s*g+n*_*g)*F,e[6]=(w*p*u-d*y*u-w*s*m+n*y*m+d*s*g-n*p*g)*F,e[7]=(d*_*u-v*p*u+v*s*m-n*_*m-d*s*S+n*p*S)*F,e[8]=C*F,e[9]=(w*x*u-v*b*u-w*i*S+n*b*S+v*i*g-n*x*g)*F,e[10]=(d*b*u-w*f*u+w*i*m-n*b*m-d*i*g+n*f*g)*F,e[11]=(v*f*u-d*x*u-v*i*m+n*x*m+d*i*S-n*f*S)*F,e[12]=X*F,e[13]=(v*b*s-w*x*s+w*i*_-n*b*_-v*i*y+n*x*y)*F,e[14]=(w*f*s-d*b*s-w*i*p+n*b*p+d*i*y-n*f*y)*F,e[15]=(d*x*s-v*f*s+v*i*p-n*x*p-d*i*_+n*f*_)*F,this}scale(e){const n=this.elements,i=e.x,s=e.y,u=e.z;return n[0]*=i,n[4]*=s,n[8]*=u,n[1]*=i,n[5]*=s,n[9]*=u,n[2]*=i,n[6]*=s,n[10]*=u,n[3]*=i,n[7]*=s,n[11]*=u,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,s))}makeTranslation(e,n,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),s=Math.sin(n),u=1-i,d=e.x,f=e.y,p=e.z,m=u*d,v=u*f;return this.set(m*d+i,m*f-s*p,m*p+s*f,0,m*f+s*p,v*f+i,v*p-s*d,0,m*p-s*f,v*p+s*d,u*p*p+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,s,u,d){return this.set(1,i,u,0,e,1,d,0,n,s,1,0,0,0,0,1),this}compose(e,n,i){const s=this.elements,u=n._x,d=n._y,f=n._z,p=n._w,m=u+u,v=d+d,x=f+f,_=u*m,S=u*v,w=u*x,b=d*v,y=d*x,g=f*x,I=p*m,L=p*v,C=p*x,X=i.x,k=i.y,F=i.z;return s[0]=(1-(b+g))*X,s[1]=(S+C)*X,s[2]=(w-L)*X,s[3]=0,s[4]=(S-C)*k,s[5]=(1-(_+g))*k,s[6]=(y+I)*k,s[7]=0,s[8]=(w+L)*F,s[9]=(y-I)*F,s[10]=(1-(_+b))*F,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,n,i){const s=this.elements;let u=Ac.set(s[0],s[1],s[2]).length();const d=Ac.set(s[4],s[5],s[6]).length(),f=Ac.set(s[8],s[9],s[10]).length();this.determinant()<0&&(u=-u),e.x=s[12],e.y=s[13],e.z=s[14],Ia.copy(this);const p=1/u,m=1/d,v=1/f;return Ia.elements[0]*=p,Ia.elements[1]*=p,Ia.elements[2]*=p,Ia.elements[4]*=m,Ia.elements[5]*=m,Ia.elements[6]*=m,Ia.elements[8]*=v,Ia.elements[9]*=v,Ia.elements[10]*=v,n.setFromRotationMatrix(Ia),i.x=u,i.y=d,i.z=f,this}makePerspective(e,n,i,s,u,d,f=Ms){const p=this.elements,m=2*u/(n-e),v=2*u/(i-s),x=(n+e)/(n-e),_=(i+s)/(i-s);let S,w;if(f===Ms)S=-(d+u)/(d-u),w=-2*d*u/(d-u);else if(f===xm)S=-d/(d-u),w=-d*u/(d-u);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+f);return p[0]=m,p[4]=0,p[8]=x,p[12]=0,p[1]=0,p[5]=v,p[9]=_,p[13]=0,p[2]=0,p[6]=0,p[10]=S,p[14]=w,p[3]=0,p[7]=0,p[11]=-1,p[15]=0,this}makeOrthographic(e,n,i,s,u,d,f=Ms){const p=this.elements,m=1/(n-e),v=1/(i-s),x=1/(d-u),_=(n+e)*m,S=(i+s)*v;let w,b;if(f===Ms)w=(d+u)*x,b=-2*x;else if(f===xm)w=u*x,b=-1*x;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+f);return p[0]=2*m,p[4]=0,p[8]=0,p[12]=-_,p[1]=0,p[5]=2*v,p[9]=0,p[13]=-S,p[2]=0,p[6]=0,p[10]=b,p[14]=-w,p[3]=0,p[7]=0,p[11]=0,p[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<16;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const Ac=new De,Ia=new rr,T2=new De(0,0,0),w2=new De(1,1,1),Bs=new De,Fp=new De,Gi=new De,iS=new rr,aS=new ip;class Ps{constructor(e=0,n=0,i=0,s=Ps.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,s=this._order){return this._x=e,this._y=n,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const s=e.elements,u=s[0],d=s[4],f=s[8],p=s[1],m=s[5],v=s[9],x=s[2],_=s[6],S=s[10];switch(n){case"XYZ":this._y=Math.asin(nn(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(-v,S),this._z=Math.atan2(-d,u)):(this._x=Math.atan2(_,m),this._z=0);break;case"YXZ":this._x=Math.asin(-nn(v,-1,1)),Math.abs(v)<.9999999?(this._y=Math.atan2(f,S),this._z=Math.atan2(p,m)):(this._y=Math.atan2(-x,u),this._z=0);break;case"ZXY":this._x=Math.asin(nn(_,-1,1)),Math.abs(_)<.9999999?(this._y=Math.atan2(-x,S),this._z=Math.atan2(-d,m)):(this._y=0,this._z=Math.atan2(p,u));break;case"ZYX":this._y=Math.asin(-nn(x,-1,1)),Math.abs(x)<.9999999?(this._x=Math.atan2(_,S),this._z=Math.atan2(p,u)):(this._x=0,this._z=Math.atan2(-d,m));break;case"YZX":this._z=Math.asin(nn(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(-v,m),this._y=Math.atan2(-x,u)):(this._x=0,this._y=Math.atan2(f,S));break;case"XZY":this._z=Math.asin(-nn(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(_,m),this._y=Math.atan2(f,u)):(this._x=Math.atan2(-v,S),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return iS.makeRotationFromQuaternion(e),this.setFromRotationMatrix(iS,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return aS.setFromEuler(this),this.setFromQuaternion(aS,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ps.DEFAULT_ORDER="XYZ";class W1{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let b2=0;const oS=new De,Rc=new ip,fs=new rr,Op=new De,Gh=new De,A2=new De,R2=new ip,sS=new De(1,0,0),lS=new De(0,1,0),uS=new De(0,0,1),cS={type:"added"},C2={type:"removed"},Cc={type:"childadded",child:null},e_={type:"childremoved",child:null};class ji extends ld{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:b2++}),this.uuid=rp(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ji.DEFAULT_UP.clone();const e=new De,n=new Ps,i=new ip,s=new De(1,1,1);function u(){i.setFromEuler(n,!1)}function d(){n.setFromQuaternion(i,void 0,!1)}n._onChange(u),i._onChange(d),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new rr},normalMatrix:{value:new Ht}}),this.matrix=new rr,this.matrixWorld=new rr,this.matrixAutoUpdate=ji.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ji.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new W1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return Rc.setFromAxisAngle(e,n),this.quaternion.multiply(Rc),this}rotateOnWorldAxis(e,n){return Rc.setFromAxisAngle(e,n),this.quaternion.premultiply(Rc),this}rotateX(e){return this.rotateOnAxis(sS,e)}rotateY(e){return this.rotateOnAxis(lS,e)}rotateZ(e){return this.rotateOnAxis(uS,e)}translateOnAxis(e,n){return oS.copy(e).applyQuaternion(this.quaternion),this.position.add(oS.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(sS,e)}translateY(e){return this.translateOnAxis(lS,e)}translateZ(e){return this.translateOnAxis(uS,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(fs.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?Op.copy(e):Op.set(e,n,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Gh.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?fs.lookAt(Gh,Op,this.up):fs.lookAt(Op,Gh,this.up),this.quaternion.setFromRotationMatrix(fs),s&&(fs.extractRotation(s.matrixWorld),Rc.setFromRotationMatrix(fs),this.quaternion.premultiply(Rc.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(cS),Cc.child=e,this.dispatchEvent(Cc),Cc.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(C2),e_.child=e,this.dispatchEvent(e_),e_.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),fs.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),fs.multiply(e.parent.matrixWorld)),e.applyMatrix4(fs),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(cS),Cc.child=e,this.dispatchEvent(Cc),Cc.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,s=this.children.length;i<s;i++){const u=this.children[i].getObjectByProperty(e,n);if(u!==void 0)return u}}getObjectsByProperty(e,n,i=[]){this[e]===n&&i.push(this);const s=this.children;for(let u=0,d=s.length;u<d;u++)s[u].getObjectsByProperty(e,n,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gh,e,A2),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gh,R2,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].updateMatrixWorld(e)}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),n===!0){const s=this.children;for(let u=0,d=s.length;u<d;u++)s[u].updateWorldMatrix(!1,!0)}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(f=>({boxInitialized:f.boxInitialized,boxMin:f.box.min.toArray(),boxMax:f.box.max.toArray(),sphereInitialized:f.sphereInitialized,sphereRadius:f.sphere.radius,sphereCenter:f.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function u(f,p){return f[p.uuid]===void 0&&(f[p.uuid]=p.toJSON(e)),p.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=u(e.geometries,this.geometry);const f=this.geometry.parameters;if(f!==void 0&&f.shapes!==void 0){const p=f.shapes;if(Array.isArray(p))for(let m=0,v=p.length;m<v;m++){const x=p[m];u(e.shapes,x)}else u(e.shapes,p)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(u(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const f=[];for(let p=0,m=this.material.length;p<m;p++)f.push(u(e.materials,this.material[p]));s.material=f}else s.material=u(e.materials,this.material);if(this.children.length>0){s.children=[];for(let f=0;f<this.children.length;f++)s.children.push(this.children[f].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let f=0;f<this.animations.length;f++){const p=this.animations[f];s.animations.push(u(e.animations,p))}}if(n){const f=d(e.geometries),p=d(e.materials),m=d(e.textures),v=d(e.images),x=d(e.shapes),_=d(e.skeletons),S=d(e.animations),w=d(e.nodes);f.length>0&&(i.geometries=f),p.length>0&&(i.materials=p),m.length>0&&(i.textures=m),v.length>0&&(i.images=v),x.length>0&&(i.shapes=x),_.length>0&&(i.skeletons=_),S.length>0&&(i.animations=S),w.length>0&&(i.nodes=w)}return i.object=s,i;function d(f){const p=[];for(const m in f){const v=f[m];delete v.metadata,p.push(v)}return p}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const s=e.children[i];this.add(s.clone())}return this}}ji.DEFAULT_UP=new De(0,1,0);ji.DEFAULT_MATRIX_AUTO_UPDATE=!0;ji.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Na=new De,hs=new De,t_=new De,ps=new De,Pc=new De,Dc=new De,dS=new De,n_=new De,r_=new De,i_=new De,a_=new Qn,o_=new Qn,s_=new Qn;class Oa{constructor(e=new De,n=new De,i=new De){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,s){s.subVectors(i,n),Na.subVectors(e,n),s.cross(Na);const u=s.lengthSq();return u>0?s.multiplyScalar(1/Math.sqrt(u)):s.set(0,0,0)}static getBarycoord(e,n,i,s,u){Na.subVectors(s,n),hs.subVectors(i,n),t_.subVectors(e,n);const d=Na.dot(Na),f=Na.dot(hs),p=Na.dot(t_),m=hs.dot(hs),v=hs.dot(t_),x=d*m-f*f;if(x===0)return u.set(0,0,0),null;const _=1/x,S=(m*p-f*v)*_,w=(d*v-f*p)*_;return u.set(1-S-w,w,S)}static containsPoint(e,n,i,s){return this.getBarycoord(e,n,i,s,ps)===null?!1:ps.x>=0&&ps.y>=0&&ps.x+ps.y<=1}static getInterpolation(e,n,i,s,u,d,f,p){return this.getBarycoord(e,n,i,s,ps)===null?(p.x=0,p.y=0,"z"in p&&(p.z=0),"w"in p&&(p.w=0),null):(p.setScalar(0),p.addScaledVector(u,ps.x),p.addScaledVector(d,ps.y),p.addScaledVector(f,ps.z),p)}static getInterpolatedAttribute(e,n,i,s,u,d){return a_.setScalar(0),o_.setScalar(0),s_.setScalar(0),a_.fromBufferAttribute(e,n),o_.fromBufferAttribute(e,i),s_.fromBufferAttribute(e,s),d.setScalar(0),d.addScaledVector(a_,u.x),d.addScaledVector(o_,u.y),d.addScaledVector(s_,u.z),d}static isFrontFacing(e,n,i,s){return Na.subVectors(i,n),hs.subVectors(e,n),Na.cross(hs).dot(s)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,s){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,n,i,s){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Na.subVectors(this.c,this.b),hs.subVectors(this.a,this.b),Na.cross(hs).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Oa.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return Oa.getBarycoord(e,this.a,this.b,this.c,n)}getInterpolation(e,n,i,s,u){return Oa.getInterpolation(e,this.a,this.b,this.c,n,i,s,u)}containsPoint(e){return Oa.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Oa.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,s=this.b,u=this.c;let d,f;Pc.subVectors(s,i),Dc.subVectors(u,i),n_.subVectors(e,i);const p=Pc.dot(n_),m=Dc.dot(n_);if(p<=0&&m<=0)return n.copy(i);r_.subVectors(e,s);const v=Pc.dot(r_),x=Dc.dot(r_);if(v>=0&&x<=v)return n.copy(s);const _=p*x-v*m;if(_<=0&&p>=0&&v<=0)return d=p/(p-v),n.copy(i).addScaledVector(Pc,d);i_.subVectors(e,u);const S=Pc.dot(i_),w=Dc.dot(i_);if(w>=0&&S<=w)return n.copy(u);const b=S*m-p*w;if(b<=0&&m>=0&&w<=0)return f=m/(m-w),n.copy(i).addScaledVector(Dc,f);const y=v*w-S*x;if(y<=0&&x-v>=0&&S-w>=0)return dS.subVectors(u,s),f=(x-v)/(x-v+(S-w)),n.copy(s).addScaledVector(dS,f);const g=1/(y+b+_);return d=b*g,f=_*g,n.copy(i).addScaledVector(Pc,d).addScaledVector(Dc,f)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const X1={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Hs={h:0,s:0,l:0},kp={h:0,s:0,l:0};function l_(a,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?a+(e-a)*6*n:n<1/2?e:n<2/3?a+(e-a)*6*(2/3-n):a}class An{constructor(e,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,n,i)}set(e,n,i){if(n===void 0&&i===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,n,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=Ki){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,cn.toWorkingColorSpace(this,n),this}setRGB(e,n,i,s=cn.workingColorSpace){return this.r=e,this.g=n,this.b=i,cn.toWorkingColorSpace(this,s),this}setHSL(e,n,i,s=cn.workingColorSpace){if(e=d2(e,1),n=nn(n,0,1),i=nn(i,0,1),n===0)this.r=this.g=this.b=i;else{const u=i<=.5?i*(1+n):i+n-i*n,d=2*i-u;this.r=l_(d,u,e+1/3),this.g=l_(d,u,e),this.b=l_(d,u,e-1/3)}return cn.toWorkingColorSpace(this,s),this}setStyle(e,n=Ki){function i(u){u!==void 0&&parseFloat(u)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let u;const d=s[1],f=s[2];switch(d){case"rgb":case"rgba":if(u=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return i(u[4]),this.setRGB(Math.min(255,parseInt(u[1],10))/255,Math.min(255,parseInt(u[2],10))/255,Math.min(255,parseInt(u[3],10))/255,n);if(u=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return i(u[4]),this.setRGB(Math.min(100,parseInt(u[1],10))/100,Math.min(100,parseInt(u[2],10))/100,Math.min(100,parseInt(u[3],10))/100,n);break;case"hsl":case"hsla":if(u=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return i(u[4]),this.setHSL(parseFloat(u[1])/360,parseFloat(u[2])/100,parseFloat(u[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const u=s[1],d=u.length;if(d===3)return this.setRGB(parseInt(u.charAt(0),16)/15,parseInt(u.charAt(1),16)/15,parseInt(u.charAt(2),16)/15,n);if(d===6)return this.setHex(parseInt(u,16),n);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,n);return this}setColorName(e,n=Ki){const i=X1[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ts(e.r),this.g=Ts(e.g),this.b=Ts(e.b),this}copyLinearToSRGB(e){return this.r=Xc(e.r),this.g=Xc(e.g),this.b=Xc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ki){return cn.fromWorkingColorSpace(Wr.copy(this),e),Math.round(nn(Wr.r*255,0,255))*65536+Math.round(nn(Wr.g*255,0,255))*256+Math.round(nn(Wr.b*255,0,255))}getHexString(e=Ki){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=cn.workingColorSpace){cn.fromWorkingColorSpace(Wr.copy(this),n);const i=Wr.r,s=Wr.g,u=Wr.b,d=Math.max(i,s,u),f=Math.min(i,s,u);let p,m;const v=(f+d)/2;if(f===d)p=0,m=0;else{const x=d-f;switch(m=v<=.5?x/(d+f):x/(2-d-f),d){case i:p=(s-u)/x+(s<u?6:0);break;case s:p=(u-i)/x+2;break;case u:p=(i-s)/x+4;break}p/=6}return e.h=p,e.s=m,e.l=v,e}getRGB(e,n=cn.workingColorSpace){return cn.fromWorkingColorSpace(Wr.copy(this),n),e.r=Wr.r,e.g=Wr.g,e.b=Wr.b,e}getStyle(e=Ki){cn.fromWorkingColorSpace(Wr.copy(this),e);const n=Wr.r,i=Wr.g,s=Wr.b;return e!==Ki?`color(${e} ${n.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(e,n,i){return this.getHSL(Hs),this.setHSL(Hs.h+e,Hs.s+n,Hs.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(Hs),e.getHSL(kp);const i=Xv(Hs.h,kp.h,n),s=Xv(Hs.s,kp.s,n),u=Xv(Hs.l,kp.l,n);return this.setHSL(i,s,u),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const n=this.r,i=this.g,s=this.b,u=e.elements;return this.r=u[0]*n+u[3]*i+u[6]*s,this.g=u[1]*n+u[4]*i+u[7]*s,this.b=u[2]*n+u[5]*i+u[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Wr=new An;An.NAMES=X1;let P2=0;class bm extends ld{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:P2++}),this.uuid=rp(),this.name="",this.type="Material",this.blending=Gc,this.side=Zs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=o0,this.blendDst=s0,this.blendEquation=$u,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new An(0,0,0),this.blendAlpha=0,this.depthFunc=Qc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Zy,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Mc,this.stencilZFail=Mc,this.stencilZPass=Mc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const s=this[n];if(s===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Gc&&(i.blending=this.blending),this.side!==Zs&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==o0&&(i.blendSrc=this.blendSrc),this.blendDst!==s0&&(i.blendDst=this.blendDst),this.blendEquation!==$u&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Qc&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Zy&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Mc&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Mc&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Mc&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(u){const d=[];for(const f in u){const p=u[f];delete p.metadata,d.push(p)}return d}if(n){const u=s(e.textures),d=s(e.images);u.length>0&&(i.textures=u),d.length>0&&(i.images=d)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const s=n.length;i=new Array(s);for(let u=0;u!==s;++u)i[u]=n[u].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class gx extends bm{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new An(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ps,this.combine=R1,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const tr=new De,zp=new Un;class Ka{constructor(e,n,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i,this.usage=Jy,this.updateRanges=[],this.gpuType=Ss,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let s=0,u=this.itemSize;s<u;s++)this.array[e+s]=n.array[i+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)zp.fromBufferAttribute(this,n),zp.applyMatrix3(e),this.setXY(n,zp.x,zp.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)tr.fromBufferAttribute(this,n),tr.applyMatrix3(e),this.setXYZ(n,tr.x,tr.y,tr.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)tr.fromBufferAttribute(this,n),tr.applyMatrix4(e),this.setXYZ(n,tr.x,tr.y,tr.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)tr.fromBufferAttribute(this,n),tr.applyNormalMatrix(e),this.setXYZ(n,tr.x,tr.y,tr.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)tr.fromBufferAttribute(this,n),tr.transformDirection(e),this.setXYZ(n,tr.x,tr.y,tr.z);return this}set(e,n=0){return this.array.set(e,n),this}getComponent(e,n){let i=this.array[e*this.itemSize+n];return this.normalized&&(i=Bh(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=fi(i,this.array)),this.array[e*this.itemSize+n]=i,this}getX(e){let n=this.array[e*this.itemSize];return this.normalized&&(n=Bh(n,this.array)),n}setX(e,n){return this.normalized&&(n=fi(n,this.array)),this.array[e*this.itemSize]=n,this}getY(e){let n=this.array[e*this.itemSize+1];return this.normalized&&(n=Bh(n,this.array)),n}setY(e,n){return this.normalized&&(n=fi(n,this.array)),this.array[e*this.itemSize+1]=n,this}getZ(e){let n=this.array[e*this.itemSize+2];return this.normalized&&(n=Bh(n,this.array)),n}setZ(e,n){return this.normalized&&(n=fi(n,this.array)),this.array[e*this.itemSize+2]=n,this}getW(e){let n=this.array[e*this.itemSize+3];return this.normalized&&(n=Bh(n,this.array)),n}setW(e,n){return this.normalized&&(n=fi(n,this.array)),this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=fi(n,this.array),i=fi(i,this.array)),this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,s){return e*=this.itemSize,this.normalized&&(n=fi(n,this.array),i=fi(i,this.array),s=fi(s,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this}setXYZW(e,n,i,s,u){return e*=this.itemSize,this.normalized&&(n=fi(n,this.array),i=fi(i,this.array),s=fi(s,this.array),u=fi(u,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this.array[e+3]=u,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Jy&&(e.usage=this.usage),e}}class j1 extends Ka{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class q1 extends Ka{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class Za extends Ka{constructor(e,n,i){super(new Float32Array(e),n,i)}}let D2=0;const Yi=new rr,u_=new ji,Lc=new De,Wi=new ap,Wh=new ap,xr=new De;class el extends ld{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:D2++}),this.uuid=rp(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(H1(e)?q1:j1)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const u=new Ht().getNormalMatrix(e);i.applyNormalMatrix(u),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Yi.makeRotationFromQuaternion(e),this.applyMatrix4(Yi),this}rotateX(e){return Yi.makeRotationX(e),this.applyMatrix4(Yi),this}rotateY(e){return Yi.makeRotationY(e),this.applyMatrix4(Yi),this}rotateZ(e){return Yi.makeRotationZ(e),this.applyMatrix4(Yi),this}translate(e,n,i){return Yi.makeTranslation(e,n,i),this.applyMatrix4(Yi),this}scale(e,n,i){return Yi.makeScale(e,n,i),this.applyMatrix4(Yi),this}lookAt(e){return u_.lookAt(e),u_.updateMatrix(),this.applyMatrix4(u_.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Lc).negate(),this.translate(Lc.x,Lc.y,Lc.z),this}setFromPoints(e){const n=this.getAttribute("position");if(n===void 0){const i=[];for(let s=0,u=e.length;s<u;s++){const d=e[s];i.push(d.x,d.y,d.z||0)}this.setAttribute("position",new Za(i,3))}else{const i=Math.min(e.length,n.count);for(let s=0;s<i;s++){const u=e[s];n.setXYZ(s,u.x,u.y,u.z||0)}e.length>n.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),n.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ap);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new De(-1/0,-1/0,-1/0),new De(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,s=n.length;i<s;i++){const u=n[i];Wi.setFromBufferAttribute(u),this.morphTargetsRelative?(xr.addVectors(this.boundingBox.min,Wi.min),this.boundingBox.expandByPoint(xr),xr.addVectors(this.boundingBox.max,Wi.max),this.boundingBox.expandByPoint(xr)):(this.boundingBox.expandByPoint(Wi.min),this.boundingBox.expandByPoint(Wi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new mx);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new De,1/0);return}if(e){const i=this.boundingSphere.center;if(Wi.setFromBufferAttribute(e),n)for(let u=0,d=n.length;u<d;u++){const f=n[u];Wh.setFromBufferAttribute(f),this.morphTargetsRelative?(xr.addVectors(Wi.min,Wh.min),Wi.expandByPoint(xr),xr.addVectors(Wi.max,Wh.max),Wi.expandByPoint(xr)):(Wi.expandByPoint(Wh.min),Wi.expandByPoint(Wh.max))}Wi.getCenter(i);let s=0;for(let u=0,d=e.count;u<d;u++)xr.fromBufferAttribute(e,u),s=Math.max(s,i.distanceToSquared(xr));if(n)for(let u=0,d=n.length;u<d;u++){const f=n[u],p=this.morphTargetsRelative;for(let m=0,v=f.count;m<v;m++)xr.fromBufferAttribute(f,m),p&&(Lc.fromBufferAttribute(e,m),xr.add(Lc)),s=Math.max(s,i.distanceToSquared(xr))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=n.position,s=n.normal,u=n.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ka(new Float32Array(4*i.count),4));const d=this.getAttribute("tangent"),f=[],p=[];for(let j=0;j<i.count;j++)f[j]=new De,p[j]=new De;const m=new De,v=new De,x=new De,_=new Un,S=new Un,w=new Un,b=new De,y=new De;function g(j,R,A){m.fromBufferAttribute(i,j),v.fromBufferAttribute(i,R),x.fromBufferAttribute(i,A),_.fromBufferAttribute(u,j),S.fromBufferAttribute(u,R),w.fromBufferAttribute(u,A),v.sub(m),x.sub(m),S.sub(_),w.sub(_);const V=1/(S.x*w.y-w.x*S.y);isFinite(V)&&(b.copy(v).multiplyScalar(w.y).addScaledVector(x,-S.y).multiplyScalar(V),y.copy(x).multiplyScalar(S.x).addScaledVector(v,-w.x).multiplyScalar(V),f[j].add(b),f[R].add(b),f[A].add(b),p[j].add(y),p[R].add(y),p[A].add(y))}let I=this.groups;I.length===0&&(I=[{start:0,count:e.count}]);for(let j=0,R=I.length;j<R;++j){const A=I[j],V=A.start,ie=A.count;for(let ee=V,se=V+ie;ee<se;ee+=3)g(e.getX(ee+0),e.getX(ee+1),e.getX(ee+2))}const L=new De,C=new De,X=new De,k=new De;function F(j){X.fromBufferAttribute(s,j),k.copy(X);const R=f[j];L.copy(R),L.sub(X.multiplyScalar(X.dot(R))).normalize(),C.crossVectors(k,R);const A=C.dot(p[j])<0?-1:1;d.setXYZW(j,L.x,L.y,L.z,A)}for(let j=0,R=I.length;j<R;++j){const A=I[j],V=A.start,ie=A.count;for(let ee=V,se=V+ie;ee<se;ee+=3)F(e.getX(ee+0)),F(e.getX(ee+1)),F(e.getX(ee+2))}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ka(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let _=0,S=i.count;_<S;_++)i.setXYZ(_,0,0,0);const s=new De,u=new De,d=new De,f=new De,p=new De,m=new De,v=new De,x=new De;if(e)for(let _=0,S=e.count;_<S;_+=3){const w=e.getX(_+0),b=e.getX(_+1),y=e.getX(_+2);s.fromBufferAttribute(n,w),u.fromBufferAttribute(n,b),d.fromBufferAttribute(n,y),v.subVectors(d,u),x.subVectors(s,u),v.cross(x),f.fromBufferAttribute(i,w),p.fromBufferAttribute(i,b),m.fromBufferAttribute(i,y),f.add(v),p.add(v),m.add(v),i.setXYZ(w,f.x,f.y,f.z),i.setXYZ(b,p.x,p.y,p.z),i.setXYZ(y,m.x,m.y,m.z)}else for(let _=0,S=n.count;_<S;_+=3)s.fromBufferAttribute(n,_+0),u.fromBufferAttribute(n,_+1),d.fromBufferAttribute(n,_+2),v.subVectors(d,u),x.subVectors(s,u),v.cross(x),i.setXYZ(_+0,v.x,v.y,v.z),i.setXYZ(_+1,v.x,v.y,v.z),i.setXYZ(_+2,v.x,v.y,v.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)xr.fromBufferAttribute(e,n),xr.normalize(),e.setXYZ(n,xr.x,xr.y,xr.z)}toNonIndexed(){function e(f,p){const m=f.array,v=f.itemSize,x=f.normalized,_=new m.constructor(p.length*v);let S=0,w=0;for(let b=0,y=p.length;b<y;b++){f.isInterleavedBufferAttribute?S=p[b]*f.data.stride+f.offset:S=p[b]*v;for(let g=0;g<v;g++)_[w++]=m[S++]}return new Ka(_,v,x)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new el,i=this.index.array,s=this.attributes;for(const f in s){const p=s[f],m=e(p,i);n.setAttribute(f,m)}const u=this.morphAttributes;for(const f in u){const p=[],m=u[f];for(let v=0,x=m.length;v<x;v++){const _=m[v],S=e(_,i);p.push(S)}n.morphAttributes[f]=p}n.morphTargetsRelative=this.morphTargetsRelative;const d=this.groups;for(let f=0,p=d.length;f<p;f++){const m=d[f];n.addGroup(m.start,m.count,m.materialIndex)}return n}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const p=this.parameters;for(const m in p)p[m]!==void 0&&(e[m]=p[m]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const p in i){const m=i[p];e.data.attributes[p]=m.toJSON(e.data)}const s={};let u=!1;for(const p in this.morphAttributes){const m=this.morphAttributes[p],v=[];for(let x=0,_=m.length;x<_;x++){const S=m[x];v.push(S.toJSON(e.data))}v.length>0&&(s[p]=v,u=!0)}u&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const d=this.groups;d.length>0&&(e.data.groups=JSON.parse(JSON.stringify(d)));const f=this.boundingSphere;return f!==null&&(e.data.boundingSphere={center:f.center.toArray(),radius:f.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(n));const s=e.attributes;for(const m in s){const v=s[m];this.setAttribute(m,v.clone(n))}const u=e.morphAttributes;for(const m in u){const v=[],x=u[m];for(let _=0,S=x.length;_<S;_++)v.push(x[_].clone(n));this.morphAttributes[m]=v}this.morphTargetsRelative=e.morphTargetsRelative;const d=e.groups;for(let m=0,v=d.length;m<v;m++){const x=d[m];this.addGroup(x.start,x.count,x.materialIndex)}const f=e.boundingBox;f!==null&&(this.boundingBox=f.clone());const p=e.boundingSphere;return p!==null&&(this.boundingSphere=p.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const fS=new rr,zu=new E2,Bp=new mx,hS=new De,Hp=new De,Vp=new De,Gp=new De,c_=new De,Wp=new De,pS=new De,Xp=new De;class qa extends ji{constructor(e=new el,n=new gx){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,u=i.length;s<u;s++){const d=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[d]=s}}}}getVertexPosition(e,n){const i=this.geometry,s=i.attributes.position,u=i.morphAttributes.position,d=i.morphTargetsRelative;n.fromBufferAttribute(s,e);const f=this.morphTargetInfluences;if(u&&f){Wp.set(0,0,0);for(let p=0,m=u.length;p<m;p++){const v=f[p],x=u[p];v!==0&&(c_.fromBufferAttribute(x,e),d?Wp.addScaledVector(c_,v):Wp.addScaledVector(c_.sub(n),v))}n.add(Wp)}return n}raycast(e,n){const i=this.geometry,s=this.material,u=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Bp.copy(i.boundingSphere),Bp.applyMatrix4(u),zu.copy(e.ray).recast(e.near),!(Bp.containsPoint(zu.origin)===!1&&(zu.intersectSphere(Bp,hS)===null||zu.origin.distanceToSquared(hS)>(e.far-e.near)**2))&&(fS.copy(u).invert(),zu.copy(e.ray).applyMatrix4(fS),!(i.boundingBox!==null&&zu.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,n,zu)))}_computeIntersections(e,n,i){let s;const u=this.geometry,d=this.material,f=u.index,p=u.attributes.position,m=u.attributes.uv,v=u.attributes.uv1,x=u.attributes.normal,_=u.groups,S=u.drawRange;if(f!==null)if(Array.isArray(d))for(let w=0,b=_.length;w<b;w++){const y=_[w],g=d[y.materialIndex],I=Math.max(y.start,S.start),L=Math.min(f.count,Math.min(y.start+y.count,S.start+S.count));for(let C=I,X=L;C<X;C+=3){const k=f.getX(C),F=f.getX(C+1),j=f.getX(C+2);s=jp(this,g,e,i,m,v,x,k,F,j),s&&(s.faceIndex=Math.floor(C/3),s.face.materialIndex=y.materialIndex,n.push(s))}}else{const w=Math.max(0,S.start),b=Math.min(f.count,S.start+S.count);for(let y=w,g=b;y<g;y+=3){const I=f.getX(y),L=f.getX(y+1),C=f.getX(y+2);s=jp(this,d,e,i,m,v,x,I,L,C),s&&(s.faceIndex=Math.floor(y/3),n.push(s))}}else if(p!==void 0)if(Array.isArray(d))for(let w=0,b=_.length;w<b;w++){const y=_[w],g=d[y.materialIndex],I=Math.max(y.start,S.start),L=Math.min(p.count,Math.min(y.start+y.count,S.start+S.count));for(let C=I,X=L;C<X;C+=3){const k=C,F=C+1,j=C+2;s=jp(this,g,e,i,m,v,x,k,F,j),s&&(s.faceIndex=Math.floor(C/3),s.face.materialIndex=y.materialIndex,n.push(s))}}else{const w=Math.max(0,S.start),b=Math.min(p.count,S.start+S.count);for(let y=w,g=b;y<g;y+=3){const I=y,L=y+1,C=y+2;s=jp(this,d,e,i,m,v,x,I,L,C),s&&(s.faceIndex=Math.floor(y/3),n.push(s))}}}}function L2(a,e,n,i,s,u,d,f){let p;if(e.side===mi?p=i.intersectTriangle(d,u,s,!0,f):p=i.intersectTriangle(s,u,d,e.side===Zs,f),p===null)return null;Xp.copy(f),Xp.applyMatrix4(a.matrixWorld);const m=n.ray.origin.distanceTo(Xp);return m<n.near||m>n.far?null:{distance:m,point:Xp.clone(),object:a}}function jp(a,e,n,i,s,u,d,f,p,m){a.getVertexPosition(f,Hp),a.getVertexPosition(p,Vp),a.getVertexPosition(m,Gp);const v=L2(a,e,n,i,Hp,Vp,Gp,pS);if(v){const x=new De;Oa.getBarycoord(pS,Hp,Vp,Gp,x),s&&(v.uv=Oa.getInterpolatedAttribute(s,f,p,m,x,new Un)),u&&(v.uv1=Oa.getInterpolatedAttribute(u,f,p,m,x,new Un)),d&&(v.normal=Oa.getInterpolatedAttribute(d,f,p,m,x,new De),v.normal.dot(i.direction)>0&&v.normal.multiplyScalar(-1));const _={a:f,b:p,c:m,normal:new De,materialIndex:0};Oa.getNormal(Hp,Vp,Gp,_.normal),v.face=_,v.barycoord=x}return v}class op extends el{constructor(e=1,n=1,i=1,s=1,u=1,d=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:s,heightSegments:u,depthSegments:d};const f=this;s=Math.floor(s),u=Math.floor(u),d=Math.floor(d);const p=[],m=[],v=[],x=[];let _=0,S=0;w("z","y","x",-1,-1,i,n,e,d,u,0),w("z","y","x",1,-1,i,n,-e,d,u,1),w("x","z","y",1,1,e,i,n,s,d,2),w("x","z","y",1,-1,e,i,-n,s,d,3),w("x","y","z",1,-1,e,n,i,s,u,4),w("x","y","z",-1,-1,e,n,-i,s,u,5),this.setIndex(p),this.setAttribute("position",new Za(m,3)),this.setAttribute("normal",new Za(v,3)),this.setAttribute("uv",new Za(x,2));function w(b,y,g,I,L,C,X,k,F,j,R){const A=C/F,V=X/j,ie=C/2,ee=X/2,se=k/2,he=F+1,oe=j+1;let ue=0,B=0;const ae=new De;for(let re=0;re<oe;re++){const U=re*V-ee;for(let te=0;te<he;te++){const Ue=te*A-ie;ae[b]=Ue*I,ae[y]=U*L,ae[g]=se,m.push(ae.x,ae.y,ae.z),ae[b]=0,ae[y]=0,ae[g]=k>0?1:-1,v.push(ae.x,ae.y,ae.z),x.push(te/F),x.push(1-re/j),ue+=1}}for(let re=0;re<j;re++)for(let U=0;U<F;U++){const te=_+U+he*re,Ue=_+U+he*(re+1),K=_+(U+1)+he*(re+1),le=_+(U+1)+he*re;p.push(te,Ue,le),p.push(Ue,K,le),B+=6}f.addGroup(S,B,R),S+=B,_+=ue}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new op(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ad(a){const e={};for(const n in a){e[n]={};for(const i in a[n]){const s=a[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function li(a){const e={};for(let n=0;n<a.length;n++){const i=ad(a[n]);for(const s in i)e[s]=i[s]}return e}function U2(a){const e=[];for(let n=0;n<a.length;n++)e.push(a[n].clone());return e}function Y1(a){const e=a.getRenderTarget();return e===null?a.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:cn.workingColorSpace}const I2={clone:ad,merge:li};var N2=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,F2=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Js extends bm{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=N2,this.fragmentShader=F2,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ad(e.uniforms),this.uniformsGroups=U2(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const s in this.uniforms){const u=this.uniforms[s].value;u&&u.isTexture?n.uniforms[s]={type:"t",value:u.toJSON(e).uuid}:u&&u.isColor?n.uniforms[s]={type:"c",value:u.getHex()}:u&&u.isVector2?n.uniforms[s]={type:"v2",value:u.toArray()}:u&&u.isVector3?n.uniforms[s]={type:"v3",value:u.toArray()}:u&&u.isVector4?n.uniforms[s]={type:"v4",value:u.toArray()}:u&&u.isMatrix3?n.uniforms[s]={type:"m3",value:u.toArray()}:u&&u.isMatrix4?n.uniforms[s]={type:"m4",value:u.toArray()}:n.uniforms[s]={value:u}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}class $1 extends ji{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new rr,this.projectionMatrix=new rr,this.projectionMatrixInverse=new rr,this.coordinateSystem=Ms}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Vs=new De,mS=new Un,gS=new Un;class Ji extends $1{constructor(e=50,n=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=X0*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Wv*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return X0*2*Math.atan(Math.tan(Wv*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,n,i){Vs.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Vs.x,Vs.y).multiplyScalar(-e/Vs.z),Vs.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Vs.x,Vs.y).multiplyScalar(-e/Vs.z)}getViewSize(e,n){return this.getViewBounds(e,mS,gS),n.subVectors(gS,mS)}setViewOffset(e,n,i,s,u,d){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=u,this.view.height=d,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(Wv*.5*this.fov)/this.zoom,i=2*n,s=this.aspect*i,u=-.5*s;const d=this.view;if(this.view!==null&&this.view.enabled){const p=d.fullWidth,m=d.fullHeight;u+=d.offsetX*s/p,n-=d.offsetY*i/m,s*=d.width/p,i*=d.height/m}const f=this.filmOffset;f!==0&&(u+=e*f/this.getFilmWidth()),this.projectionMatrix.makePerspective(u,u+s,n,n-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}const Uc=-90,Ic=1;class O2 extends ji{constructor(e,n,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new Ji(Uc,Ic,e,n);s.layers=this.layers,this.add(s);const u=new Ji(Uc,Ic,e,n);u.layers=this.layers,this.add(u);const d=new Ji(Uc,Ic,e,n);d.layers=this.layers,this.add(d);const f=new Ji(Uc,Ic,e,n);f.layers=this.layers,this.add(f);const p=new Ji(Uc,Ic,e,n);p.layers=this.layers,this.add(p);const m=new Ji(Uc,Ic,e,n);m.layers=this.layers,this.add(m)}updateCoordinateSystem(){const e=this.coordinateSystem,n=this.children.concat(),[i,s,u,d,f,p]=n;for(const m of n)this.remove(m);if(e===Ms)i.up.set(0,1,0),i.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),u.up.set(0,0,-1),u.lookAt(0,1,0),d.up.set(0,0,1),d.lookAt(0,-1,0),f.up.set(0,1,0),f.lookAt(0,0,1),p.up.set(0,1,0),p.lookAt(0,0,-1);else if(e===xm)i.up.set(0,-1,0),i.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),u.up.set(0,0,1),u.lookAt(0,1,0),d.up.set(0,0,-1),d.lookAt(0,-1,0),f.up.set(0,-1,0),f.lookAt(0,0,1),p.up.set(0,-1,0),p.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const m of n)this.add(m),m.updateMatrixWorld()}update(e,n){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[u,d,f,p,m,v]=this.children,x=e.getRenderTarget(),_=e.getActiveCubeFace(),S=e.getActiveMipmapLevel(),w=e.xr.enabled;e.xr.enabled=!1;const b=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,s),e.render(n,u),e.setRenderTarget(i,1,s),e.render(n,d),e.setRenderTarget(i,2,s),e.render(n,f),e.setRenderTarget(i,3,s),e.render(n,p),e.setRenderTarget(i,4,s),e.render(n,m),i.texture.generateMipmaps=b,e.setRenderTarget(i,5,s),e.render(n,v),e.setRenderTarget(x,_,S),e.xr.enabled=w,i.texture.needsPMREMUpdate=!0}}class K1 extends gi{constructor(e,n,i,s,u,d,f,p,m,v){e=e!==void 0?e:[],n=n!==void 0?n:ed,super(e,n,i,s,u,d,f,p,m,v),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class k2 extends oc{constructor(e=1,n={}){super(e,e,n),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},s=[i,i,i,i,i,i];this.texture=new K1(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:ja}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new op(5,5,5),u=new Js({name:"CubemapFromEquirect",uniforms:ad(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:mi,blending:qs});u.uniforms.tEquirect.value=n;const d=new qa(s,u),f=n.minFilter;return n.minFilter===ec&&(n.minFilter=ja),new O2(1,10,this).update(e,d),n.minFilter=f,d.geometry.dispose(),d.material.dispose(),this}clear(e,n,i,s){const u=e.getRenderTarget();for(let d=0;d<6;d++)e.setRenderTarget(this,d),e.clear(n,i,s);e.setRenderTarget(u)}}class z2 extends ji{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ps,this.environmentIntensity=1,this.environmentRotation=new Ps,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(n.object.environmentIntensity=this.environmentIntensity),n.object.environmentRotation=this.environmentRotation.toArray(),n}}const d_=new De,B2=new De,H2=new Ht;class Xu{constructor(e=new De(1,0,0),n=0){this.isPlane=!0,this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,s){return this.normal.set(e,n,i),this.constant=s,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const s=d_.subVectors(i,n).cross(B2.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,n){const i=e.delta(d_),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const u=-(e.start.dot(this.normal)+this.constant)/s;return u<0||u>1?null:n.copy(e.start).addScaledVector(i,u)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||H2.getNormalMatrix(e),s=this.coplanarPoint(d_).applyMatrix4(e),u=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(u),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Bu=new mx,qp=new De;class Z1{constructor(e=new Xu,n=new Xu,i=new Xu,s=new Xu,u=new Xu,d=new Xu){this.planes=[e,n,i,s,u,d]}set(e,n,i,s,u,d){const f=this.planes;return f[0].copy(e),f[1].copy(n),f[2].copy(i),f[3].copy(s),f[4].copy(u),f[5].copy(d),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,n=Ms){const i=this.planes,s=e.elements,u=s[0],d=s[1],f=s[2],p=s[3],m=s[4],v=s[5],x=s[6],_=s[7],S=s[8],w=s[9],b=s[10],y=s[11],g=s[12],I=s[13],L=s[14],C=s[15];if(i[0].setComponents(p-u,_-m,y-S,C-g).normalize(),i[1].setComponents(p+u,_+m,y+S,C+g).normalize(),i[2].setComponents(p+d,_+v,y+w,C+I).normalize(),i[3].setComponents(p-d,_-v,y-w,C-I).normalize(),i[4].setComponents(p-f,_-x,y-b,C-L).normalize(),n===Ms)i[5].setComponents(p+f,_+x,y+b,C+L).normalize();else if(n===xm)i[5].setComponents(f,x,b,L).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+n);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Bu.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const n=e.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),Bu.copy(n.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Bu)}intersectsSprite(e){return Bu.center.set(0,0,0),Bu.radius=.7071067811865476,Bu.applyMatrix4(e.matrixWorld),this.intersectsSphere(Bu)}intersectsSphere(e){const n=this.planes,i=e.center,s=-e.radius;for(let u=0;u<6;u++)if(n[u].distanceToPoint(i)<s)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const s=n[i];if(qp.x=s.normal.x>0?e.max.x:e.min.x,qp.y=s.normal.y>0?e.max.y:e.min.y,qp.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(qp)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class qh extends ji{constructor(){super(),this.isGroup=!0,this.type="Group"}}class J1 extends gi{constructor(e,n,i,s,u,d,f,p,m,v=Wc){if(v!==Wc&&v!==rd)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&v===Wc&&(i=ac),i===void 0&&v===rd&&(i=nd),super(null,s,u,d,f,p,v,i,m),this.isDepthTexture=!0,this.image={width:e,height:n},this.magFilter=f!==void 0?f:Ha,this.minFilter=p!==void 0?p:Ha,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const n=super.toJSON(e);return this.compareFunction!==null&&(n.compareFunction=this.compareFunction),n}}class Am extends el{constructor(e=1,n=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:s};const u=e/2,d=n/2,f=Math.floor(i),p=Math.floor(s),m=f+1,v=p+1,x=e/f,_=n/p,S=[],w=[],b=[],y=[];for(let g=0;g<v;g++){const I=g*_-d;for(let L=0;L<m;L++){const C=L*x-u;w.push(C,-I,0),b.push(0,0,1),y.push(L/f),y.push(1-g/p)}}for(let g=0;g<p;g++)for(let I=0;I<f;I++){const L=I+m*g,C=I+m*(g+1),X=I+1+m*(g+1),k=I+1+m*g;S.push(L,C,k),S.push(C,X,k)}this.setIndex(S),this.setAttribute("position",new Za(w,3)),this.setAttribute("normal",new Za(b,3)),this.setAttribute("uv",new Za(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Am(e.width,e.height,e.widthSegments,e.heightSegments)}}class vx extends el{constructor(e=1,n=32,i=16,s=0,u=Math.PI*2,d=0,f=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:s,phiLength:u,thetaStart:d,thetaLength:f},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const p=Math.min(d+f,Math.PI);let m=0;const v=[],x=new De,_=new De,S=[],w=[],b=[],y=[];for(let g=0;g<=i;g++){const I=[],L=g/i;let C=0;g===0&&d===0?C=.5/n:g===i&&p===Math.PI&&(C=-.5/n);for(let X=0;X<=n;X++){const k=X/n;x.x=-e*Math.cos(s+k*u)*Math.sin(d+L*f),x.y=e*Math.cos(d+L*f),x.z=e*Math.sin(s+k*u)*Math.sin(d+L*f),w.push(x.x,x.y,x.z),_.copy(x).normalize(),b.push(_.x,_.y,_.z),y.push(k+C,1-L),I.push(m++)}v.push(I)}for(let g=0;g<i;g++)for(let I=0;I<n;I++){const L=v[g][I+1],C=v[g][I],X=v[g+1][I],k=v[g+1][I+1];(g!==0||d>0)&&S.push(L,C,k),(g!==i-1||p<Math.PI)&&S.push(C,X,k)}this.setIndex(S),this.setAttribute("position",new Za(w,3)),this.setAttribute("normal",new Za(b,3)),this.setAttribute("uv",new Za(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vx(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class V2 extends bm{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=e2,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class G2 extends bm{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class W2 extends $1{constructor(e=-1,n=1,i=1,s=-1,u=.1,d=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=s,this.near=u,this.far=d,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,s,u,d){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=u,this.view.height=d,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let u=i-e,d=i+e,f=s+n,p=s-n;if(this.view!==null&&this.view.enabled){const m=(this.right-this.left)/this.view.fullWidth/this.zoom,v=(this.top-this.bottom)/this.view.fullHeight/this.zoom;u+=m*this.view.offsetX,d=u+m*this.view.width,f-=v*this.view.offsetY,p=f-v*this.view.height}this.projectionMatrix.makeOrthographic(u,d,f,p,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}class X2 extends Ji{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}function vS(a,e,n,i){const s=j2(i);switch(n){case U1:return a*e;case N1:return a*e;case F1:return a*e*2;case O1:return a*e/s.components*s.byteLength;case fx:return a*e/s.components*s.byteLength;case k1:return a*e*2/s.components*s.byteLength;case hx:return a*e*2/s.components*s.byteLength;case I1:return a*e*3/s.components*s.byteLength;case za:return a*e*4/s.components*s.byteLength;case px:return a*e*4/s.components*s.byteLength;case am:case om:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*8;case sm:case lm:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*16;case y0:case M0:return Math.max(a,16)*Math.max(e,8)/4;case x0:case S0:return Math.max(a,8)*Math.max(e,8)/2;case E0:case T0:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*8;case w0:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*16;case b0:return Math.floor((a+3)/4)*Math.floor((e+3)/4)*16;case A0:return Math.floor((a+4)/5)*Math.floor((e+3)/4)*16;case R0:return Math.floor((a+4)/5)*Math.floor((e+4)/5)*16;case C0:return Math.floor((a+5)/6)*Math.floor((e+4)/5)*16;case P0:return Math.floor((a+5)/6)*Math.floor((e+5)/6)*16;case D0:return Math.floor((a+7)/8)*Math.floor((e+4)/5)*16;case L0:return Math.floor((a+7)/8)*Math.floor((e+5)/6)*16;case U0:return Math.floor((a+7)/8)*Math.floor((e+7)/8)*16;case I0:return Math.floor((a+9)/10)*Math.floor((e+4)/5)*16;case N0:return Math.floor((a+9)/10)*Math.floor((e+5)/6)*16;case F0:return Math.floor((a+9)/10)*Math.floor((e+7)/8)*16;case O0:return Math.floor((a+9)/10)*Math.floor((e+9)/10)*16;case k0:return Math.floor((a+11)/12)*Math.floor((e+9)/10)*16;case z0:return Math.floor((a+11)/12)*Math.floor((e+11)/12)*16;case um:case B0:case H0:return Math.ceil(a/4)*Math.ceil(e/4)*16;case z1:case V0:return Math.ceil(a/4)*Math.ceil(e/4)*8;case G0:case W0:return Math.ceil(a/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}function j2(a){switch(a){case Cs:case P1:return{byteLength:1,components:1};case Kh:case D1:case np:return{byteLength:2,components:1};case cx:case dx:return{byteLength:2,components:4};case ac:case ux:case Ss:return{byteLength:4,components:1};case L1:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${a}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:lx}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=lx);/**
* @license
* Copyright 2010-2024 Three.js Authors
* SPDX-License-Identifier: MIT
*/function Q1(){let a=null,e=!1,n=null,i=null;function s(u,d){n(u,d),i=a.requestAnimationFrame(s)}return{start:function(){e!==!0&&n!==null&&(i=a.requestAnimationFrame(s),e=!0)},stop:function(){a.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(u){n=u},setContext:function(u){a=u}}}function q2(a){const e=new WeakMap;function n(f,p){const m=f.array,v=f.usage,x=m.byteLength,_=a.createBuffer();a.bindBuffer(p,_),a.bufferData(p,m,v),f.onUploadCallback();let S;if(m instanceof Float32Array)S=a.FLOAT;else if(m instanceof Uint16Array)f.isFloat16BufferAttribute?S=a.HALF_FLOAT:S=a.UNSIGNED_SHORT;else if(m instanceof Int16Array)S=a.SHORT;else if(m instanceof Uint32Array)S=a.UNSIGNED_INT;else if(m instanceof Int32Array)S=a.INT;else if(m instanceof Int8Array)S=a.BYTE;else if(m instanceof Uint8Array)S=a.UNSIGNED_BYTE;else if(m instanceof Uint8ClampedArray)S=a.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:_,type:S,bytesPerElement:m.BYTES_PER_ELEMENT,version:f.version,size:x}}function i(f,p,m){const v=p.array,x=p.updateRanges;if(a.bindBuffer(m,f),x.length===0)a.bufferSubData(m,0,v);else{x.sort((S,w)=>S.start-w.start);let _=0;for(let S=1;S<x.length;S++){const w=x[_],b=x[S];b.start<=w.start+w.count+1?w.count=Math.max(w.count,b.start+b.count-w.start):(++_,x[_]=b)}x.length=_+1;for(let S=0,w=x.length;S<w;S++){const b=x[S];a.bufferSubData(m,b.start*v.BYTES_PER_ELEMENT,v,b.start,b.count)}p.clearUpdateRanges()}p.onUploadCallback()}function s(f){return f.isInterleavedBufferAttribute&&(f=f.data),e.get(f)}function u(f){f.isInterleavedBufferAttribute&&(f=f.data);const p=e.get(f);p&&(a.deleteBuffer(p.buffer),e.delete(f))}function d(f,p){if(f.isInterleavedBufferAttribute&&(f=f.data),f.isGLBufferAttribute){const v=e.get(f);(!v||v.version<f.version)&&e.set(f,{buffer:f.buffer,type:f.type,bytesPerElement:f.elementSize,version:f.version});return}const m=e.get(f);if(m===void 0)e.set(f,n(f,p));else if(m.version<f.version){if(m.size!==f.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(m.buffer,f,p),m.version=f.version}}return{get:s,remove:u,update:d}}var Y2=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,$2=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,K2=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Z2=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,J2=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Q2=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,e3=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,t3=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,n3=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,r3=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,i3=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,a3=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,o3=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,s3=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,l3=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,u3=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,c3=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,d3=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,f3=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,h3=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,p3=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,m3=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,g3=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,v3=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,_3=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,x3=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,y3=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,S3=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,M3=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,E3=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,T3="gl_FragColor = linearToOutputTexel( gl_FragColor );",w3=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,b3=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,A3=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,R3=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,C3=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,P3=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,D3=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,L3=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,U3=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,I3=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,N3=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,F3=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,O3=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,k3=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,z3=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,B3=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,H3=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,V3=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,G3=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,W3=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,X3=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,j3=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,q3=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Y3=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,$3=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,K3=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Z3=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,J3=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Q3=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,eP=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,tP=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,nP=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,rP=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,iP=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,aP=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,oP=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,sP=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,lP=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,uP=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,cP=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,dP=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,fP=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,hP=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,pP=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,mP=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,gP=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,vP=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,_P=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,xP=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,yP=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,SP=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,MP=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,EP=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,TP=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,wP=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,bP=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,AP=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,RP=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,CP=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,PP=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,DP=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,LP=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,UP=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,IP=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,NP=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,FP=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,OP=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,kP=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,zP=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,BP=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,HP=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,VP=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,GP=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,WP=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,XP=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,jP=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const qP=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,YP=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,$P=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,KP=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ZP=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,JP=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,QP=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,eD=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,tD=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,nD=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,rD=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,iD=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,aD=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,oD=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,sD=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,lD=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uD=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cD=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dD=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,fD=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hD=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,pD=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,mD=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gD=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vD=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,_D=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xD=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,yD=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,SD=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,MD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ED=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,TD=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,wD=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,bD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Gt={alphahash_fragment:Y2,alphahash_pars_fragment:$2,alphamap_fragment:K2,alphamap_pars_fragment:Z2,alphatest_fragment:J2,alphatest_pars_fragment:Q2,aomap_fragment:e3,aomap_pars_fragment:t3,batching_pars_vertex:n3,batching_vertex:r3,begin_vertex:i3,beginnormal_vertex:a3,bsdfs:o3,iridescence_fragment:s3,bumpmap_pars_fragment:l3,clipping_planes_fragment:u3,clipping_planes_pars_fragment:c3,clipping_planes_pars_vertex:d3,clipping_planes_vertex:f3,color_fragment:h3,color_pars_fragment:p3,color_pars_vertex:m3,color_vertex:g3,common:v3,cube_uv_reflection_fragment:_3,defaultnormal_vertex:x3,displacementmap_pars_vertex:y3,displacementmap_vertex:S3,emissivemap_fragment:M3,emissivemap_pars_fragment:E3,colorspace_fragment:T3,colorspace_pars_fragment:w3,envmap_fragment:b3,envmap_common_pars_fragment:A3,envmap_pars_fragment:R3,envmap_pars_vertex:C3,envmap_physical_pars_fragment:B3,envmap_vertex:P3,fog_vertex:D3,fog_pars_vertex:L3,fog_fragment:U3,fog_pars_fragment:I3,gradientmap_pars_fragment:N3,lightmap_pars_fragment:F3,lights_lambert_fragment:O3,lights_lambert_pars_fragment:k3,lights_pars_begin:z3,lights_toon_fragment:H3,lights_toon_pars_fragment:V3,lights_phong_fragment:G3,lights_phong_pars_fragment:W3,lights_physical_fragment:X3,lights_physical_pars_fragment:j3,lights_fragment_begin:q3,lights_fragment_maps:Y3,lights_fragment_end:$3,logdepthbuf_fragment:K3,logdepthbuf_pars_fragment:Z3,logdepthbuf_pars_vertex:J3,logdepthbuf_vertex:Q3,map_fragment:eP,map_pars_fragment:tP,map_particle_fragment:nP,map_particle_pars_fragment:rP,metalnessmap_fragment:iP,metalnessmap_pars_fragment:aP,morphinstance_vertex:oP,morphcolor_vertex:sP,morphnormal_vertex:lP,morphtarget_pars_vertex:uP,morphtarget_vertex:cP,normal_fragment_begin:dP,normal_fragment_maps:fP,normal_pars_fragment:hP,normal_pars_vertex:pP,normal_vertex:mP,normalmap_pars_fragment:gP,clearcoat_normal_fragment_begin:vP,clearcoat_normal_fragment_maps:_P,clearcoat_pars_fragment:xP,iridescence_pars_fragment:yP,opaque_fragment:SP,packing:MP,premultiplied_alpha_fragment:EP,project_vertex:TP,dithering_fragment:wP,dithering_pars_fragment:bP,roughnessmap_fragment:AP,roughnessmap_pars_fragment:RP,shadowmap_pars_fragment:CP,shadowmap_pars_vertex:PP,shadowmap_vertex:DP,shadowmask_pars_fragment:LP,skinbase_vertex:UP,skinning_pars_vertex:IP,skinning_vertex:NP,skinnormal_vertex:FP,specularmap_fragment:OP,specularmap_pars_fragment:kP,tonemapping_fragment:zP,tonemapping_pars_fragment:BP,transmission_fragment:HP,transmission_pars_fragment:VP,uv_pars_fragment:GP,uv_pars_vertex:WP,uv_vertex:XP,worldpos_vertex:jP,background_vert:qP,background_frag:YP,backgroundCube_vert:$P,backgroundCube_frag:KP,cube_vert:ZP,cube_frag:JP,depth_vert:QP,depth_frag:eD,distanceRGBA_vert:tD,distanceRGBA_frag:nD,equirect_vert:rD,equirect_frag:iD,linedashed_vert:aD,linedashed_frag:oD,meshbasic_vert:sD,meshbasic_frag:lD,meshlambert_vert:uD,meshlambert_frag:cD,meshmatcap_vert:dD,meshmatcap_frag:fD,meshnormal_vert:hD,meshnormal_frag:pD,meshphong_vert:mD,meshphong_frag:gD,meshphysical_vert:vD,meshphysical_frag:_D,meshtoon_vert:xD,meshtoon_frag:yD,points_vert:SD,points_frag:MD,shadow_vert:ED,shadow_frag:TD,sprite_vert:wD,sprite_frag:bD},dt={common:{diffuse:{value:new An(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ht},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ht}},envmap:{envMap:{value:null},envMapRotation:{value:new Ht},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ht}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ht}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ht},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ht},normalScale:{value:new Un(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ht},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ht}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ht}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ht}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new An(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new An(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0},uvTransform:{value:new Ht}},sprite:{diffuse:{value:new An(16777215)},opacity:{value:1},center:{value:new Un(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ht},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0}}},Ga={basic:{uniforms:li([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.fog]),vertexShader:Gt.meshbasic_vert,fragmentShader:Gt.meshbasic_frag},lambert:{uniforms:li([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,dt.lights,{emissive:{value:new An(0)}}]),vertexShader:Gt.meshlambert_vert,fragmentShader:Gt.meshlambert_frag},phong:{uniforms:li([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,dt.lights,{emissive:{value:new An(0)},specular:{value:new An(1118481)},shininess:{value:30}}]),vertexShader:Gt.meshphong_vert,fragmentShader:Gt.meshphong_frag},standard:{uniforms:li([dt.common,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.roughnessmap,dt.metalnessmap,dt.fog,dt.lights,{emissive:{value:new An(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Gt.meshphysical_vert,fragmentShader:Gt.meshphysical_frag},toon:{uniforms:li([dt.common,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.gradientmap,dt.fog,dt.lights,{emissive:{value:new An(0)}}]),vertexShader:Gt.meshtoon_vert,fragmentShader:Gt.meshtoon_frag},matcap:{uniforms:li([dt.common,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,{matcap:{value:null}}]),vertexShader:Gt.meshmatcap_vert,fragmentShader:Gt.meshmatcap_frag},points:{uniforms:li([dt.points,dt.fog]),vertexShader:Gt.points_vert,fragmentShader:Gt.points_frag},dashed:{uniforms:li([dt.common,dt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Gt.linedashed_vert,fragmentShader:Gt.linedashed_frag},depth:{uniforms:li([dt.common,dt.displacementmap]),vertexShader:Gt.depth_vert,fragmentShader:Gt.depth_frag},normal:{uniforms:li([dt.common,dt.bumpmap,dt.normalmap,dt.displacementmap,{opacity:{value:1}}]),vertexShader:Gt.meshnormal_vert,fragmentShader:Gt.meshnormal_frag},sprite:{uniforms:li([dt.sprite,dt.fog]),vertexShader:Gt.sprite_vert,fragmentShader:Gt.sprite_frag},background:{uniforms:{uvTransform:{value:new Ht},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Gt.background_vert,fragmentShader:Gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Ht}},vertexShader:Gt.backgroundCube_vert,fragmentShader:Gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Gt.cube_vert,fragmentShader:Gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Gt.equirect_vert,fragmentShader:Gt.equirect_frag},distanceRGBA:{uniforms:li([dt.common,dt.displacementmap,{referencePosition:{value:new De},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Gt.distanceRGBA_vert,fragmentShader:Gt.distanceRGBA_frag},shadow:{uniforms:li([dt.lights,dt.fog,{color:{value:new An(0)},opacity:{value:1}}]),vertexShader:Gt.shadow_vert,fragmentShader:Gt.shadow_frag}};Ga.physical={uniforms:li([Ga.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ht},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ht},clearcoatNormalScale:{value:new Un(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ht},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ht},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ht},sheen:{value:0},sheenColor:{value:new An(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ht},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ht},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ht},transmissionSamplerSize:{value:new Un},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ht},attenuationDistance:{value:0},attenuationColor:{value:new An(0)},specularColor:{value:new An(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ht},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ht},anisotropyVector:{value:new Un},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ht}}]),vertexShader:Gt.meshphysical_vert,fragmentShader:Gt.meshphysical_frag};const Yp={r:0,b:0,g:0},Hu=new Ps,AD=new rr;function RD(a,e,n,i,s,u,d){const f=new An(0);let p=u===!0?0:1,m,v,x=null,_=0,S=null;function w(L){let C=L.isScene===!0?L.background:null;return C&&C.isTexture&&(C=(L.backgroundBlurriness>0?n:e).get(C)),C}function b(L){let C=!1;const X=w(L);X===null?g(f,p):X&&X.isColor&&(g(X,1),C=!0);const k=a.xr.getEnvironmentBlendMode();k==="additive"?i.buffers.color.setClear(0,0,0,1,d):k==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,d),(a.autoClear||C)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil))}function y(L,C){const X=w(C);X&&(X.isCubeTexture||X.mapping===wm)?(v===void 0&&(v=new qa(new op(1,1,1),new Js({name:"BackgroundCubeMaterial",uniforms:ad(Ga.backgroundCube.uniforms),vertexShader:Ga.backgroundCube.vertexShader,fragmentShader:Ga.backgroundCube.fragmentShader,side:mi,depthTest:!1,depthWrite:!1,fog:!1})),v.geometry.deleteAttribute("normal"),v.geometry.deleteAttribute("uv"),v.onBeforeRender=function(k,F,j){this.matrixWorld.copyPosition(j.matrixWorld)},Object.defineProperty(v.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(v)),Hu.copy(C.backgroundRotation),Hu.x*=-1,Hu.y*=-1,Hu.z*=-1,X.isCubeTexture&&X.isRenderTargetTexture===!1&&(Hu.y*=-1,Hu.z*=-1),v.material.uniforms.envMap.value=X,v.material.uniforms.flipEnvMap.value=X.isCubeTexture&&X.isRenderTargetTexture===!1?-1:1,v.material.uniforms.backgroundBlurriness.value=C.backgroundBlurriness,v.material.uniforms.backgroundIntensity.value=C.backgroundIntensity,v.material.uniforms.backgroundRotation.value.setFromMatrix4(AD.makeRotationFromEuler(Hu)),v.material.toneMapped=cn.getTransfer(X.colorSpace)!==wn,(x!==X||_!==X.version||S!==a.toneMapping)&&(v.material.needsUpdate=!0,x=X,_=X.version,S=a.toneMapping),v.layers.enableAll(),L.unshift(v,v.geometry,v.material,0,0,null)):X&&X.isTexture&&(m===void 0&&(m=new qa(new Am(2,2),new Js({name:"BackgroundMaterial",uniforms:ad(Ga.background.uniforms),vertexShader:Ga.background.vertexShader,fragmentShader:Ga.background.fragmentShader,side:Zs,depthTest:!1,depthWrite:!1,fog:!1})),m.geometry.deleteAttribute("normal"),Object.defineProperty(m.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(m)),m.material.uniforms.t2D.value=X,m.material.uniforms.backgroundIntensity.value=C.backgroundIntensity,m.material.toneMapped=cn.getTransfer(X.colorSpace)!==wn,X.matrixAutoUpdate===!0&&X.updateMatrix(),m.material.uniforms.uvTransform.value.copy(X.matrix),(x!==X||_!==X.version||S!==a.toneMapping)&&(m.material.needsUpdate=!0,x=X,_=X.version,S=a.toneMapping),m.layers.enableAll(),L.unshift(m,m.geometry,m.material,0,0,null))}function g(L,C){L.getRGB(Yp,Y1(a)),i.buffers.color.setClear(Yp.r,Yp.g,Yp.b,C,d)}function I(){v!==void 0&&(v.geometry.dispose(),v.material.dispose()),m!==void 0&&(m.geometry.dispose(),m.material.dispose())}return{getClearColor:function(){return f},setClearColor:function(L,C=1){f.set(L),p=C,g(f,p)},getClearAlpha:function(){return p},setClearAlpha:function(L){p=L,g(f,p)},render:b,addToRenderList:y,dispose:I}}function CD(a,e){const n=a.getParameter(a.MAX_VERTEX_ATTRIBS),i={},s=_(null);let u=s,d=!1;function f(A,V,ie,ee,se){let he=!1;const oe=x(ee,ie,V);u!==oe&&(u=oe,m(u.object)),he=S(A,ee,ie,se),he&&w(A,ee,ie,se),se!==null&&e.update(se,a.ELEMENT_ARRAY_BUFFER),(he||d)&&(d=!1,C(A,V,ie,ee),se!==null&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,e.get(se).buffer))}function p(){return a.createVertexArray()}function m(A){return a.bindVertexArray(A)}function v(A){return a.deleteVertexArray(A)}function x(A,V,ie){const ee=ie.wireframe===!0;let se=i[A.id];se===void 0&&(se={},i[A.id]=se);let he=se[V.id];he===void 0&&(he={},se[V.id]=he);let oe=he[ee];return oe===void 0&&(oe=_(p()),he[ee]=oe),oe}function _(A){const V=[],ie=[],ee=[];for(let se=0;se<n;se++)V[se]=0,ie[se]=0,ee[se]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:V,enabledAttributes:ie,attributeDivisors:ee,object:A,attributes:{},index:null}}function S(A,V,ie,ee){const se=u.attributes,he=V.attributes;let oe=0;const ue=ie.getAttributes();for(const B in ue)if(ue[B].location>=0){const ae=se[B];let re=he[B];if(re===void 0&&(B==="instanceMatrix"&&A.instanceMatrix&&(re=A.instanceMatrix),B==="instanceColor"&&A.instanceColor&&(re=A.instanceColor)),ae===void 0||ae.attribute!==re||re&&ae.data!==re.data)return!0;oe++}return u.attributesNum!==oe||u.index!==ee}function w(A,V,ie,ee){const se={},he=V.attributes;let oe=0;const ue=ie.getAttributes();for(const B in ue)if(ue[B].location>=0){let ae=he[B];ae===void 0&&(B==="instanceMatrix"&&A.instanceMatrix&&(ae=A.instanceMatrix),B==="instanceColor"&&A.instanceColor&&(ae=A.instanceColor));const re={};re.attribute=ae,ae&&ae.data&&(re.data=ae.data),se[B]=re,oe++}u.attributes=se,u.attributesNum=oe,u.index=ee}function b(){const A=u.newAttributes;for(let V=0,ie=A.length;V<ie;V++)A[V]=0}function y(A){g(A,0)}function g(A,V){const ie=u.newAttributes,ee=u.enabledAttributes,se=u.attributeDivisors;ie[A]=1,ee[A]===0&&(a.enableVertexAttribArray(A),ee[A]=1),se[A]!==V&&(a.vertexAttribDivisor(A,V),se[A]=V)}function I(){const A=u.newAttributes,V=u.enabledAttributes;for(let ie=0,ee=V.length;ie<ee;ie++)V[ie]!==A[ie]&&(a.disableVertexAttribArray(ie),V[ie]=0)}function L(A,V,ie,ee,se,he,oe){oe===!0?a.vertexAttribIPointer(A,V,ie,se,he):a.vertexAttribPointer(A,V,ie,ee,se,he)}function C(A,V,ie,ee){b();const se=ee.attributes,he=ie.getAttributes(),oe=V.defaultAttributeValues;for(const ue in he){const B=he[ue];if(B.location>=0){let ae=se[ue];if(ae===void 0&&(ue==="instanceMatrix"&&A.instanceMatrix&&(ae=A.instanceMatrix),ue==="instanceColor"&&A.instanceColor&&(ae=A.instanceColor)),ae!==void 0){const re=ae.normalized,U=ae.itemSize,te=e.get(ae);if(te===void 0)continue;const Ue=te.buffer,K=te.type,le=te.bytesPerElement,Se=K===a.INT||K===a.UNSIGNED_INT||ae.gpuType===ux;if(ae.isInterleavedBufferAttribute){const ve=ae.data,Ee=ve.stride,Ie=ae.offset;if(ve.isInstancedInterleavedBuffer){for(let Ze=0;Ze<B.locationSize;Ze++)g(B.location+Ze,ve.meshPerAttribute);A.isInstancedMesh!==!0&&ee._maxInstanceCount===void 0&&(ee._maxInstanceCount=ve.meshPerAttribute*ve.count)}else for(let Ze=0;Ze<B.locationSize;Ze++)y(B.location+Ze);a.bindBuffer(a.ARRAY_BUFFER,Ue);for(let Ze=0;Ze<B.locationSize;Ze++)L(B.location+Ze,U/B.locationSize,K,re,Ee*le,(Ie+U/B.locationSize*Ze)*le,Se)}else{if(ae.isInstancedBufferAttribute){for(let ve=0;ve<B.locationSize;ve++)g(B.location+ve,ae.meshPerAttribute);A.isInstancedMesh!==!0&&ee._maxInstanceCount===void 0&&(ee._maxInstanceCount=ae.meshPerAttribute*ae.count)}else for(let ve=0;ve<B.locationSize;ve++)y(B.location+ve);a.bindBuffer(a.ARRAY_BUFFER,Ue);for(let ve=0;ve<B.locationSize;ve++)L(B.location+ve,U/B.locationSize,K,re,U*le,U/B.locationSize*ve*le,Se)}}else if(oe!==void 0){const re=oe[ue];if(re!==void 0)switch(re.length){case 2:a.vertexAttrib2fv(B.location,re);break;case 3:a.vertexAttrib3fv(B.location,re);break;case 4:a.vertexAttrib4fv(B.location,re);break;default:a.vertexAttrib1fv(B.location,re)}}}}I()}function X(){j();for(const A in i){const V=i[A];for(const ie in V){const ee=V[ie];for(const se in ee)v(ee[se].object),delete ee[se];delete V[ie]}delete i[A]}}function k(A){if(i[A.id]===void 0)return;const V=i[A.id];for(const ie in V){const ee=V[ie];for(const se in ee)v(ee[se].object),delete ee[se];delete V[ie]}delete i[A.id]}function F(A){for(const V in i){const ie=i[V];if(ie[A.id]===void 0)continue;const ee=ie[A.id];for(const se in ee)v(ee[se].object),delete ee[se];delete ie[A.id]}}function j(){R(),d=!0,u!==s&&(u=s,m(u.object))}function R(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:f,reset:j,resetDefaultState:R,dispose:X,releaseStatesOfGeometry:k,releaseStatesOfProgram:F,initAttributes:b,enableAttribute:y,disableUnusedAttributes:I}}function PD(a,e,n){let i;function s(m){i=m}function u(m,v){a.drawArrays(i,m,v),n.update(v,i,1)}function d(m,v,x){x!==0&&(a.drawArraysInstanced(i,m,v,x),n.update(v,i,x))}function f(m,v,x){if(x===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,m,0,v,0,x);let _=0;for(let S=0;S<x;S++)_+=v[S];n.update(_,i,1)}function p(m,v,x,_){if(x===0)return;const S=e.get("WEBGL_multi_draw");if(S===null)for(let w=0;w<m.length;w++)d(m[w],v[w],_[w]);else{S.multiDrawArraysInstancedWEBGL(i,m,0,v,0,_,0,x);let w=0;for(let b=0;b<x;b++)w+=v[b]*_[b];n.update(w,i,1)}}this.setMode=s,this.render=u,this.renderInstances=d,this.renderMultiDraw=f,this.renderMultiDrawInstances=p}function DD(a,e,n,i){let s;function u(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const F=e.get("EXT_texture_filter_anisotropic");s=a.getParameter(F.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function d(F){return!(F!==za&&i.convert(F)!==a.getParameter(a.IMPLEMENTATION_COLOR_READ_FORMAT))}function f(F){const j=F===np&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(F!==Cs&&i.convert(F)!==a.getParameter(a.IMPLEMENTATION_COLOR_READ_TYPE)&&F!==Ss&&!j)}function p(F){if(F==="highp"){if(a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision>0)return"highp";F="mediump"}return F==="mediump"&&a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let m=n.precision!==void 0?n.precision:"highp";const v=p(m);v!==m&&(console.warn("THREE.WebGLRenderer:",m,"not supported, using",v,"instead."),m=v);const x=n.logarithmicDepthBuffer===!0,_=n.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),S=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),w=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=a.getParameter(a.MAX_TEXTURE_SIZE),y=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE),g=a.getParameter(a.MAX_VERTEX_ATTRIBS),I=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),L=a.getParameter(a.MAX_VARYING_VECTORS),C=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),X=w>0,k=a.getParameter(a.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:u,getMaxPrecision:p,textureFormatReadable:d,textureTypeReadable:f,precision:m,logarithmicDepthBuffer:x,reverseDepthBuffer:_,maxTextures:S,maxVertexTextures:w,maxTextureSize:b,maxCubemapSize:y,maxAttributes:g,maxVertexUniforms:I,maxVaryings:L,maxFragmentUniforms:C,vertexTextures:X,maxSamples:k}}function LD(a){const e=this;let n=null,i=0,s=!1,u=!1;const d=new Xu,f=new Ht,p={value:null,needsUpdate:!1};this.uniform=p,this.numPlanes=0,this.numIntersection=0,this.init=function(x,_){const S=x.length!==0||_||i!==0||s;return s=_,i=x.length,S},this.beginShadows=function(){u=!0,v(null)},this.endShadows=function(){u=!1},this.setGlobalState=function(x,_){n=v(x,_,0)},this.setState=function(x,_,S){const w=x.clippingPlanes,b=x.clipIntersection,y=x.clipShadows,g=a.get(x);if(!s||w===null||w.length===0||u&&!y)u?v(null):m();else{const I=u?0:i,L=I*4;let C=g.clippingState||null;p.value=C,C=v(w,_,L,S);for(let X=0;X!==L;++X)C[X]=n[X];g.clippingState=C,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=I}};function m(){p.value!==n&&(p.value=n,p.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function v(x,_,S,w){const b=x!==null?x.length:0;let y=null;if(b!==0){if(y=p.value,w!==!0||y===null){const g=S+b*4,I=_.matrixWorldInverse;f.getNormalMatrix(I),(y===null||y.length<g)&&(y=new Float32Array(g));for(let L=0,C=S;L!==b;++L,C+=4)d.copy(x[L]).applyMatrix4(I,f),d.normal.toArray(y,C),y[C+3]=d.constant}p.value=y,p.needsUpdate=!0}return e.numPlanes=b,e.numIntersection=0,y}}function UD(a){let e=new WeakMap;function n(d,f){return f===m0?d.mapping=ed:f===g0&&(d.mapping=td),d}function i(d){if(d&&d.isTexture){const f=d.mapping;if(f===m0||f===g0)if(e.has(d)){const p=e.get(d).texture;return n(p,d.mapping)}else{const p=d.image;if(p&&p.height>0){const m=new k2(p.height);return m.fromEquirectangularTexture(a,d),e.set(d,m),d.addEventListener("dispose",s),n(m.texture,d.mapping)}else return null}}return d}function s(d){const f=d.target;f.removeEventListener("dispose",s);const p=e.get(f);p!==void 0&&(e.delete(f),p.dispose())}function u(){e=new WeakMap}return{get:i,dispose:u}}const zc=4,_S=[.125,.215,.35,.446,.526,.582],Ku=20,f_=new W2,xS=new An;let h_=null,p_=0,m_=0,g_=!1;const ju=(1+Math.sqrt(5))/2,Nc=1/ju,yS=[new De(-ju,Nc,0),new De(ju,Nc,0),new De(-Nc,0,ju),new De(Nc,0,ju),new De(0,ju,-Nc),new De(0,ju,Nc),new De(-1,1,-1),new De(1,1,-1),new De(-1,1,1),new De(1,1,1)];class SS{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,s=100){h_=this._renderer.getRenderTarget(),p_=this._renderer.getActiveCubeFace(),m_=this._renderer.getActiveMipmapLevel(),g_=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const u=this._allocateTargets();return u.depthBuffer=!0,this._sceneToCubeUV(e,i,s,u),n>0&&this._blur(u,0,0,n),this._applyPMREM(u),this._cleanup(u),u}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=TS(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ES(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(h_,p_,m_),this._renderer.xr.enabled=g_,e.scissorTest=!1,$p(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===ed||e.mapping===td?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),h_=this._renderer.getRenderTarget(),p_=this._renderer.getActiveCubeFace(),m_=this._renderer.getActiveMipmapLevel(),g_=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:ja,minFilter:ja,generateMipmaps:!1,type:np,format:za,colorSpace:id,depthBuffer:!1},s=MS(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=MS(e,n,i);const{_lodMax:u}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=ID(u)),this._blurMaterial=ND(u,e,n)}return s}_compileMaterial(e){const n=new qa(this._lodPlanes[0],e);this._renderer.compile(n,f_)}_sceneToCubeUV(e,n,i,s){const u=new Ji(90,1,n,i),d=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,v=p.toneMapping;p.getClearColor(xS),p.toneMapping=Ys,p.autoClear=!1;const x=new gx({name:"PMREM.Background",side:mi,depthWrite:!1,depthTest:!1}),_=new qa(new op,x);let S=!1;const w=e.background;w?w.isColor&&(x.color.copy(w),e.background=null,S=!0):(x.color.copy(xS),S=!0);for(let b=0;b<6;b++){const y=b%3;y===0?(u.up.set(0,d[b],0),u.lookAt(f[b],0,0)):y===1?(u.up.set(0,0,d[b]),u.lookAt(0,f[b],0)):(u.up.set(0,d[b],0),u.lookAt(0,0,f[b]));const g=this._cubeSize;$p(s,y*g,b>2?g:0,g,g),p.setRenderTarget(s),S&&p.render(_,u),p.render(e,u)}_.geometry.dispose(),_.material.dispose(),p.toneMapping=v,p.autoClear=m,e.background=w}_textureToCubeUV(e,n){const i=this._renderer,s=e.mapping===ed||e.mapping===td;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=TS()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=ES());const u=s?this._cubemapMaterial:this._equirectMaterial,d=new qa(this._lodPlanes[0],u),f=u.uniforms;f.envMap.value=e;const p=this._cubeSize;$p(n,0,0,3*p,2*p),i.setRenderTarget(n),i.render(d,f_)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;const s=this._lodPlanes.length;for(let u=1;u<s;u++){const d=Math.sqrt(this._sigmas[u]*this._sigmas[u]-this._sigmas[u-1]*this._sigmas[u-1]),f=yS[(s-u-1)%yS.length];this._blur(e,u-1,u,d,f)}n.autoClear=i}_blur(e,n,i,s,u){const d=this._pingPongRenderTarget;this._halfBlur(e,d,n,i,s,"latitudinal",u),this._halfBlur(d,e,i,i,s,"longitudinal",u)}_halfBlur(e,n,i,s,u,d,f){const p=this._renderer,m=this._blurMaterial;d!=="latitudinal"&&d!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const v=3,x=new qa(this._lodPlanes[s],m),_=m.uniforms,S=this._sizeLods[i]-1,w=isFinite(u)?Math.PI/(2*S):2*Math.PI/(2*Ku-1),b=u/w,y=isFinite(u)?1+Math.floor(v*b):Ku;y>Ku&&console.warn(`sigmaRadians, ${u}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Ku}`);const g=[];let I=0;for(let F=0;F<Ku;++F){const j=F/b,R=Math.exp(-j*j/2);g.push(R),F===0?I+=R:F<y&&(I+=2*R)}for(let F=0;F<g.length;F++)g[F]=g[F]/I;_.envMap.value=e.texture,_.samples.value=y,_.weights.value=g,_.latitudinal.value=d==="latitudinal",f&&(_.poleAxis.value=f);const{_lodMax:L}=this;_.dTheta.value=w,_.mipInt.value=L-i;const C=this._sizeLods[s],X=3*C*(s>L-zc?s-L+zc:0),k=4*(this._cubeSize-C);$p(n,X,k,3*C,2*C),p.setRenderTarget(n),p.render(x,f_)}}function ID(a){const e=[],n=[],i=[];let s=a;const u=a-zc+1+_S.length;for(let d=0;d<u;d++){const f=Math.pow(2,s);n.push(f);let p=1/f;d>a-zc?p=_S[d-a+zc-1]:d===0&&(p=0),i.push(p);const m=1/(f-2),v=-m,x=1+m,_=[v,v,x,v,x,x,v,v,x,x,v,x],S=6,w=6,b=3,y=2,g=1,I=new Float32Array(b*w*S),L=new Float32Array(y*w*S),C=new Float32Array(g*w*S);for(let k=0;k<S;k++){const F=k%3*2/3-1,j=k>2?0:-1,R=[F,j,0,F+2/3,j,0,F+2/3,j+1,0,F,j,0,F+2/3,j+1,0,F,j+1,0];I.set(R,b*w*k),L.set(_,y*w*k);const A=[k,k,k,k,k,k];C.set(A,g*w*k)}const X=new el;X.setAttribute("position",new Ka(I,b)),X.setAttribute("uv",new Ka(L,y)),X.setAttribute("faceIndex",new Ka(C,g)),e.push(X),s>zc&&s--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function MS(a,e,n){const i=new oc(a,e,n);return i.texture.mapping=wm,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function $p(a,e,n,i,s){a.viewport.set(e,n,i,s),a.scissor.set(e,n,i,s)}function ND(a,e,n){const i=new Float32Array(Ku),s=new De(0,1,0);return new Js({name:"SphericalGaussianBlur",defines:{n:Ku,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:_x(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:qs,depthTest:!1,depthWrite:!1})}function ES(){return new Js({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_x(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:qs,depthTest:!1,depthWrite:!1})}function TS(){return new Js({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_x(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:qs,depthTest:!1,depthWrite:!1})}function _x(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function FD(a){let e=new WeakMap,n=null;function i(f){if(f&&f.isTexture){const p=f.mapping,m=p===m0||p===g0,v=p===ed||p===td;if(m||v){let x=e.get(f);const _=x!==void 0?x.texture.pmremVersion:0;if(f.isRenderTargetTexture&&f.pmremVersion!==_)return n===null&&(n=new SS(a)),x=m?n.fromEquirectangular(f,x):n.fromCubemap(f,x),x.texture.pmremVersion=f.pmremVersion,e.set(f,x),x.texture;if(x!==void 0)return x.texture;{const S=f.image;return m&&S&&S.height>0||v&&S&&s(S)?(n===null&&(n=new SS(a)),x=m?n.fromEquirectangular(f):n.fromCubemap(f),x.texture.pmremVersion=f.pmremVersion,e.set(f,x),f.addEventListener("dispose",u),x.texture):null}}}return f}function s(f){let p=0;const m=6;for(let v=0;v<m;v++)f[v]!==void 0&&p++;return p===m}function u(f){const p=f.target;p.removeEventListener("dispose",u);const m=e.get(p);m!==void 0&&(e.delete(p),m.dispose())}function d(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:d}}function OD(a){const e={};function n(i){if(e[i]!==void 0)return e[i];let s;switch(i){case"WEBGL_depth_texture":s=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=a.getExtension(i)}return e[i]=s,s}return{has:function(i){return n(i)!==null},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(i){const s=n(i);return s===null&&Oc("THREE.WebGLRenderer: "+i+" extension not supported."),s}}}function kD(a,e,n,i){const s={},u=new WeakMap;function d(x){const _=x.target;_.index!==null&&e.remove(_.index);for(const w in _.attributes)e.remove(_.attributes[w]);_.removeEventListener("dispose",d),delete s[_.id];const S=u.get(_);S&&(e.remove(S),u.delete(_)),i.releaseStatesOfGeometry(_),_.isInstancedBufferGeometry===!0&&delete _._maxInstanceCount,n.memory.geometries--}function f(x,_){return s[_.id]===!0||(_.addEventListener("dispose",d),s[_.id]=!0,n.memory.geometries++),_}function p(x){const _=x.attributes;for(const S in _)e.update(_[S],a.ARRAY_BUFFER)}function m(x){const _=[],S=x.index,w=x.attributes.position;let b=0;if(S!==null){const I=S.array;b=S.version;for(let L=0,C=I.length;L<C;L+=3){const X=I[L+0],k=I[L+1],F=I[L+2];_.push(X,k,k,F,F,X)}}else if(w!==void 0){const I=w.array;b=w.version;for(let L=0,C=I.length/3-1;L<C;L+=3){const X=L+0,k=L+1,F=L+2;_.push(X,k,k,F,F,X)}}else return;const y=new(H1(_)?q1:j1)(_,1);y.version=b;const g=u.get(x);g&&e.remove(g),u.set(x,y)}function v(x){const _=u.get(x);if(_){const S=x.index;S!==null&&_.version<S.version&&m(x)}else m(x);return u.get(x)}return{get:f,update:p,getWireframeAttribute:v}}function zD(a,e,n){let i;function s(_){i=_}let u,d;function f(_){u=_.type,d=_.bytesPerElement}function p(_,S){a.drawElements(i,S,u,_*d),n.update(S,i,1)}function m(_,S,w){w!==0&&(a.drawElementsInstanced(i,S,u,_*d,w),n.update(S,i,w))}function v(_,S,w){if(w===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,S,0,u,_,0,w);let b=0;for(let y=0;y<w;y++)b+=S[y];n.update(b,i,1)}function x(_,S,w,b){if(w===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let g=0;g<_.length;g++)m(_[g]/d,S[g],b[g]);else{y.multiDrawElementsInstancedWEBGL(i,S,0,u,_,0,b,0,w);let g=0;for(let I=0;I<w;I++)g+=S[I]*b[I];n.update(g,i,1)}}this.setMode=s,this.setIndex=f,this.render=p,this.renderInstances=m,this.renderMultiDraw=v,this.renderMultiDrawInstances=x}function BD(a){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(u,d,f){switch(n.calls++,d){case a.TRIANGLES:n.triangles+=f*(u/3);break;case a.LINES:n.lines+=f*(u/2);break;case a.LINE_STRIP:n.lines+=f*(u-1);break;case a.LINE_LOOP:n.lines+=f*u;break;case a.POINTS:n.points+=f*u;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",d);break}}function s(){n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:s,update:i}}function HD(a,e,n){const i=new WeakMap,s=new Qn;function u(d,f,p){const m=d.morphTargetInfluences,v=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,x=v!==void 0?v.length:0;let _=i.get(f);if(_===void 0||_.count!==x){let S=function(){j.dispose(),i.delete(f),f.removeEventListener("dispose",S)};_!==void 0&&_.texture.dispose();const w=f.morphAttributes.position!==void 0,b=f.morphAttributes.normal!==void 0,y=f.morphAttributes.color!==void 0,g=f.morphAttributes.position||[],I=f.morphAttributes.normal||[],L=f.morphAttributes.color||[];let C=0;w===!0&&(C=1),b===!0&&(C=2),y===!0&&(C=3);let X=f.attributes.position.count*C,k=1;X>e.maxTextureSize&&(k=Math.ceil(X/e.maxTextureSize),X=e.maxTextureSize);const F=new Float32Array(X*k*4*x),j=new G1(F,X,k,x);j.type=Ss,j.needsUpdate=!0;const R=C*4;for(let A=0;A<x;A++){const V=g[A],ie=I[A],ee=L[A],se=X*k*4*A;for(let he=0;he<V.count;he++){const oe=he*R;w===!0&&(s.fromBufferAttribute(V,he),F[se+oe+0]=s.x,F[se+oe+1]=s.y,F[se+oe+2]=s.z,F[se+oe+3]=0),b===!0&&(s.fromBufferAttribute(ie,he),F[se+oe+4]=s.x,F[se+oe+5]=s.y,F[se+oe+6]=s.z,F[se+oe+7]=0),y===!0&&(s.fromBufferAttribute(ee,he),F[se+oe+8]=s.x,F[se+oe+9]=s.y,F[se+oe+10]=s.z,F[se+oe+11]=ee.itemSize===4?s.w:1)}}_={count:x,texture:j,size:new Un(X,k)},i.set(f,_),f.addEventListener("dispose",S)}if(d.isInstancedMesh===!0&&d.morphTexture!==null)p.getUniforms().setValue(a,"morphTexture",d.morphTexture,n);else{let S=0;for(let b=0;b<m.length;b++)S+=m[b];const w=f.morphTargetsRelative?1:1-S;p.getUniforms().setValue(a,"morphTargetBaseInfluence",w),p.getUniforms().setValue(a,"morphTargetInfluences",m)}p.getUniforms().setValue(a,"morphTargetsTexture",_.texture,n),p.getUniforms().setValue(a,"morphTargetsTextureSize",_.size)}return{update:u}}function VD(a,e,n,i){let s=new WeakMap;function u(p){const m=i.render.frame,v=p.geometry,x=e.get(p,v);if(s.get(x)!==m&&(e.update(x),s.set(x,m)),p.isInstancedMesh&&(p.hasEventListener("dispose",f)===!1&&p.addEventListener("dispose",f),s.get(p)!==m&&(n.update(p.instanceMatrix,a.ARRAY_BUFFER),p.instanceColor!==null&&n.update(p.instanceColor,a.ARRAY_BUFFER),s.set(p,m))),p.isSkinnedMesh){const _=p.skeleton;s.get(_)!==m&&(_.update(),s.set(_,m))}return x}function d(){s=new WeakMap}function f(p){const m=p.target;m.removeEventListener("dispose",f),n.remove(m.instanceMatrix),m.instanceColor!==null&&n.remove(m.instanceColor)}return{update:u,dispose:d}}const eM=new gi,wS=new J1(1,1),tM=new G1,nM=new S2,rM=new K1,bS=[],AS=[],RS=new Float32Array(16),CS=new Float32Array(9),PS=new Float32Array(4);function ud(a,e,n){const i=a[0];if(i<=0||i>0)return a;const s=e*n;let u=bS[s];if(u===void 0&&(u=new Float32Array(s),bS[s]=u),e!==0){i.toArray(u,0);for(let d=1,f=0;d!==e;++d)f+=n,a[d].toArray(u,f)}return u}function gr(a,e){if(a.length!==e.length)return!1;for(let n=0,i=a.length;n<i;n++)if(a[n]!==e[n])return!1;return!0}function vr(a,e){for(let n=0,i=e.length;n<i;n++)a[n]=e[n]}function Rm(a,e){let n=AS[e];n===void 0&&(n=new Int32Array(e),AS[e]=n);for(let i=0;i!==e;++i)n[i]=a.allocateTextureUnit();return n}function GD(a,e){const n=this.cache;n[0]!==e&&(a.uniform1f(this.addr,e),n[0]=e)}function WD(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(a.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(gr(n,e))return;a.uniform2fv(this.addr,e),vr(n,e)}}function XD(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(a.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(a.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(gr(n,e))return;a.uniform3fv(this.addr,e),vr(n,e)}}function jD(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(a.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(gr(n,e))return;a.uniform4fv(this.addr,e),vr(n,e)}}function qD(a,e){const n=this.cache,i=e.elements;if(i===void 0){if(gr(n,e))return;a.uniformMatrix2fv(this.addr,!1,e),vr(n,e)}else{if(gr(n,i))return;PS.set(i),a.uniformMatrix2fv(this.addr,!1,PS),vr(n,i)}}function YD(a,e){const n=this.cache,i=e.elements;if(i===void 0){if(gr(n,e))return;a.uniformMatrix3fv(this.addr,!1,e),vr(n,e)}else{if(gr(n,i))return;CS.set(i),a.uniformMatrix3fv(this.addr,!1,CS),vr(n,i)}}function $D(a,e){const n=this.cache,i=e.elements;if(i===void 0){if(gr(n,e))return;a.uniformMatrix4fv(this.addr,!1,e),vr(n,e)}else{if(gr(n,i))return;RS.set(i),a.uniformMatrix4fv(this.addr,!1,RS),vr(n,i)}}function KD(a,e){const n=this.cache;n[0]!==e&&(a.uniform1i(this.addr,e),n[0]=e)}function ZD(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(a.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(gr(n,e))return;a.uniform2iv(this.addr,e),vr(n,e)}}function JD(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(a.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(gr(n,e))return;a.uniform3iv(this.addr,e),vr(n,e)}}function QD(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(a.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(gr(n,e))return;a.uniform4iv(this.addr,e),vr(n,e)}}function eL(a,e){const n=this.cache;n[0]!==e&&(a.uniform1ui(this.addr,e),n[0]=e)}function tL(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(a.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(gr(n,e))return;a.uniform2uiv(this.addr,e),vr(n,e)}}function nL(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(a.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(gr(n,e))return;a.uniform3uiv(this.addr,e),vr(n,e)}}function rL(a,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(a.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(gr(n,e))return;a.uniform4uiv(this.addr,e),vr(n,e)}}function iL(a,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(a.uniform1i(this.addr,s),i[0]=s);let u;this.type===a.SAMPLER_2D_SHADOW?(wS.compareFunction=B1,u=wS):u=eM,n.setTexture2D(e||u,s)}function aL(a,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(a.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||nM,s)}function oL(a,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(a.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(e||rM,s)}function sL(a,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(a.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||tM,s)}function lL(a){switch(a){case 5126:return GD;case 35664:return WD;case 35665:return XD;case 35666:return jD;case 35674:return qD;case 35675:return YD;case 35676:return $D;case 5124:case 35670:return KD;case 35667:case 35671:return ZD;case 35668:case 35672:return JD;case 35669:case 35673:return QD;case 5125:return eL;case 36294:return tL;case 36295:return nL;case 36296:return rL;case 35678:case 36198:case 36298:case 36306:case 35682:return iL;case 35679:case 36299:case 36307:return aL;case 35680:case 36300:case 36308:case 36293:return oL;case 36289:case 36303:case 36311:case 36292:return sL}}function uL(a,e){a.uniform1fv(this.addr,e)}function cL(a,e){const n=ud(e,this.size,2);a.uniform2fv(this.addr,n)}function dL(a,e){const n=ud(e,this.size,3);a.uniform3fv(this.addr,n)}function fL(a,e){const n=ud(e,this.size,4);a.uniform4fv(this.addr,n)}function hL(a,e){const n=ud(e,this.size,4);a.uniformMatrix2fv(this.addr,!1,n)}function pL(a,e){const n=ud(e,this.size,9);a.uniformMatrix3fv(this.addr,!1,n)}function mL(a,e){const n=ud(e,this.size,16);a.uniformMatrix4fv(this.addr,!1,n)}function gL(a,e){a.uniform1iv(this.addr,e)}function vL(a,e){a.uniform2iv(this.addr,e)}function _L(a,e){a.uniform3iv(this.addr,e)}function xL(a,e){a.uniform4iv(this.addr,e)}function yL(a,e){a.uniform1uiv(this.addr,e)}function SL(a,e){a.uniform2uiv(this.addr,e)}function ML(a,e){a.uniform3uiv(this.addr,e)}function EL(a,e){a.uniform4uiv(this.addr,e)}function TL(a,e,n){const i=this.cache,s=e.length,u=Rm(n,s);gr(i,u)||(a.uniform1iv(this.addr,u),vr(i,u));for(let d=0;d!==s;++d)n.setTexture2D(e[d]||eM,u[d])}function wL(a,e,n){const i=this.cache,s=e.length,u=Rm(n,s);gr(i,u)||(a.uniform1iv(this.addr,u),vr(i,u));for(let d=0;d!==s;++d)n.setTexture3D(e[d]||nM,u[d])}function bL(a,e,n){const i=this.cache,s=e.length,u=Rm(n,s);gr(i,u)||(a.uniform1iv(this.addr,u),vr(i,u));for(let d=0;d!==s;++d)n.setTextureCube(e[d]||rM,u[d])}function AL(a,e,n){const i=this.cache,s=e.length,u=Rm(n,s);gr(i,u)||(a.uniform1iv(this.addr,u),vr(i,u));for(let d=0;d!==s;++d)n.setTexture2DArray(e[d]||tM,u[d])}function RL(a){switch(a){case 5126:return uL;case 35664:return cL;case 35665:return dL;case 35666:return fL;case 35674:return hL;case 35675:return pL;case 35676:return mL;case 5124:case 35670:return gL;case 35667:case 35671:return vL;case 35668:case 35672:return _L;case 35669:case 35673:return xL;case 5125:return yL;case 36294:return SL;case 36295:return ML;case 36296:return EL;case 35678:case 36198:case 36298:case 36306:case 35682:return TL;case 35679:case 36299:case 36307:return wL;case 35680:case 36300:case 36308:case 36293:return bL;case 36289:case 36303:case 36311:case 36292:return AL}}class CL{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.setValue=lL(n.type)}}class PL{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.size=n.size,this.setValue=RL(n.type)}}class DL{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,n,i){const s=this.seq;for(let u=0,d=s.length;u!==d;++u){const f=s[u];f.setValue(e,n[f.id],i)}}}const v_=/(\w+)(\])?(\[|\.)?/g;function DS(a,e){a.seq.push(e),a.map[e.id]=e}function LL(a,e,n){const i=a.name,s=i.length;for(v_.lastIndex=0;;){const u=v_.exec(i),d=v_.lastIndex;let f=u[1];const p=u[2]==="]",m=u[3];if(p&&(f=f|0),m===void 0||m==="["&&d+2===s){DS(n,m===void 0?new CL(f,a,e):new PL(f,a,e));break}else{let v=n.map[f];v===void 0&&(v=new DL(f),DS(n,v)),n=v}}}class cm{constructor(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(let s=0;s<i;++s){const u=e.getActiveUniform(n,s),d=e.getUniformLocation(n,u.name);LL(u,d,this)}}setValue(e,n,i,s){const u=this.map[n];u!==void 0&&u.setValue(e,i,s)}setOptional(e,n,i){const s=n[i];s!==void 0&&this.setValue(e,i,s)}static upload(e,n,i,s){for(let u=0,d=n.length;u!==d;++u){const f=n[u],p=i[f.id];p.needsUpdate!==!1&&f.setValue(e,p.value,s)}}static seqWithValue(e,n){const i=[];for(let s=0,u=e.length;s!==u;++s){const d=e[s];d.id in n&&i.push(d)}return i}}function LS(a,e,n){const i=a.createShader(e);return a.shaderSource(i,n),a.compileShader(i),i}const UL=37297;let IL=0;function NL(a,e){const n=a.split(`
`),i=[],s=Math.max(e-6,0),u=Math.min(e+6,n.length);for(let d=s;d<u;d++){const f=d+1;i.push(`${f===e?">":" "} ${f}: ${n[d]}`)}return i.join(`
`)}const US=new Ht;function FL(a){cn._getMatrix(US,cn.workingColorSpace,a);const e=`mat3( ${US.elements.map(n=>n.toFixed(4))} )`;switch(cn.getTransfer(a)){case _m:return[e,"LinearTransferOETF"];case wn:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",a),[e,"LinearTransferOETF"]}}function IS(a,e,n){const i=a.getShaderParameter(e,a.COMPILE_STATUS),s=a.getShaderInfoLog(e).trim();if(i&&s==="")return"";const u=/ERROR: 0:(\d+)/.exec(s);if(u){const d=parseInt(u[1]);return n.toUpperCase()+`

`+s+`

`+NL(a.getShaderSource(e),d)}else return s}function OL(a,e){const n=FL(e);return[`vec4 ${a}( vec4 value ) {`,`	return ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join(`
`)}function kL(a,e){let n;switch(e){case jC:n="Linear";break;case qC:n="Reinhard";break;case YC:n="Cineon";break;case $C:n="ACESFilmic";break;case ZC:n="AgX";break;case JC:n="Neutral";break;case KC:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+a+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const Kp=new De;function zL(){cn.getLuminanceCoefficients(Kp);const a=Kp.x.toFixed(4),e=Kp.y.toFixed(4),n=Kp.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${a}, ${e}, ${n} );`,"	return dot( weights, rgb );","}"].join(`
`)}function BL(a){return[a.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",a.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Yh).join(`
`)}function HL(a){const e=[];for(const n in a){const i=a[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function VL(a,e){const n={},i=a.getProgramParameter(e,a.ACTIVE_ATTRIBUTES);for(let s=0;s<i;s++){const u=a.getActiveAttrib(e,s),d=u.name;let f=1;u.type===a.FLOAT_MAT2&&(f=2),u.type===a.FLOAT_MAT3&&(f=3),u.type===a.FLOAT_MAT4&&(f=4),n[d]={type:u.type,location:a.getAttribLocation(e,d),locationSize:f}}return n}function Yh(a){return a!==""}function NS(a,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return a.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function FS(a,e){return a.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const GL=/^[ \t]*#include +<([\w\d./]+)>/gm;function j0(a){return a.replace(GL,XL)}const WL=new Map;function XL(a,e){let n=Gt[e];if(n===void 0){const i=WL.get(e);if(i!==void 0)n=Gt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return j0(n)}const jL=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function OS(a){return a.replace(jL,qL)}function qL(a,e,n,i){let s="";for(let u=parseInt(e);u<parseInt(n);u++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+u+" ]").replace(/UNROLLED_LOOP_INDEX/g,u);return s}function kS(a){let e=`precision ${a.precision} float;
	precision ${a.precision} int;
	precision ${a.precision} sampler2D;
	precision ${a.precision} samplerCube;
	precision ${a.precision} sampler3D;
	precision ${a.precision} sampler2DArray;
	precision ${a.precision} sampler2DShadow;
	precision ${a.precision} samplerCubeShadow;
	precision ${a.precision} sampler2DArrayShadow;
	precision ${a.precision} isampler2D;
	precision ${a.precision} isampler3D;
	precision ${a.precision} isamplerCube;
	precision ${a.precision} isampler2DArray;
	precision ${a.precision} usampler2D;
	precision ${a.precision} usampler3D;
	precision ${a.precision} usamplerCube;
	precision ${a.precision} usampler2DArray;
	`;return a.precision==="highp"?e+=`
#define HIGH_PRECISION`:a.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:a.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function YL(a){let e="SHADOWMAP_TYPE_BASIC";return a.shadowMapType===A1?e="SHADOWMAP_TYPE_PCF":a.shadowMapType===wC?e="SHADOWMAP_TYPE_PCF_SOFT":a.shadowMapType===gs&&(e="SHADOWMAP_TYPE_VSM"),e}function $L(a){let e="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case ed:case td:e="ENVMAP_TYPE_CUBE";break;case wm:e="ENVMAP_TYPE_CUBE_UV";break}return e}function KL(a){let e="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(a.envMapMode){case td:e="ENVMAP_MODE_REFRACTION";break}return e}function ZL(a){let e="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case R1:e="ENVMAP_BLENDING_MULTIPLY";break;case WC:e="ENVMAP_BLENDING_MIX";break;case XC:e="ENVMAP_BLENDING_ADD";break}return e}function JL(a){const e=a.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function QL(a,e,n,i){const s=a.getContext(),u=n.defines;let d=n.vertexShader,f=n.fragmentShader;const p=YL(n),m=$L(n),v=KL(n),x=ZL(n),_=JL(n),S=BL(n),w=HL(u),b=s.createProgram();let y,g,I=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(y=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w].filter(Yh).join(`
`),y.length>0&&(y+=`
`),g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w].filter(Yh).join(`
`),g.length>0&&(g+=`
`)):(y=[kS(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+v:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Yh).join(`
`),g=[kS(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+m:"",n.envMap?"#define "+v:"",n.envMap?"#define "+x:"",_?"#define CUBEUV_TEXEL_WIDTH "+_.texelWidth:"",_?"#define CUBEUV_TEXEL_HEIGHT "+_.texelHeight:"",_?"#define CUBEUV_MAX_MIP "+_.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+p:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Ys?"#define TONE_MAPPING":"",n.toneMapping!==Ys?Gt.tonemapping_pars_fragment:"",n.toneMapping!==Ys?kL("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Gt.colorspace_pars_fragment,OL("linearToOutputTexel",n.outputColorSpace),zL(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Yh).join(`
`)),d=j0(d),d=NS(d,n),d=FS(d,n),f=j0(f),f=NS(f,n),f=FS(f,n),d=OS(d),f=OS(f),n.isRawShaderMaterial!==!0&&(I=`#version 300 es
`,y=[S,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,g=["#define varying in",n.glslVersion===Qy?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Qy?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const L=I+y+d,C=I+g+f,X=LS(s,s.VERTEX_SHADER,L),k=LS(s,s.FRAGMENT_SHADER,C);s.attachShader(b,X),s.attachShader(b,k),n.index0AttributeName!==void 0?s.bindAttribLocation(b,0,n.index0AttributeName):n.morphTargets===!0&&s.bindAttribLocation(b,0,"position"),s.linkProgram(b);function F(V){if(a.debug.checkShaderErrors){const ie=s.getProgramInfoLog(b).trim(),ee=s.getShaderInfoLog(X).trim(),se=s.getShaderInfoLog(k).trim();let he=!0,oe=!0;if(s.getProgramParameter(b,s.LINK_STATUS)===!1)if(he=!1,typeof a.debug.onShaderError=="function")a.debug.onShaderError(s,b,X,k);else{const ue=IS(s,X,"vertex"),B=IS(s,k,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(b,s.VALIDATE_STATUS)+`

Material Name: `+V.name+`
Material Type: `+V.type+`

Program Info Log: `+ie+`
`+ue+`
`+B)}else ie!==""?console.warn("THREE.WebGLProgram: Program Info Log:",ie):(ee===""||se==="")&&(oe=!1);oe&&(V.diagnostics={runnable:he,programLog:ie,vertexShader:{log:ee,prefix:y},fragmentShader:{log:se,prefix:g}})}s.deleteShader(X),s.deleteShader(k),j=new cm(s,b),R=VL(s,b)}let j;this.getUniforms=function(){return j===void 0&&F(this),j};let R;this.getAttributes=function(){return R===void 0&&F(this),R};let A=n.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return A===!1&&(A=s.getProgramParameter(b,UL)),A},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(b),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=IL++,this.cacheKey=e,this.usedTimes=1,this.program=b,this.vertexShader=X,this.fragmentShader=k,this}let eU=0;class tU{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,s=this._getShaderStage(n),u=this._getShaderStage(i),d=this._getShaderCacheForMaterial(e);return d.has(s)===!1&&(d.add(s),s.usedTimes++),d.has(u)===!1&&(d.add(u),u.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;let i=n.get(e);return i===void 0&&(i=new Set,n.set(e,i)),i}_getShaderStage(e){const n=this.shaderCache;let i=n.get(e);return i===void 0&&(i=new nU(e),n.set(e,i)),i}}class nU{constructor(e){this.id=eU++,this.code=e,this.usedTimes=0}}function rU(a,e,n,i,s,u,d){const f=new W1,p=new tU,m=new Set,v=[],x=s.logarithmicDepthBuffer,_=s.vertexTextures;let S=s.precision;const w={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(R){return m.add(R),R===0?"uv":`uv${R}`}function y(R,A,V,ie,ee){const se=ie.fog,he=ee.geometry,oe=R.isMeshStandardMaterial?ie.environment:null,ue=(R.isMeshStandardMaterial?n:e).get(R.envMap||oe),B=ue&&ue.mapping===wm?ue.image.height:null,ae=w[R.type];R.precision!==null&&(S=s.getMaxPrecision(R.precision),S!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",S,"instead."));const re=he.morphAttributes.position||he.morphAttributes.normal||he.morphAttributes.color,U=re!==void 0?re.length:0;let te=0;he.morphAttributes.position!==void 0&&(te=1),he.morphAttributes.normal!==void 0&&(te=2),he.morphAttributes.color!==void 0&&(te=3);let Ue,K,le,Se;if(ae){const ht=Ga[ae];Ue=ht.vertexShader,K=ht.fragmentShader}else Ue=R.vertexShader,K=R.fragmentShader,p.update(R),le=p.getVertexShaderID(R),Se=p.getFragmentShaderID(R);const ve=a.getRenderTarget(),Ee=a.state.buffers.depth.getReversed(),Ie=ee.isInstancedMesh===!0,Ze=ee.isBatchedMesh===!0,St=!!R.map,ft=!!R.matcap,Tt=!!ue,O=!!R.aoMap,dn=!!R.lightMap,lt=!!R.bumpMap,ot=!!R.normalMap,Xe=!!R.displacementMap,yt=!!R.emissiveMap,We=!!R.metalnessMap,P=!!R.roughnessMap,E=R.anisotropy>0,$=R.clearcoat>0,fe=R.dispersion>0,ge=R.iridescence>0,ce=R.sheen>0,Ve=R.transmission>0,Te=E&&!!R.anisotropyMap,Ne=$&&!!R.clearcoatMap,at=$&&!!R.clearcoatNormalMap,ye=$&&!!R.clearcoatRoughnessMap,Oe=ge&&!!R.iridescenceMap,Ye=ge&&!!R.iridescenceThicknessMap,Je=ce&&!!R.sheenColorMap,ke=ce&&!!R.sheenRoughnessMap,st=!!R.specularMap,nt=!!R.specularColorMap,xt=!!R.specularIntensityMap,G=Ve&&!!R.transmissionMap,we=Ve&&!!R.thicknessMap,ne=!!R.gradientMap,de=!!R.alphaMap,Re=R.alphaTest>0,be=!!R.alphaHash,it=!!R.extensions;let bt=Ys;R.toneMapped&&(ve===null||ve.isXRRenderTarget===!0)&&(bt=a.toneMapping);const Wt={shaderID:ae,shaderType:R.type,shaderName:R.name,vertexShader:Ue,fragmentShader:K,defines:R.defines,customVertexShaderID:le,customFragmentShaderID:Se,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:S,batching:Ze,batchingColor:Ze&&ee._colorsTexture!==null,instancing:Ie,instancingColor:Ie&&ee.instanceColor!==null,instancingMorph:Ie&&ee.morphTexture!==null,supportsVertexTextures:_,outputColorSpace:ve===null?a.outputColorSpace:ve.isXRRenderTarget===!0?ve.texture.colorSpace:id,alphaToCoverage:!!R.alphaToCoverage,map:St,matcap:ft,envMap:Tt,envMapMode:Tt&&ue.mapping,envMapCubeUVHeight:B,aoMap:O,lightMap:dn,bumpMap:lt,normalMap:ot,displacementMap:_&&Xe,emissiveMap:yt,normalMapObjectSpace:ot&&R.normalMapType===r2,normalMapTangentSpace:ot&&R.normalMapType===n2,metalnessMap:We,roughnessMap:P,anisotropy:E,anisotropyMap:Te,clearcoat:$,clearcoatMap:Ne,clearcoatNormalMap:at,clearcoatRoughnessMap:ye,dispersion:fe,iridescence:ge,iridescenceMap:Oe,iridescenceThicknessMap:Ye,sheen:ce,sheenColorMap:Je,sheenRoughnessMap:ke,specularMap:st,specularColorMap:nt,specularIntensityMap:xt,transmission:Ve,transmissionMap:G,thicknessMap:we,gradientMap:ne,opaque:R.transparent===!1&&R.blending===Gc&&R.alphaToCoverage===!1,alphaMap:de,alphaTest:Re,alphaHash:be,combine:R.combine,mapUv:St&&b(R.map.channel),aoMapUv:O&&b(R.aoMap.channel),lightMapUv:dn&&b(R.lightMap.channel),bumpMapUv:lt&&b(R.bumpMap.channel),normalMapUv:ot&&b(R.normalMap.channel),displacementMapUv:Xe&&b(R.displacementMap.channel),emissiveMapUv:yt&&b(R.emissiveMap.channel),metalnessMapUv:We&&b(R.metalnessMap.channel),roughnessMapUv:P&&b(R.roughnessMap.channel),anisotropyMapUv:Te&&b(R.anisotropyMap.channel),clearcoatMapUv:Ne&&b(R.clearcoatMap.channel),clearcoatNormalMapUv:at&&b(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ye&&b(R.clearcoatRoughnessMap.channel),iridescenceMapUv:Oe&&b(R.iridescenceMap.channel),iridescenceThicknessMapUv:Ye&&b(R.iridescenceThicknessMap.channel),sheenColorMapUv:Je&&b(R.sheenColorMap.channel),sheenRoughnessMapUv:ke&&b(R.sheenRoughnessMap.channel),specularMapUv:st&&b(R.specularMap.channel),specularColorMapUv:nt&&b(R.specularColorMap.channel),specularIntensityMapUv:xt&&b(R.specularIntensityMap.channel),transmissionMapUv:G&&b(R.transmissionMap.channel),thicknessMapUv:we&&b(R.thicknessMap.channel),alphaMapUv:de&&b(R.alphaMap.channel),vertexTangents:!!he.attributes.tangent&&(ot||E),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!he.attributes.color&&he.attributes.color.itemSize===4,pointsUvs:ee.isPoints===!0&&!!he.attributes.uv&&(St||de),fog:!!se,useFog:R.fog===!0,fogExp2:!!se&&se.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:x,reverseDepthBuffer:Ee,skinning:ee.isSkinnedMesh===!0,morphTargets:he.morphAttributes.position!==void 0,morphNormals:he.morphAttributes.normal!==void 0,morphColors:he.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:te,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numLightProbes:A.numLightProbes,numClippingPlanes:d.numPlanes,numClipIntersection:d.numIntersection,dithering:R.dithering,shadowMapEnabled:a.shadowMap.enabled&&V.length>0,shadowMapType:a.shadowMap.type,toneMapping:bt,decodeVideoTexture:St&&R.map.isVideoTexture===!0&&cn.getTransfer(R.map.colorSpace)===wn,decodeVideoTextureEmissive:yt&&R.emissiveMap.isVideoTexture===!0&&cn.getTransfer(R.emissiveMap.colorSpace)===wn,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===_s,flipSided:R.side===mi,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:it&&R.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(it&&R.extensions.multiDraw===!0||Ze)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Wt.vertexUv1s=m.has(1),Wt.vertexUv2s=m.has(2),Wt.vertexUv3s=m.has(3),m.clear(),Wt}function g(R){const A=[];if(R.shaderID?A.push(R.shaderID):(A.push(R.customVertexShaderID),A.push(R.customFragmentShaderID)),R.defines!==void 0)for(const V in R.defines)A.push(V),A.push(R.defines[V]);return R.isRawShaderMaterial===!1&&(I(A,R),L(A,R),A.push(a.outputColorSpace)),A.push(R.customProgramCacheKey),A.join()}function I(R,A){R.push(A.precision),R.push(A.outputColorSpace),R.push(A.envMapMode),R.push(A.envMapCubeUVHeight),R.push(A.mapUv),R.push(A.alphaMapUv),R.push(A.lightMapUv),R.push(A.aoMapUv),R.push(A.bumpMapUv),R.push(A.normalMapUv),R.push(A.displacementMapUv),R.push(A.emissiveMapUv),R.push(A.metalnessMapUv),R.push(A.roughnessMapUv),R.push(A.anisotropyMapUv),R.push(A.clearcoatMapUv),R.push(A.clearcoatNormalMapUv),R.push(A.clearcoatRoughnessMapUv),R.push(A.iridescenceMapUv),R.push(A.iridescenceThicknessMapUv),R.push(A.sheenColorMapUv),R.push(A.sheenRoughnessMapUv),R.push(A.specularMapUv),R.push(A.specularColorMapUv),R.push(A.specularIntensityMapUv),R.push(A.transmissionMapUv),R.push(A.thicknessMapUv),R.push(A.combine),R.push(A.fogExp2),R.push(A.sizeAttenuation),R.push(A.morphTargetsCount),R.push(A.morphAttributeCount),R.push(A.numDirLights),R.push(A.numPointLights),R.push(A.numSpotLights),R.push(A.numSpotLightMaps),R.push(A.numHemiLights),R.push(A.numRectAreaLights),R.push(A.numDirLightShadows),R.push(A.numPointLightShadows),R.push(A.numSpotLightShadows),R.push(A.numSpotLightShadowsWithMaps),R.push(A.numLightProbes),R.push(A.shadowMapType),R.push(A.toneMapping),R.push(A.numClippingPlanes),R.push(A.numClipIntersection),R.push(A.depthPacking)}function L(R,A){f.disableAll(),A.supportsVertexTextures&&f.enable(0),A.instancing&&f.enable(1),A.instancingColor&&f.enable(2),A.instancingMorph&&f.enable(3),A.matcap&&f.enable(4),A.envMap&&f.enable(5),A.normalMapObjectSpace&&f.enable(6),A.normalMapTangentSpace&&f.enable(7),A.clearcoat&&f.enable(8),A.iridescence&&f.enable(9),A.alphaTest&&f.enable(10),A.vertexColors&&f.enable(11),A.vertexAlphas&&f.enable(12),A.vertexUv1s&&f.enable(13),A.vertexUv2s&&f.enable(14),A.vertexUv3s&&f.enable(15),A.vertexTangents&&f.enable(16),A.anisotropy&&f.enable(17),A.alphaHash&&f.enable(18),A.batching&&f.enable(19),A.dispersion&&f.enable(20),A.batchingColor&&f.enable(21),R.push(f.mask),f.disableAll(),A.fog&&f.enable(0),A.useFog&&f.enable(1),A.flatShading&&f.enable(2),A.logarithmicDepthBuffer&&f.enable(3),A.reverseDepthBuffer&&f.enable(4),A.skinning&&f.enable(5),A.morphTargets&&f.enable(6),A.morphNormals&&f.enable(7),A.morphColors&&f.enable(8),A.premultipliedAlpha&&f.enable(9),A.shadowMapEnabled&&f.enable(10),A.doubleSided&&f.enable(11),A.flipSided&&f.enable(12),A.useDepthPacking&&f.enable(13),A.dithering&&f.enable(14),A.transmission&&f.enable(15),A.sheen&&f.enable(16),A.opaque&&f.enable(17),A.pointsUvs&&f.enable(18),A.decodeVideoTexture&&f.enable(19),A.decodeVideoTextureEmissive&&f.enable(20),A.alphaToCoverage&&f.enable(21),R.push(f.mask)}function C(R){const A=w[R.type];let V;if(A){const ie=Ga[A];V=I2.clone(ie.uniforms)}else V=R.uniforms;return V}function X(R,A){let V;for(let ie=0,ee=v.length;ie<ee;ie++){const se=v[ie];if(se.cacheKey===A){V=se,++V.usedTimes;break}}return V===void 0&&(V=new QL(a,A,R,u),v.push(V)),V}function k(R){if(--R.usedTimes===0){const A=v.indexOf(R);v[A]=v[v.length-1],v.pop(),R.destroy()}}function F(R){p.remove(R)}function j(){p.dispose()}return{getParameters:y,getProgramCacheKey:g,getUniforms:C,acquireProgram:X,releaseProgram:k,releaseShaderCache:F,programs:v,dispose:j}}function iU(){let a=new WeakMap;function e(d){return a.has(d)}function n(d){let f=a.get(d);return f===void 0&&(f={},a.set(d,f)),f}function i(d){a.delete(d)}function s(d,f,p){a.get(d)[f]=p}function u(){a=new WeakMap}return{has:e,get:n,remove:i,update:s,dispose:u}}function aU(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.material.id!==e.material.id?a.material.id-e.material.id:a.z!==e.z?a.z-e.z:a.id-e.id}function zS(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.z!==e.z?e.z-a.z:a.id-e.id}function BS(){const a=[];let e=0;const n=[],i=[],s=[];function u(){e=0,n.length=0,i.length=0,s.length=0}function d(x,_,S,w,b,y){let g=a[e];return g===void 0?(g={id:x.id,object:x,geometry:_,material:S,groupOrder:w,renderOrder:x.renderOrder,z:b,group:y},a[e]=g):(g.id=x.id,g.object=x,g.geometry=_,g.material=S,g.groupOrder=w,g.renderOrder=x.renderOrder,g.z=b,g.group=y),e++,g}function f(x,_,S,w,b,y){const g=d(x,_,S,w,b,y);S.transmission>0?i.push(g):S.transparent===!0?s.push(g):n.push(g)}function p(x,_,S,w,b,y){const g=d(x,_,S,w,b,y);S.transmission>0?i.unshift(g):S.transparent===!0?s.unshift(g):n.unshift(g)}function m(x,_){n.length>1&&n.sort(x||aU),i.length>1&&i.sort(_||zS),s.length>1&&s.sort(_||zS)}function v(){for(let x=e,_=a.length;x<_;x++){const S=a[x];if(S.id===null)break;S.id=null,S.object=null,S.geometry=null,S.material=null,S.group=null}}return{opaque:n,transmissive:i,transparent:s,init:u,push:f,unshift:p,finish:v,sort:m}}function oU(){let a=new WeakMap;function e(i,s){const u=a.get(i);let d;return u===void 0?(d=new BS,a.set(i,[d])):s>=u.length?(d=new BS,u.push(d)):d=u[s],d}function n(){a=new WeakMap}return{get:e,dispose:n}}function sU(){const a={};return{get:function(e){if(a[e.id]!==void 0)return a[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new De,color:new An};break;case"SpotLight":n={position:new De,direction:new De,color:new An,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new De,color:new An,distance:0,decay:0};break;case"HemisphereLight":n={direction:new De,skyColor:new An,groundColor:new An};break;case"RectAreaLight":n={color:new An,position:new De,halfWidth:new De,halfHeight:new De};break}return a[e.id]=n,n}}}function lU(){const a={};return{get:function(e){if(a[e.id]!==void 0)return a[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Un};break;case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Un};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Un,shadowCameraNear:1,shadowCameraFar:1e3};break}return a[e.id]=n,n}}}let uU=0;function cU(a,e){return(e.castShadow?2:0)-(a.castShadow?2:0)+(e.map?1:0)-(a.map?1:0)}function dU(a){const e=new sU,n=lU(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let m=0;m<9;m++)i.probe.push(new De);const s=new De,u=new rr,d=new rr;function f(m){let v=0,x=0,_=0;for(let R=0;R<9;R++)i.probe[R].set(0,0,0);let S=0,w=0,b=0,y=0,g=0,I=0,L=0,C=0,X=0,k=0,F=0;m.sort(cU);for(let R=0,A=m.length;R<A;R++){const V=m[R],ie=V.color,ee=V.intensity,se=V.distance,he=V.shadow&&V.shadow.map?V.shadow.map.texture:null;if(V.isAmbientLight)v+=ie.r*ee,x+=ie.g*ee,_+=ie.b*ee;else if(V.isLightProbe){for(let oe=0;oe<9;oe++)i.probe[oe].addScaledVector(V.sh.coefficients[oe],ee);F++}else if(V.isDirectionalLight){const oe=e.get(V);if(oe.color.copy(V.color).multiplyScalar(V.intensity),V.castShadow){const ue=V.shadow,B=n.get(V);B.shadowIntensity=ue.intensity,B.shadowBias=ue.bias,B.shadowNormalBias=ue.normalBias,B.shadowRadius=ue.radius,B.shadowMapSize=ue.mapSize,i.directionalShadow[S]=B,i.directionalShadowMap[S]=he,i.directionalShadowMatrix[S]=V.shadow.matrix,I++}i.directional[S]=oe,S++}else if(V.isSpotLight){const oe=e.get(V);oe.position.setFromMatrixPosition(V.matrixWorld),oe.color.copy(ie).multiplyScalar(ee),oe.distance=se,oe.coneCos=Math.cos(V.angle),oe.penumbraCos=Math.cos(V.angle*(1-V.penumbra)),oe.decay=V.decay,i.spot[b]=oe;const ue=V.shadow;if(V.map&&(i.spotLightMap[X]=V.map,X++,ue.updateMatrices(V),V.castShadow&&k++),i.spotLightMatrix[b]=ue.matrix,V.castShadow){const B=n.get(V);B.shadowIntensity=ue.intensity,B.shadowBias=ue.bias,B.shadowNormalBias=ue.normalBias,B.shadowRadius=ue.radius,B.shadowMapSize=ue.mapSize,i.spotShadow[b]=B,i.spotShadowMap[b]=he,C++}b++}else if(V.isRectAreaLight){const oe=e.get(V);oe.color.copy(ie).multiplyScalar(ee),oe.halfWidth.set(V.width*.5,0,0),oe.halfHeight.set(0,V.height*.5,0),i.rectArea[y]=oe,y++}else if(V.isPointLight){const oe=e.get(V);if(oe.color.copy(V.color).multiplyScalar(V.intensity),oe.distance=V.distance,oe.decay=V.decay,V.castShadow){const ue=V.shadow,B=n.get(V);B.shadowIntensity=ue.intensity,B.shadowBias=ue.bias,B.shadowNormalBias=ue.normalBias,B.shadowRadius=ue.radius,B.shadowMapSize=ue.mapSize,B.shadowCameraNear=ue.camera.near,B.shadowCameraFar=ue.camera.far,i.pointShadow[w]=B,i.pointShadowMap[w]=he,i.pointShadowMatrix[w]=V.shadow.matrix,L++}i.point[w]=oe,w++}else if(V.isHemisphereLight){const oe=e.get(V);oe.skyColor.copy(V.color).multiplyScalar(ee),oe.groundColor.copy(V.groundColor).multiplyScalar(ee),i.hemi[g]=oe,g++}}y>0&&(a.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=dt.LTC_FLOAT_1,i.rectAreaLTC2=dt.LTC_FLOAT_2):(i.rectAreaLTC1=dt.LTC_HALF_1,i.rectAreaLTC2=dt.LTC_HALF_2)),i.ambient[0]=v,i.ambient[1]=x,i.ambient[2]=_;const j=i.hash;(j.directionalLength!==S||j.pointLength!==w||j.spotLength!==b||j.rectAreaLength!==y||j.hemiLength!==g||j.numDirectionalShadows!==I||j.numPointShadows!==L||j.numSpotShadows!==C||j.numSpotMaps!==X||j.numLightProbes!==F)&&(i.directional.length=S,i.spot.length=b,i.rectArea.length=y,i.point.length=w,i.hemi.length=g,i.directionalShadow.length=I,i.directionalShadowMap.length=I,i.pointShadow.length=L,i.pointShadowMap.length=L,i.spotShadow.length=C,i.spotShadowMap.length=C,i.directionalShadowMatrix.length=I,i.pointShadowMatrix.length=L,i.spotLightMatrix.length=C+X-k,i.spotLightMap.length=X,i.numSpotLightShadowsWithMaps=k,i.numLightProbes=F,j.directionalLength=S,j.pointLength=w,j.spotLength=b,j.rectAreaLength=y,j.hemiLength=g,j.numDirectionalShadows=I,j.numPointShadows=L,j.numSpotShadows=C,j.numSpotMaps=X,j.numLightProbes=F,i.version=uU++)}function p(m,v){let x=0,_=0,S=0,w=0,b=0;const y=v.matrixWorldInverse;for(let g=0,I=m.length;g<I;g++){const L=m[g];if(L.isDirectionalLight){const C=i.directional[x];C.direction.setFromMatrixPosition(L.matrixWorld),s.setFromMatrixPosition(L.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(y),x++}else if(L.isSpotLight){const C=i.spot[S];C.position.setFromMatrixPosition(L.matrixWorld),C.position.applyMatrix4(y),C.direction.setFromMatrixPosition(L.matrixWorld),s.setFromMatrixPosition(L.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(y),S++}else if(L.isRectAreaLight){const C=i.rectArea[w];C.position.setFromMatrixPosition(L.matrixWorld),C.position.applyMatrix4(y),d.identity(),u.copy(L.matrixWorld),u.premultiply(y),d.extractRotation(u),C.halfWidth.set(L.width*.5,0,0),C.halfHeight.set(0,L.height*.5,0),C.halfWidth.applyMatrix4(d),C.halfHeight.applyMatrix4(d),w++}else if(L.isPointLight){const C=i.point[_];C.position.setFromMatrixPosition(L.matrixWorld),C.position.applyMatrix4(y),_++}else if(L.isHemisphereLight){const C=i.hemi[b];C.direction.setFromMatrixPosition(L.matrixWorld),C.direction.transformDirection(y),b++}}}return{setup:f,setupView:p,state:i}}function HS(a){const e=new dU(a),n=[],i=[];function s(v){m.camera=v,n.length=0,i.length=0}function u(v){n.push(v)}function d(v){i.push(v)}function f(){e.setup(n)}function p(v){e.setupView(n,v)}const m={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:s,state:m,setupLights:f,setupLightsView:p,pushLight:u,pushShadow:d}}function fU(a){let e=new WeakMap;function n(s,u=0){const d=e.get(s);let f;return d===void 0?(f=new HS(a),e.set(s,[f])):u>=d.length?(f=new HS(a),d.push(f)):f=d[u],f}function i(){e=new WeakMap}return{get:n,dispose:i}}const hU=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,pU=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function mU(a,e,n){let i=new Z1;const s=new Un,u=new Un,d=new Qn,f=new V2({depthPacking:t2}),p=new G2,m={},v=n.maxTextureSize,x={[Zs]:mi,[mi]:Zs,[_s]:_s},_=new Js({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Un},radius:{value:4}},vertexShader:hU,fragmentShader:pU}),S=_.clone();S.defines.HORIZONTAL_PASS=1;const w=new el;w.setAttribute("position",new Ka(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new qa(w,_),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=A1;let g=this.type;this.render=function(k,F,j){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||k.length===0)return;const R=a.getRenderTarget(),A=a.getActiveCubeFace(),V=a.getActiveMipmapLevel(),ie=a.state;ie.setBlending(qs),ie.buffers.color.setClear(1,1,1,1),ie.buffers.depth.setTest(!0),ie.setScissorTest(!1);const ee=g!==gs&&this.type===gs,se=g===gs&&this.type!==gs;for(let he=0,oe=k.length;he<oe;he++){const ue=k[he],B=ue.shadow;if(B===void 0){console.warn("THREE.WebGLShadowMap:",ue,"has no shadow.");continue}if(B.autoUpdate===!1&&B.needsUpdate===!1)continue;s.copy(B.mapSize);const ae=B.getFrameExtents();if(s.multiply(ae),u.copy(B.mapSize),(s.x>v||s.y>v)&&(s.x>v&&(u.x=Math.floor(v/ae.x),s.x=u.x*ae.x,B.mapSize.x=u.x),s.y>v&&(u.y=Math.floor(v/ae.y),s.y=u.y*ae.y,B.mapSize.y=u.y)),B.map===null||ee===!0||se===!0){const U=this.type!==gs?{minFilter:Ha,magFilter:Ha}:{};B.map!==null&&B.map.dispose(),B.map=new oc(s.x,s.y,U),B.map.texture.name=ue.name+".shadowMap",B.camera.updateProjectionMatrix()}a.setRenderTarget(B.map),a.clear();const re=B.getViewportCount();for(let U=0;U<re;U++){const te=B.getViewport(U);d.set(u.x*te.x,u.y*te.y,u.x*te.z,u.y*te.w),ie.viewport(d),B.updateMatrices(ue,U),i=B.getFrustum(),C(F,j,B.camera,ue,this.type)}B.isPointLightShadow!==!0&&this.type===gs&&I(B,j),B.needsUpdate=!1}g=this.type,y.needsUpdate=!1,a.setRenderTarget(R,A,V)};function I(k,F){const j=e.update(b);_.defines.VSM_SAMPLES!==k.blurSamples&&(_.defines.VSM_SAMPLES=k.blurSamples,S.defines.VSM_SAMPLES=k.blurSamples,_.needsUpdate=!0,S.needsUpdate=!0),k.mapPass===null&&(k.mapPass=new oc(s.x,s.y)),_.uniforms.shadow_pass.value=k.map.texture,_.uniforms.resolution.value=k.mapSize,_.uniforms.radius.value=k.radius,a.setRenderTarget(k.mapPass),a.clear(),a.renderBufferDirect(F,null,j,_,b,null),S.uniforms.shadow_pass.value=k.mapPass.texture,S.uniforms.resolution.value=k.mapSize,S.uniforms.radius.value=k.radius,a.setRenderTarget(k.map),a.clear(),a.renderBufferDirect(F,null,j,S,b,null)}function L(k,F,j,R){let A=null;const V=j.isPointLight===!0?k.customDistanceMaterial:k.customDepthMaterial;if(V!==void 0)A=V;else if(A=j.isPointLight===!0?p:f,a.localClippingEnabled&&F.clipShadows===!0&&Array.isArray(F.clippingPlanes)&&F.clippingPlanes.length!==0||F.displacementMap&&F.displacementScale!==0||F.alphaMap&&F.alphaTest>0||F.map&&F.alphaTest>0){const ie=A.uuid,ee=F.uuid;let se=m[ie];se===void 0&&(se={},m[ie]=se);let he=se[ee];he===void 0&&(he=A.clone(),se[ee]=he,F.addEventListener("dispose",X)),A=he}if(A.visible=F.visible,A.wireframe=F.wireframe,R===gs?A.side=F.shadowSide!==null?F.shadowSide:F.side:A.side=F.shadowSide!==null?F.shadowSide:x[F.side],A.alphaMap=F.alphaMap,A.alphaTest=F.alphaTest,A.map=F.map,A.clipShadows=F.clipShadows,A.clippingPlanes=F.clippingPlanes,A.clipIntersection=F.clipIntersection,A.displacementMap=F.displacementMap,A.displacementScale=F.displacementScale,A.displacementBias=F.displacementBias,A.wireframeLinewidth=F.wireframeLinewidth,A.linewidth=F.linewidth,j.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const ie=a.properties.get(A);ie.light=j}return A}function C(k,F,j,R,A){if(k.visible===!1)return;if(k.layers.test(F.layers)&&(k.isMesh||k.isLine||k.isPoints)&&(k.castShadow||k.receiveShadow&&A===gs)&&(!k.frustumCulled||i.intersectsObject(k))){k.modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,k.matrixWorld);const ie=e.update(k),ee=k.material;if(Array.isArray(ee)){const se=ie.groups;for(let he=0,oe=se.length;he<oe;he++){const ue=se[he],B=ee[ue.materialIndex];if(B&&B.visible){const ae=L(k,B,R,A);k.onBeforeShadow(a,k,F,j,ie,ae,ue),a.renderBufferDirect(j,null,ie,ae,k,ue),k.onAfterShadow(a,k,F,j,ie,ae,ue)}}}else if(ee.visible){const se=L(k,ee,R,A);k.onBeforeShadow(a,k,F,j,ie,se,null),a.renderBufferDirect(j,null,ie,se,k,null),k.onAfterShadow(a,k,F,j,ie,se,null)}}const V=k.children;for(let ie=0,ee=V.length;ie<ee;ie++)C(V[ie],F,j,R,A)}function X(k){k.target.removeEventListener("dispose",X);for(const F in m){const j=m[F],R=k.target.uuid;R in j&&(j[R].dispose(),delete j[R])}}}const gU={[l0]:u0,[c0]:h0,[d0]:p0,[Qc]:f0,[u0]:l0,[h0]:c0,[p0]:d0,[f0]:Qc};function vU(a,e){function n(){let G=!1;const we=new Qn;let ne=null;const de=new Qn(0,0,0,0);return{setMask:function(Re){ne!==Re&&!G&&(a.colorMask(Re,Re,Re,Re),ne=Re)},setLocked:function(Re){G=Re},setClear:function(Re,be,it,bt,Wt){Wt===!0&&(Re*=bt,be*=bt,it*=bt),we.set(Re,be,it,bt),de.equals(we)===!1&&(a.clearColor(Re,be,it,bt),de.copy(we))},reset:function(){G=!1,ne=null,de.set(-1,0,0,0)}}}function i(){let G=!1,we=!1,ne=null,de=null,Re=null;return{setReversed:function(be){if(we!==be){const it=e.get("EXT_clip_control");we?it.clipControlEXT(it.LOWER_LEFT_EXT,it.ZERO_TO_ONE_EXT):it.clipControlEXT(it.LOWER_LEFT_EXT,it.NEGATIVE_ONE_TO_ONE_EXT);const bt=Re;Re=null,this.setClear(bt)}we=be},getReversed:function(){return we},setTest:function(be){be?ve(a.DEPTH_TEST):Ee(a.DEPTH_TEST)},setMask:function(be){ne!==be&&!G&&(a.depthMask(be),ne=be)},setFunc:function(be){if(we&&(be=gU[be]),de!==be){switch(be){case l0:a.depthFunc(a.NEVER);break;case u0:a.depthFunc(a.ALWAYS);break;case c0:a.depthFunc(a.LESS);break;case Qc:a.depthFunc(a.LEQUAL);break;case d0:a.depthFunc(a.EQUAL);break;case f0:a.depthFunc(a.GEQUAL);break;case h0:a.depthFunc(a.GREATER);break;case p0:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}de=be}},setLocked:function(be){G=be},setClear:function(be){Re!==be&&(we&&(be=1-be),a.clearDepth(be),Re=be)},reset:function(){G=!1,ne=null,de=null,Re=null,we=!1}}}function s(){let G=!1,we=null,ne=null,de=null,Re=null,be=null,it=null,bt=null,Wt=null;return{setTest:function(ht){G||(ht?ve(a.STENCIL_TEST):Ee(a.STENCIL_TEST))},setMask:function(ht){we!==ht&&!G&&(a.stencilMask(ht),we=ht)},setFunc:function(ht,_n,fn){(ne!==ht||de!==_n||Re!==fn)&&(a.stencilFunc(ht,_n,fn),ne=ht,de=_n,Re=fn)},setOp:function(ht,_n,fn){(be!==ht||it!==_n||bt!==fn)&&(a.stencilOp(ht,_n,fn),be=ht,it=_n,bt=fn)},setLocked:function(ht){G=ht},setClear:function(ht){Wt!==ht&&(a.clearStencil(ht),Wt=ht)},reset:function(){G=!1,we=null,ne=null,de=null,Re=null,be=null,it=null,bt=null,Wt=null}}}const u=new n,d=new i,f=new s,p=new WeakMap,m=new WeakMap;let v={},x={},_=new WeakMap,S=[],w=null,b=!1,y=null,g=null,I=null,L=null,C=null,X=null,k=null,F=new An(0,0,0),j=0,R=!1,A=null,V=null,ie=null,ee=null,se=null;const he=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let oe=!1,ue=0;const B=a.getParameter(a.VERSION);B.indexOf("WebGL")!==-1?(ue=parseFloat(/^WebGL (\d)/.exec(B)[1]),oe=ue>=1):B.indexOf("OpenGL ES")!==-1&&(ue=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),oe=ue>=2);let ae=null,re={};const U=a.getParameter(a.SCISSOR_BOX),te=a.getParameter(a.VIEWPORT),Ue=new Qn().fromArray(U),K=new Qn().fromArray(te);function le(G,we,ne,de){const Re=new Uint8Array(4),be=a.createTexture();a.bindTexture(G,be),a.texParameteri(G,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(G,a.TEXTURE_MAG_FILTER,a.NEAREST);for(let it=0;it<ne;it++)G===a.TEXTURE_3D||G===a.TEXTURE_2D_ARRAY?a.texImage3D(we,0,a.RGBA,1,1,de,0,a.RGBA,a.UNSIGNED_BYTE,Re):a.texImage2D(we+it,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,Re);return be}const Se={};Se[a.TEXTURE_2D]=le(a.TEXTURE_2D,a.TEXTURE_2D,1),Se[a.TEXTURE_CUBE_MAP]=le(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6),Se[a.TEXTURE_2D_ARRAY]=le(a.TEXTURE_2D_ARRAY,a.TEXTURE_2D_ARRAY,1,1),Se[a.TEXTURE_3D]=le(a.TEXTURE_3D,a.TEXTURE_3D,1,1),u.setClear(0,0,0,1),d.setClear(1),f.setClear(0),ve(a.DEPTH_TEST),d.setFunc(Qc),lt(!1),ot(qy),ve(a.CULL_FACE),O(qs);function ve(G){v[G]!==!0&&(a.enable(G),v[G]=!0)}function Ee(G){v[G]!==!1&&(a.disable(G),v[G]=!1)}function Ie(G,we){return x[G]!==we?(a.bindFramebuffer(G,we),x[G]=we,G===a.DRAW_FRAMEBUFFER&&(x[a.FRAMEBUFFER]=we),G===a.FRAMEBUFFER&&(x[a.DRAW_FRAMEBUFFER]=we),!0):!1}function Ze(G,we){let ne=S,de=!1;if(G){ne=_.get(we),ne===void 0&&(ne=[],_.set(we,ne));const Re=G.textures;if(ne.length!==Re.length||ne[0]!==a.COLOR_ATTACHMENT0){for(let be=0,it=Re.length;be<it;be++)ne[be]=a.COLOR_ATTACHMENT0+be;ne.length=Re.length,de=!0}}else ne[0]!==a.BACK&&(ne[0]=a.BACK,de=!0);de&&a.drawBuffers(ne)}function St(G){return w!==G?(a.useProgram(G),w=G,!0):!1}const ft={[$u]:a.FUNC_ADD,[AC]:a.FUNC_SUBTRACT,[RC]:a.FUNC_REVERSE_SUBTRACT};ft[CC]=a.MIN,ft[PC]=a.MAX;const Tt={[DC]:a.ZERO,[LC]:a.ONE,[UC]:a.SRC_COLOR,[o0]:a.SRC_ALPHA,[zC]:a.SRC_ALPHA_SATURATE,[OC]:a.DST_COLOR,[NC]:a.DST_ALPHA,[IC]:a.ONE_MINUS_SRC_COLOR,[s0]:a.ONE_MINUS_SRC_ALPHA,[kC]:a.ONE_MINUS_DST_COLOR,[FC]:a.ONE_MINUS_DST_ALPHA,[BC]:a.CONSTANT_COLOR,[HC]:a.ONE_MINUS_CONSTANT_COLOR,[VC]:a.CONSTANT_ALPHA,[GC]:a.ONE_MINUS_CONSTANT_ALPHA};function O(G,we,ne,de,Re,be,it,bt,Wt,ht){if(G===qs){b===!0&&(Ee(a.BLEND),b=!1);return}if(b===!1&&(ve(a.BLEND),b=!0),G!==bC){if(G!==y||ht!==R){if((g!==$u||C!==$u)&&(a.blendEquation(a.FUNC_ADD),g=$u,C=$u),ht)switch(G){case Gc:a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case Yy:a.blendFunc(a.ONE,a.ONE);break;case $y:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case Ky:a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Gc:a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case Yy:a.blendFunc(a.SRC_ALPHA,a.ONE);break;case $y:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case Ky:a.blendFunc(a.ZERO,a.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}I=null,L=null,X=null,k=null,F.set(0,0,0),j=0,y=G,R=ht}return}Re=Re||we,be=be||ne,it=it||de,(we!==g||Re!==C)&&(a.blendEquationSeparate(ft[we],ft[Re]),g=we,C=Re),(ne!==I||de!==L||be!==X||it!==k)&&(a.blendFuncSeparate(Tt[ne],Tt[de],Tt[be],Tt[it]),I=ne,L=de,X=be,k=it),(bt.equals(F)===!1||Wt!==j)&&(a.blendColor(bt.r,bt.g,bt.b,Wt),F.copy(bt),j=Wt),y=G,R=!1}function dn(G,we){G.side===_s?Ee(a.CULL_FACE):ve(a.CULL_FACE);let ne=G.side===mi;we&&(ne=!ne),lt(ne),G.blending===Gc&&G.transparent===!1?O(qs):O(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),d.setFunc(G.depthFunc),d.setTest(G.depthTest),d.setMask(G.depthWrite),u.setMask(G.colorWrite);const de=G.stencilWrite;f.setTest(de),de&&(f.setMask(G.stencilWriteMask),f.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),f.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),yt(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?ve(a.SAMPLE_ALPHA_TO_COVERAGE):Ee(a.SAMPLE_ALPHA_TO_COVERAGE)}function lt(G){A!==G&&(G?a.frontFace(a.CW):a.frontFace(a.CCW),A=G)}function ot(G){G!==EC?(ve(a.CULL_FACE),G!==V&&(G===qy?a.cullFace(a.BACK):G===TC?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):Ee(a.CULL_FACE),V=G}function Xe(G){G!==ie&&(oe&&a.lineWidth(G),ie=G)}function yt(G,we,ne){G?(ve(a.POLYGON_OFFSET_FILL),(ee!==we||se!==ne)&&(a.polygonOffset(we,ne),ee=we,se=ne)):Ee(a.POLYGON_OFFSET_FILL)}function We(G){G?ve(a.SCISSOR_TEST):Ee(a.SCISSOR_TEST)}function P(G){G===void 0&&(G=a.TEXTURE0+he-1),ae!==G&&(a.activeTexture(G),ae=G)}function E(G,we,ne){ne===void 0&&(ae===null?ne=a.TEXTURE0+he-1:ne=ae);let de=re[ne];de===void 0&&(de={type:void 0,texture:void 0},re[ne]=de),(de.type!==G||de.texture!==we)&&(ae!==ne&&(a.activeTexture(ne),ae=ne),a.bindTexture(G,we||Se[G]),de.type=G,de.texture=we)}function $(){const G=re[ae];G!==void 0&&G.type!==void 0&&(a.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function fe(){try{a.compressedTexImage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ge(){try{a.compressedTexImage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ce(){try{a.texSubImage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ve(){try{a.texSubImage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Te(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ne(){try{a.compressedTexSubImage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function at(){try{a.texStorage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ye(){try{a.texStorage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Oe(){try{a.texImage2D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ye(){try{a.texImage3D.apply(a,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Je(G){Ue.equals(G)===!1&&(a.scissor(G.x,G.y,G.z,G.w),Ue.copy(G))}function ke(G){K.equals(G)===!1&&(a.viewport(G.x,G.y,G.z,G.w),K.copy(G))}function st(G,we){let ne=m.get(we);ne===void 0&&(ne=new WeakMap,m.set(we,ne));let de=ne.get(G);de===void 0&&(de=a.getUniformBlockIndex(we,G.name),ne.set(G,de))}function nt(G,we){const ne=m.get(we).get(G);p.get(we)!==ne&&(a.uniformBlockBinding(we,ne,G.__bindingPointIndex),p.set(we,ne))}function xt(){a.disable(a.BLEND),a.disable(a.CULL_FACE),a.disable(a.DEPTH_TEST),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SCISSOR_TEST),a.disable(a.STENCIL_TEST),a.disable(a.SAMPLE_ALPHA_TO_COVERAGE),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ONE,a.ZERO),a.blendFuncSeparate(a.ONE,a.ZERO,a.ONE,a.ZERO),a.blendColor(0,0,0,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(a.LESS),d.setReversed(!1),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(a.ALWAYS,0,4294967295),a.stencilOp(a.KEEP,a.KEEP,a.KEEP),a.clearStencil(0),a.cullFace(a.BACK),a.frontFace(a.CCW),a.polygonOffset(0,0),a.activeTexture(a.TEXTURE0),a.bindFramebuffer(a.FRAMEBUFFER,null),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),a.bindFramebuffer(a.READ_FRAMEBUFFER,null),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),v={},ae=null,re={},x={},_=new WeakMap,S=[],w=null,b=!1,y=null,g=null,I=null,L=null,C=null,X=null,k=null,F=new An(0,0,0),j=0,R=!1,A=null,V=null,ie=null,ee=null,se=null,Ue.set(0,0,a.canvas.width,a.canvas.height),K.set(0,0,a.canvas.width,a.canvas.height),u.reset(),d.reset(),f.reset()}return{buffers:{color:u,depth:d,stencil:f},enable:ve,disable:Ee,bindFramebuffer:Ie,drawBuffers:Ze,useProgram:St,setBlending:O,setMaterial:dn,setFlipSided:lt,setCullFace:ot,setLineWidth:Xe,setPolygonOffset:yt,setScissorTest:We,activeTexture:P,bindTexture:E,unbindTexture:$,compressedTexImage2D:fe,compressedTexImage3D:ge,texImage2D:Oe,texImage3D:Ye,updateUBOMapping:st,uniformBlockBinding:nt,texStorage2D:at,texStorage3D:ye,texSubImage2D:ce,texSubImage3D:Ve,compressedTexSubImage2D:Te,compressedTexSubImage3D:Ne,scissor:Je,viewport:ke,reset:xt}}function _U(a,e,n,i,s,u,d){const f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),m=new Un,v=new WeakMap;let x;const _=new WeakMap;let S=!1;try{S=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(P,E){return S?new OffscreenCanvas(P,E):ym("canvas")}function b(P,E,$){let fe=1;const ge=We(P);if((ge.width>$||ge.height>$)&&(fe=$/Math.max(ge.width,ge.height)),fe<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const ce=Math.floor(fe*ge.width),Ve=Math.floor(fe*ge.height);x===void 0&&(x=w(ce,Ve));const Te=E?w(ce,Ve):x;return Te.width=ce,Te.height=Ve,Te.getContext("2d").drawImage(P,0,0,ce,Ve),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ge.width+"x"+ge.height+") to ("+ce+"x"+Ve+")."),Te}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ge.width+"x"+ge.height+")."),P;return P}function y(P){return P.generateMipmaps}function g(P){a.generateMipmap(P)}function I(P){return P.isWebGLCubeRenderTarget?a.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?a.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?a.TEXTURE_2D_ARRAY:a.TEXTURE_2D}function L(P,E,$,fe,ge=!1){if(P!==null){if(a[P]!==void 0)return a[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let ce=E;if(E===a.RED&&($===a.FLOAT&&(ce=a.R32F),$===a.HALF_FLOAT&&(ce=a.R16F),$===a.UNSIGNED_BYTE&&(ce=a.R8)),E===a.RED_INTEGER&&($===a.UNSIGNED_BYTE&&(ce=a.R8UI),$===a.UNSIGNED_SHORT&&(ce=a.R16UI),$===a.UNSIGNED_INT&&(ce=a.R32UI),$===a.BYTE&&(ce=a.R8I),$===a.SHORT&&(ce=a.R16I),$===a.INT&&(ce=a.R32I)),E===a.RG&&($===a.FLOAT&&(ce=a.RG32F),$===a.HALF_FLOAT&&(ce=a.RG16F),$===a.UNSIGNED_BYTE&&(ce=a.RG8)),E===a.RG_INTEGER&&($===a.UNSIGNED_BYTE&&(ce=a.RG8UI),$===a.UNSIGNED_SHORT&&(ce=a.RG16UI),$===a.UNSIGNED_INT&&(ce=a.RG32UI),$===a.BYTE&&(ce=a.RG8I),$===a.SHORT&&(ce=a.RG16I),$===a.INT&&(ce=a.RG32I)),E===a.RGB_INTEGER&&($===a.UNSIGNED_BYTE&&(ce=a.RGB8UI),$===a.UNSIGNED_SHORT&&(ce=a.RGB16UI),$===a.UNSIGNED_INT&&(ce=a.RGB32UI),$===a.BYTE&&(ce=a.RGB8I),$===a.SHORT&&(ce=a.RGB16I),$===a.INT&&(ce=a.RGB32I)),E===a.RGBA_INTEGER&&($===a.UNSIGNED_BYTE&&(ce=a.RGBA8UI),$===a.UNSIGNED_SHORT&&(ce=a.RGBA16UI),$===a.UNSIGNED_INT&&(ce=a.RGBA32UI),$===a.BYTE&&(ce=a.RGBA8I),$===a.SHORT&&(ce=a.RGBA16I),$===a.INT&&(ce=a.RGBA32I)),E===a.RGB&&$===a.UNSIGNED_INT_5_9_9_9_REV&&(ce=a.RGB9_E5),E===a.RGBA){const Ve=ge?_m:cn.getTransfer(fe);$===a.FLOAT&&(ce=a.RGBA32F),$===a.HALF_FLOAT&&(ce=a.RGBA16F),$===a.UNSIGNED_BYTE&&(ce=Ve===wn?a.SRGB8_ALPHA8:a.RGBA8),$===a.UNSIGNED_SHORT_4_4_4_4&&(ce=a.RGBA4),$===a.UNSIGNED_SHORT_5_5_5_1&&(ce=a.RGB5_A1)}return(ce===a.R16F||ce===a.R32F||ce===a.RG16F||ce===a.RG32F||ce===a.RGBA16F||ce===a.RGBA32F)&&e.get("EXT_color_buffer_float"),ce}function C(P,E){let $;return P?E===null||E===ac||E===nd?$=a.DEPTH24_STENCIL8:E===Ss?$=a.DEPTH32F_STENCIL8:E===Kh&&($=a.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):E===null||E===ac||E===nd?$=a.DEPTH_COMPONENT24:E===Ss?$=a.DEPTH_COMPONENT32F:E===Kh&&($=a.DEPTH_COMPONENT16),$}function X(P,E){return y(P)===!0||P.isFramebufferTexture&&P.minFilter!==Ha&&P.minFilter!==ja?Math.log2(Math.max(E.width,E.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?E.mipmaps.length:1}function k(P){const E=P.target;E.removeEventListener("dispose",k),j(E),E.isVideoTexture&&v.delete(E)}function F(P){const E=P.target;E.removeEventListener("dispose",F),A(E)}function j(P){const E=i.get(P);if(E.__webglInit===void 0)return;const $=P.source,fe=_.get($);if(fe){const ge=fe[E.__cacheKey];ge.usedTimes--,ge.usedTimes===0&&R(P),Object.keys(fe).length===0&&_.delete($)}i.remove(P)}function R(P){const E=i.get(P);a.deleteTexture(E.__webglTexture);const $=P.source,fe=_.get($);delete fe[E.__cacheKey],d.memory.textures--}function A(P){const E=i.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),i.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let fe=0;fe<6;fe++){if(Array.isArray(E.__webglFramebuffer[fe]))for(let ge=0;ge<E.__webglFramebuffer[fe].length;ge++)a.deleteFramebuffer(E.__webglFramebuffer[fe][ge]);else a.deleteFramebuffer(E.__webglFramebuffer[fe]);E.__webglDepthbuffer&&a.deleteRenderbuffer(E.__webglDepthbuffer[fe])}else{if(Array.isArray(E.__webglFramebuffer))for(let fe=0;fe<E.__webglFramebuffer.length;fe++)a.deleteFramebuffer(E.__webglFramebuffer[fe]);else a.deleteFramebuffer(E.__webglFramebuffer);if(E.__webglDepthbuffer&&a.deleteRenderbuffer(E.__webglDepthbuffer),E.__webglMultisampledFramebuffer&&a.deleteFramebuffer(E.__webglMultisampledFramebuffer),E.__webglColorRenderbuffer)for(let fe=0;fe<E.__webglColorRenderbuffer.length;fe++)E.__webglColorRenderbuffer[fe]&&a.deleteRenderbuffer(E.__webglColorRenderbuffer[fe]);E.__webglDepthRenderbuffer&&a.deleteRenderbuffer(E.__webglDepthRenderbuffer)}const $=P.textures;for(let fe=0,ge=$.length;fe<ge;fe++){const ce=i.get($[fe]);ce.__webglTexture&&(a.deleteTexture(ce.__webglTexture),d.memory.textures--),i.remove($[fe])}i.remove(P)}let V=0;function ie(){V=0}function ee(){const P=V;return P>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+s.maxTextures),V+=1,P}function se(P){const E=[];return E.push(P.wrapS),E.push(P.wrapT),E.push(P.wrapR||0),E.push(P.magFilter),E.push(P.minFilter),E.push(P.anisotropy),E.push(P.internalFormat),E.push(P.format),E.push(P.type),E.push(P.generateMipmaps),E.push(P.premultiplyAlpha),E.push(P.flipY),E.push(P.unpackAlignment),E.push(P.colorSpace),E.join()}function he(P,E){const $=i.get(P);if(P.isVideoTexture&&Xe(P),P.isRenderTargetTexture===!1&&P.version>0&&$.__version!==P.version){const fe=P.image;if(fe===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(fe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{K($,P,E);return}}n.bindTexture(a.TEXTURE_2D,$.__webglTexture,a.TEXTURE0+E)}function oe(P,E){const $=i.get(P);if(P.version>0&&$.__version!==P.version){K($,P,E);return}n.bindTexture(a.TEXTURE_2D_ARRAY,$.__webglTexture,a.TEXTURE0+E)}function ue(P,E){const $=i.get(P);if(P.version>0&&$.__version!==P.version){K($,P,E);return}n.bindTexture(a.TEXTURE_3D,$.__webglTexture,a.TEXTURE0+E)}function B(P,E){const $=i.get(P);if(P.version>0&&$.__version!==P.version){le($,P,E);return}n.bindTexture(a.TEXTURE_CUBE_MAP,$.__webglTexture,a.TEXTURE0+E)}const ae={[v0]:a.REPEAT,[Qu]:a.CLAMP_TO_EDGE,[_0]:a.MIRRORED_REPEAT},re={[Ha]:a.NEAREST,[QC]:a.NEAREST_MIPMAP_NEAREST,[Pp]:a.NEAREST_MIPMAP_LINEAR,[ja]:a.LINEAR,[Gv]:a.LINEAR_MIPMAP_NEAREST,[ec]:a.LINEAR_MIPMAP_LINEAR},U={[i2]:a.NEVER,[c2]:a.ALWAYS,[a2]:a.LESS,[B1]:a.LEQUAL,[o2]:a.EQUAL,[u2]:a.GEQUAL,[s2]:a.GREATER,[l2]:a.NOTEQUAL};function te(P,E){if(E.type===Ss&&e.has("OES_texture_float_linear")===!1&&(E.magFilter===ja||E.magFilter===Gv||E.magFilter===Pp||E.magFilter===ec||E.minFilter===ja||E.minFilter===Gv||E.minFilter===Pp||E.minFilter===ec)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),a.texParameteri(P,a.TEXTURE_WRAP_S,ae[E.wrapS]),a.texParameteri(P,a.TEXTURE_WRAP_T,ae[E.wrapT]),(P===a.TEXTURE_3D||P===a.TEXTURE_2D_ARRAY)&&a.texParameteri(P,a.TEXTURE_WRAP_R,ae[E.wrapR]),a.texParameteri(P,a.TEXTURE_MAG_FILTER,re[E.magFilter]),a.texParameteri(P,a.TEXTURE_MIN_FILTER,re[E.minFilter]),E.compareFunction&&(a.texParameteri(P,a.TEXTURE_COMPARE_MODE,a.COMPARE_REF_TO_TEXTURE),a.texParameteri(P,a.TEXTURE_COMPARE_FUNC,U[E.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(E.magFilter===Ha||E.minFilter!==Pp&&E.minFilter!==ec||E.type===Ss&&e.has("OES_texture_float_linear")===!1)return;if(E.anisotropy>1||i.get(E).__currentAnisotropy){const $=e.get("EXT_texture_filter_anisotropic");a.texParameterf(P,$.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,s.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy}}}function Ue(P,E){let $=!1;P.__webglInit===void 0&&(P.__webglInit=!0,E.addEventListener("dispose",k));const fe=E.source;let ge=_.get(fe);ge===void 0&&(ge={},_.set(fe,ge));const ce=se(E);if(ce!==P.__cacheKey){ge[ce]===void 0&&(ge[ce]={texture:a.createTexture(),usedTimes:0},d.memory.textures++,$=!0),ge[ce].usedTimes++;const Ve=ge[P.__cacheKey];Ve!==void 0&&(ge[P.__cacheKey].usedTimes--,Ve.usedTimes===0&&R(E)),P.__cacheKey=ce,P.__webglTexture=ge[ce].texture}return $}function K(P,E,$){let fe=a.TEXTURE_2D;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(fe=a.TEXTURE_2D_ARRAY),E.isData3DTexture&&(fe=a.TEXTURE_3D);const ge=Ue(P,E),ce=E.source;n.bindTexture(fe,P.__webglTexture,a.TEXTURE0+$);const Ve=i.get(ce);if(ce.version!==Ve.__version||ge===!0){n.activeTexture(a.TEXTURE0+$);const Te=cn.getPrimaries(cn.workingColorSpace),Ne=E.colorSpace===Ws?null:cn.getPrimaries(E.colorSpace),at=E.colorSpace===Ws||Te===Ne?a.NONE:a.BROWSER_DEFAULT_WEBGL;a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,E.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,E.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,at);let ye=b(E.image,!1,s.maxTextureSize);ye=yt(E,ye);const Oe=u.convert(E.format,E.colorSpace),Ye=u.convert(E.type);let Je=L(E.internalFormat,Oe,Ye,E.colorSpace,E.isVideoTexture);te(fe,E);let ke;const st=E.mipmaps,nt=E.isVideoTexture!==!0,xt=Ve.__version===void 0||ge===!0,G=ce.dataReady,we=X(E,ye);if(E.isDepthTexture)Je=C(E.format===rd,E.type),xt&&(nt?n.texStorage2D(a.TEXTURE_2D,1,Je,ye.width,ye.height):n.texImage2D(a.TEXTURE_2D,0,Je,ye.width,ye.height,0,Oe,Ye,null));else if(E.isDataTexture)if(st.length>0){nt&&xt&&n.texStorage2D(a.TEXTURE_2D,we,Je,st[0].width,st[0].height);for(let ne=0,de=st.length;ne<de;ne++)ke=st[ne],nt?G&&n.texSubImage2D(a.TEXTURE_2D,ne,0,0,ke.width,ke.height,Oe,Ye,ke.data):n.texImage2D(a.TEXTURE_2D,ne,Je,ke.width,ke.height,0,Oe,Ye,ke.data);E.generateMipmaps=!1}else nt?(xt&&n.texStorage2D(a.TEXTURE_2D,we,Je,ye.width,ye.height),G&&n.texSubImage2D(a.TEXTURE_2D,0,0,0,ye.width,ye.height,Oe,Ye,ye.data)):n.texImage2D(a.TEXTURE_2D,0,Je,ye.width,ye.height,0,Oe,Ye,ye.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){nt&&xt&&n.texStorage3D(a.TEXTURE_2D_ARRAY,we,Je,st[0].width,st[0].height,ye.depth);for(let ne=0,de=st.length;ne<de;ne++)if(ke=st[ne],E.format!==za)if(Oe!==null)if(nt){if(G)if(E.layerUpdates.size>0){const Re=vS(ke.width,ke.height,E.format,E.type);for(const be of E.layerUpdates){const it=ke.data.subarray(be*Re/ke.data.BYTES_PER_ELEMENT,(be+1)*Re/ke.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(a.TEXTURE_2D_ARRAY,ne,0,0,be,ke.width,ke.height,1,Oe,it)}E.clearLayerUpdates()}else n.compressedTexSubImage3D(a.TEXTURE_2D_ARRAY,ne,0,0,0,ke.width,ke.height,ye.depth,Oe,ke.data)}else n.compressedTexImage3D(a.TEXTURE_2D_ARRAY,ne,Je,ke.width,ke.height,ye.depth,0,ke.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else nt?G&&n.texSubImage3D(a.TEXTURE_2D_ARRAY,ne,0,0,0,ke.width,ke.height,ye.depth,Oe,Ye,ke.data):n.texImage3D(a.TEXTURE_2D_ARRAY,ne,Je,ke.width,ke.height,ye.depth,0,Oe,Ye,ke.data)}else{nt&&xt&&n.texStorage2D(a.TEXTURE_2D,we,Je,st[0].width,st[0].height);for(let ne=0,de=st.length;ne<de;ne++)ke=st[ne],E.format!==za?Oe!==null?nt?G&&n.compressedTexSubImage2D(a.TEXTURE_2D,ne,0,0,ke.width,ke.height,Oe,ke.data):n.compressedTexImage2D(a.TEXTURE_2D,ne,Je,ke.width,ke.height,0,ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?G&&n.texSubImage2D(a.TEXTURE_2D,ne,0,0,ke.width,ke.height,Oe,Ye,ke.data):n.texImage2D(a.TEXTURE_2D,ne,Je,ke.width,ke.height,0,Oe,Ye,ke.data)}else if(E.isDataArrayTexture)if(nt){if(xt&&n.texStorage3D(a.TEXTURE_2D_ARRAY,we,Je,ye.width,ye.height,ye.depth),G)if(E.layerUpdates.size>0){const ne=vS(ye.width,ye.height,E.format,E.type);for(const de of E.layerUpdates){const Re=ye.data.subarray(de*ne/ye.data.BYTES_PER_ELEMENT,(de+1)*ne/ye.data.BYTES_PER_ELEMENT);n.texSubImage3D(a.TEXTURE_2D_ARRAY,0,0,0,de,ye.width,ye.height,1,Oe,Ye,Re)}E.clearLayerUpdates()}else n.texSubImage3D(a.TEXTURE_2D_ARRAY,0,0,0,0,ye.width,ye.height,ye.depth,Oe,Ye,ye.data)}else n.texImage3D(a.TEXTURE_2D_ARRAY,0,Je,ye.width,ye.height,ye.depth,0,Oe,Ye,ye.data);else if(E.isData3DTexture)nt?(xt&&n.texStorage3D(a.TEXTURE_3D,we,Je,ye.width,ye.height,ye.depth),G&&n.texSubImage3D(a.TEXTURE_3D,0,0,0,0,ye.width,ye.height,ye.depth,Oe,Ye,ye.data)):n.texImage3D(a.TEXTURE_3D,0,Je,ye.width,ye.height,ye.depth,0,Oe,Ye,ye.data);else if(E.isFramebufferTexture){if(xt)if(nt)n.texStorage2D(a.TEXTURE_2D,we,Je,ye.width,ye.height);else{let ne=ye.width,de=ye.height;for(let Re=0;Re<we;Re++)n.texImage2D(a.TEXTURE_2D,Re,Je,ne,de,0,Oe,Ye,null),ne>>=1,de>>=1}}else if(st.length>0){if(nt&&xt){const ne=We(st[0]);n.texStorage2D(a.TEXTURE_2D,we,Je,ne.width,ne.height)}for(let ne=0,de=st.length;ne<de;ne++)ke=st[ne],nt?G&&n.texSubImage2D(a.TEXTURE_2D,ne,0,0,Oe,Ye,ke):n.texImage2D(a.TEXTURE_2D,ne,Je,Oe,Ye,ke);E.generateMipmaps=!1}else if(nt){if(xt){const ne=We(ye);n.texStorage2D(a.TEXTURE_2D,we,Je,ne.width,ne.height)}G&&n.texSubImage2D(a.TEXTURE_2D,0,0,0,Oe,Ye,ye)}else n.texImage2D(a.TEXTURE_2D,0,Je,Oe,Ye,ye);y(E)&&g(fe),Ve.__version=ce.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function le(P,E,$){if(E.image.length!==6)return;const fe=Ue(P,E),ge=E.source;n.bindTexture(a.TEXTURE_CUBE_MAP,P.__webglTexture,a.TEXTURE0+$);const ce=i.get(ge);if(ge.version!==ce.__version||fe===!0){n.activeTexture(a.TEXTURE0+$);const Ve=cn.getPrimaries(cn.workingColorSpace),Te=E.colorSpace===Ws?null:cn.getPrimaries(E.colorSpace),Ne=E.colorSpace===Ws||Ve===Te?a.NONE:a.BROWSER_DEFAULT_WEBGL;a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,E.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,E.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ne);const at=E.isCompressedTexture||E.image[0].isCompressedTexture,ye=E.image[0]&&E.image[0].isDataTexture,Oe=[];for(let de=0;de<6;de++)!at&&!ye?Oe[de]=b(E.image[de],!0,s.maxCubemapSize):Oe[de]=ye?E.image[de].image:E.image[de],Oe[de]=yt(E,Oe[de]);const Ye=Oe[0],Je=u.convert(E.format,E.colorSpace),ke=u.convert(E.type),st=L(E.internalFormat,Je,ke,E.colorSpace),nt=E.isVideoTexture!==!0,xt=ce.__version===void 0||fe===!0,G=ge.dataReady;let we=X(E,Ye);te(a.TEXTURE_CUBE_MAP,E);let ne;if(at){nt&&xt&&n.texStorage2D(a.TEXTURE_CUBE_MAP,we,st,Ye.width,Ye.height);for(let de=0;de<6;de++){ne=Oe[de].mipmaps;for(let Re=0;Re<ne.length;Re++){const be=ne[Re];E.format!==za?Je!==null?nt?G&&n.compressedTexSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re,0,0,be.width,be.height,Je,be.data):n.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re,st,be.width,be.height,0,be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re,0,0,be.width,be.height,Je,ke,be.data):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re,st,be.width,be.height,0,Je,ke,be.data)}}}else{if(ne=E.mipmaps,nt&&xt){ne.length>0&&we++;const de=We(Oe[0]);n.texStorage2D(a.TEXTURE_CUBE_MAP,we,st,de.width,de.height)}for(let de=0;de<6;de++)if(ye){nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,Oe[de].width,Oe[de].height,Je,ke,Oe[de].data):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,st,Oe[de].width,Oe[de].height,0,Je,ke,Oe[de].data);for(let Re=0;Re<ne.length;Re++){const be=ne[Re].image[de].image;nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re+1,0,0,be.width,be.height,Je,ke,be.data):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re+1,st,be.width,be.height,0,Je,ke,be.data)}}else{nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,Je,ke,Oe[de]):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,st,Je,ke,Oe[de]);for(let Re=0;Re<ne.length;Re++){const be=ne[Re];nt?G&&n.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re+1,0,0,Je,ke,be.image[de]):n.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+de,Re+1,st,Je,ke,be.image[de])}}}y(E)&&g(a.TEXTURE_CUBE_MAP),ce.__version=ge.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function Se(P,E,$,fe,ge,ce){const Ve=u.convert($.format,$.colorSpace),Te=u.convert($.type),Ne=L($.internalFormat,Ve,Te,$.colorSpace),at=i.get(E),ye=i.get($);if(ye.__renderTarget=E,!at.__hasExternalTextures){const Oe=Math.max(1,E.width>>ce),Ye=Math.max(1,E.height>>ce);ge===a.TEXTURE_3D||ge===a.TEXTURE_2D_ARRAY?n.texImage3D(ge,ce,Ne,Oe,Ye,E.depth,0,Ve,Te,null):n.texImage2D(ge,ce,Ne,Oe,Ye,0,Ve,Te,null)}n.bindFramebuffer(a.FRAMEBUFFER,P),ot(E)?f.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,fe,ge,ye.__webglTexture,0,lt(E)):(ge===a.TEXTURE_2D||ge>=a.TEXTURE_CUBE_MAP_POSITIVE_X&&ge<=a.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&a.framebufferTexture2D(a.FRAMEBUFFER,fe,ge,ye.__webglTexture,ce),n.bindFramebuffer(a.FRAMEBUFFER,null)}function ve(P,E,$){if(a.bindRenderbuffer(a.RENDERBUFFER,P),E.depthBuffer){const fe=E.depthTexture,ge=fe&&fe.isDepthTexture?fe.type:null,ce=C(E.stencilBuffer,ge),Ve=E.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,Te=lt(E);ot(E)?f.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,Te,ce,E.width,E.height):$?a.renderbufferStorageMultisample(a.RENDERBUFFER,Te,ce,E.width,E.height):a.renderbufferStorage(a.RENDERBUFFER,ce,E.width,E.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,Ve,a.RENDERBUFFER,P)}else{const fe=E.textures;for(let ge=0;ge<fe.length;ge++){const ce=fe[ge],Ve=u.convert(ce.format,ce.colorSpace),Te=u.convert(ce.type),Ne=L(ce.internalFormat,Ve,Te,ce.colorSpace),at=lt(E);$&&ot(E)===!1?a.renderbufferStorageMultisample(a.RENDERBUFFER,at,Ne,E.width,E.height):ot(E)?f.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,at,Ne,E.width,E.height):a.renderbufferStorage(a.RENDERBUFFER,Ne,E.width,E.height)}}a.bindRenderbuffer(a.RENDERBUFFER,null)}function Ee(P,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(a.FRAMEBUFFER,P),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const $=i.get(E.depthTexture);$.__renderTarget=E,(!$.__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),he(E.depthTexture,0);const fe=$.__webglTexture,ge=lt(E);if(E.depthTexture.format===Wc)ot(E)?f.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,fe,0,ge):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,fe,0);else if(E.depthTexture.format===rd)ot(E)?f.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,fe,0,ge):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,fe,0);else throw new Error("Unknown depthTexture format")}function Ie(P){const E=i.get(P),$=P.isWebGLCubeRenderTarget===!0;if(E.__boundDepthTexture!==P.depthTexture){const fe=P.depthTexture;if(E.__depthDisposeCallback&&E.__depthDisposeCallback(),fe){const ge=()=>{delete E.__boundDepthTexture,delete E.__depthDisposeCallback,fe.removeEventListener("dispose",ge)};fe.addEventListener("dispose",ge),E.__depthDisposeCallback=ge}E.__boundDepthTexture=fe}if(P.depthTexture&&!E.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");Ee(E.__webglFramebuffer,P)}else if($){E.__webglDepthbuffer=[];for(let fe=0;fe<6;fe++)if(n.bindFramebuffer(a.FRAMEBUFFER,E.__webglFramebuffer[fe]),E.__webglDepthbuffer[fe]===void 0)E.__webglDepthbuffer[fe]=a.createRenderbuffer(),ve(E.__webglDepthbuffer[fe],P,!1);else{const ge=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,ce=E.__webglDepthbuffer[fe];a.bindRenderbuffer(a.RENDERBUFFER,ce),a.framebufferRenderbuffer(a.FRAMEBUFFER,ge,a.RENDERBUFFER,ce)}}else if(n.bindFramebuffer(a.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer===void 0)E.__webglDepthbuffer=a.createRenderbuffer(),ve(E.__webglDepthbuffer,P,!1);else{const fe=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,ge=E.__webglDepthbuffer;a.bindRenderbuffer(a.RENDERBUFFER,ge),a.framebufferRenderbuffer(a.FRAMEBUFFER,fe,a.RENDERBUFFER,ge)}n.bindFramebuffer(a.FRAMEBUFFER,null)}function Ze(P,E,$){const fe=i.get(P);E!==void 0&&Se(fe.__webglFramebuffer,P,P.texture,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,0),$!==void 0&&Ie(P)}function St(P){const E=P.texture,$=i.get(P),fe=i.get(E);P.addEventListener("dispose",F);const ge=P.textures,ce=P.isWebGLCubeRenderTarget===!0,Ve=ge.length>1;if(Ve||(fe.__webglTexture===void 0&&(fe.__webglTexture=a.createTexture()),fe.__version=E.version,d.memory.textures++),ce){$.__webglFramebuffer=[];for(let Te=0;Te<6;Te++)if(E.mipmaps&&E.mipmaps.length>0){$.__webglFramebuffer[Te]=[];for(let Ne=0;Ne<E.mipmaps.length;Ne++)$.__webglFramebuffer[Te][Ne]=a.createFramebuffer()}else $.__webglFramebuffer[Te]=a.createFramebuffer()}else{if(E.mipmaps&&E.mipmaps.length>0){$.__webglFramebuffer=[];for(let Te=0;Te<E.mipmaps.length;Te++)$.__webglFramebuffer[Te]=a.createFramebuffer()}else $.__webglFramebuffer=a.createFramebuffer();if(Ve)for(let Te=0,Ne=ge.length;Te<Ne;Te++){const at=i.get(ge[Te]);at.__webglTexture===void 0&&(at.__webglTexture=a.createTexture(),d.memory.textures++)}if(P.samples>0&&ot(P)===!1){$.__webglMultisampledFramebuffer=a.createFramebuffer(),$.__webglColorRenderbuffer=[],n.bindFramebuffer(a.FRAMEBUFFER,$.__webglMultisampledFramebuffer);for(let Te=0;Te<ge.length;Te++){const Ne=ge[Te];$.__webglColorRenderbuffer[Te]=a.createRenderbuffer(),a.bindRenderbuffer(a.RENDERBUFFER,$.__webglColorRenderbuffer[Te]);const at=u.convert(Ne.format,Ne.colorSpace),ye=u.convert(Ne.type),Oe=L(Ne.internalFormat,at,ye,Ne.colorSpace,P.isXRRenderTarget===!0),Ye=lt(P);a.renderbufferStorageMultisample(a.RENDERBUFFER,Ye,Oe,P.width,P.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+Te,a.RENDERBUFFER,$.__webglColorRenderbuffer[Te])}a.bindRenderbuffer(a.RENDERBUFFER,null),P.depthBuffer&&($.__webglDepthRenderbuffer=a.createRenderbuffer(),ve($.__webglDepthRenderbuffer,P,!0)),n.bindFramebuffer(a.FRAMEBUFFER,null)}}if(ce){n.bindTexture(a.TEXTURE_CUBE_MAP,fe.__webglTexture),te(a.TEXTURE_CUBE_MAP,E);for(let Te=0;Te<6;Te++)if(E.mipmaps&&E.mipmaps.length>0)for(let Ne=0;Ne<E.mipmaps.length;Ne++)Se($.__webglFramebuffer[Te][Ne],P,E,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+Te,Ne);else Se($.__webglFramebuffer[Te],P,E,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+Te,0);y(E)&&g(a.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(Ve){for(let Te=0,Ne=ge.length;Te<Ne;Te++){const at=ge[Te],ye=i.get(at);n.bindTexture(a.TEXTURE_2D,ye.__webglTexture),te(a.TEXTURE_2D,at),Se($.__webglFramebuffer,P,at,a.COLOR_ATTACHMENT0+Te,a.TEXTURE_2D,0),y(at)&&g(a.TEXTURE_2D)}n.unbindTexture()}else{let Te=a.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(Te=P.isWebGL3DRenderTarget?a.TEXTURE_3D:a.TEXTURE_2D_ARRAY),n.bindTexture(Te,fe.__webglTexture),te(Te,E),E.mipmaps&&E.mipmaps.length>0)for(let Ne=0;Ne<E.mipmaps.length;Ne++)Se($.__webglFramebuffer[Ne],P,E,a.COLOR_ATTACHMENT0,Te,Ne);else Se($.__webglFramebuffer,P,E,a.COLOR_ATTACHMENT0,Te,0);y(E)&&g(Te),n.unbindTexture()}P.depthBuffer&&Ie(P)}function ft(P){const E=P.textures;for(let $=0,fe=E.length;$<fe;$++){const ge=E[$];if(y(ge)){const ce=I(P),Ve=i.get(ge).__webglTexture;n.bindTexture(ce,Ve),g(ce),n.unbindTexture()}}}const Tt=[],O=[];function dn(P){if(P.samples>0){if(ot(P)===!1){const E=P.textures,$=P.width,fe=P.height;let ge=a.COLOR_BUFFER_BIT;const ce=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,Ve=i.get(P),Te=E.length>1;if(Te)for(let Ne=0;Ne<E.length;Ne++)n.bindFramebuffer(a.FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+Ne,a.RENDERBUFFER,null),n.bindFramebuffer(a.FRAMEBUFFER,Ve.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+Ne,a.TEXTURE_2D,null,0);n.bindFramebuffer(a.READ_FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),n.bindFramebuffer(a.DRAW_FRAMEBUFFER,Ve.__webglFramebuffer);for(let Ne=0;Ne<E.length;Ne++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(ge|=a.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(ge|=a.STENCIL_BUFFER_BIT)),Te){a.framebufferRenderbuffer(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.RENDERBUFFER,Ve.__webglColorRenderbuffer[Ne]);const at=i.get(E[Ne]).__webglTexture;a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,at,0)}a.blitFramebuffer(0,0,$,fe,0,0,$,fe,ge,a.NEAREST),p===!0&&(Tt.length=0,O.length=0,Tt.push(a.COLOR_ATTACHMENT0+Ne),P.depthBuffer&&P.resolveDepthBuffer===!1&&(Tt.push(ce),O.push(ce),a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,O)),a.invalidateFramebuffer(a.READ_FRAMEBUFFER,Tt))}if(n.bindFramebuffer(a.READ_FRAMEBUFFER,null),n.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),Te)for(let Ne=0;Ne<E.length;Ne++){n.bindFramebuffer(a.FRAMEBUFFER,Ve.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+Ne,a.RENDERBUFFER,Ve.__webglColorRenderbuffer[Ne]);const at=i.get(E[Ne]).__webglTexture;n.bindFramebuffer(a.FRAMEBUFFER,Ve.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+Ne,a.TEXTURE_2D,at,0)}n.bindFramebuffer(a.DRAW_FRAMEBUFFER,Ve.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&p){const E=P.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT;a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,[E])}}}function lt(P){return Math.min(s.maxSamples,P.samples)}function ot(P){const E=i.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function Xe(P){const E=d.render.frame;v.get(P)!==E&&(v.set(P,E),P.update())}function yt(P,E){const $=P.colorSpace,fe=P.format,ge=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||$!==id&&$!==Ws&&(cn.getTransfer($)===wn?(fe!==za||ge!==Cs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",$)),E}function We(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(m.width=P.naturalWidth||P.width,m.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(m.width=P.displayWidth,m.height=P.displayHeight):(m.width=P.width,m.height=P.height),m}this.allocateTextureUnit=ee,this.resetTextureUnits=ie,this.setTexture2D=he,this.setTexture2DArray=oe,this.setTexture3D=ue,this.setTextureCube=B,this.rebindTextures=Ze,this.setupRenderTarget=St,this.updateRenderTargetMipmap=ft,this.updateMultisampleRenderTarget=dn,this.setupDepthRenderbuffer=Ie,this.setupFrameBufferTexture=Se,this.useMultisampledRTT=ot}function xU(a,e){function n(i,s=Ws){let u;const d=cn.getTransfer(s);if(i===Cs)return a.UNSIGNED_BYTE;if(i===cx)return a.UNSIGNED_SHORT_4_4_4_4;if(i===dx)return a.UNSIGNED_SHORT_5_5_5_1;if(i===L1)return a.UNSIGNED_INT_5_9_9_9_REV;if(i===P1)return a.BYTE;if(i===D1)return a.SHORT;if(i===Kh)return a.UNSIGNED_SHORT;if(i===ux)return a.INT;if(i===ac)return a.UNSIGNED_INT;if(i===Ss)return a.FLOAT;if(i===np)return a.HALF_FLOAT;if(i===U1)return a.ALPHA;if(i===I1)return a.RGB;if(i===za)return a.RGBA;if(i===N1)return a.LUMINANCE;if(i===F1)return a.LUMINANCE_ALPHA;if(i===Wc)return a.DEPTH_COMPONENT;if(i===rd)return a.DEPTH_STENCIL;if(i===O1)return a.RED;if(i===fx)return a.RED_INTEGER;if(i===k1)return a.RG;if(i===hx)return a.RG_INTEGER;if(i===px)return a.RGBA_INTEGER;if(i===am||i===om||i===sm||i===lm)if(d===wn)if(u=e.get("WEBGL_compressed_texture_s3tc_srgb"),u!==null){if(i===am)return u.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===om)return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===sm)return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===lm)return u.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(u=e.get("WEBGL_compressed_texture_s3tc"),u!==null){if(i===am)return u.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===om)return u.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===sm)return u.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===lm)return u.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===x0||i===y0||i===S0||i===M0)if(u=e.get("WEBGL_compressed_texture_pvrtc"),u!==null){if(i===x0)return u.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===y0)return u.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===S0)return u.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===M0)return u.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===E0||i===T0||i===w0)if(u=e.get("WEBGL_compressed_texture_etc"),u!==null){if(i===E0||i===T0)return d===wn?u.COMPRESSED_SRGB8_ETC2:u.COMPRESSED_RGB8_ETC2;if(i===w0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:u.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===b0||i===A0||i===R0||i===C0||i===P0||i===D0||i===L0||i===U0||i===I0||i===N0||i===F0||i===O0||i===k0||i===z0)if(u=e.get("WEBGL_compressed_texture_astc"),u!==null){if(i===b0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:u.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===A0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:u.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===R0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:u.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===C0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:u.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===P0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:u.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===D0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:u.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===L0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:u.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===U0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:u.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===I0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:u.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===N0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:u.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===F0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:u.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===O0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:u.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===k0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:u.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===z0)return d===wn?u.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:u.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===um||i===B0||i===H0)if(u=e.get("EXT_texture_compression_bptc"),u!==null){if(i===um)return d===wn?u.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:u.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===B0)return u.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===H0)return u.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===z1||i===V0||i===G0||i===W0)if(u=e.get("EXT_texture_compression_rgtc"),u!==null){if(i===um)return u.COMPRESSED_RED_RGTC1_EXT;if(i===V0)return u.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===G0)return u.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===W0)return u.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===nd?a.UNSIGNED_INT_24_8:a[i]!==void 0?a[i]:null}return{convert:n}}const yU={type:"move"};class __{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new qh,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new qh,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new De,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new De),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new qh,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new De,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new De),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const n=this._hand;if(n)for(const i of e.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let s=null,u=null,d=null;const f=this._targetRay,p=this._grip,m=this._hand;if(e&&n.session.visibilityState!=="visible-blurred"){if(m&&e.hand){d=!0;for(const b of e.hand.values()){const y=n.getJointPose(b,i),g=this._getHandJoint(m,b);y!==null&&(g.matrix.fromArray(y.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=y.radius),g.visible=y!==null}const v=m.joints["index-finger-tip"],x=m.joints["thumb-tip"],_=v.position.distanceTo(x.position),S=.02,w=.005;m.inputState.pinching&&_>S+w?(m.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!m.inputState.pinching&&_<=S-w&&(m.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else p!==null&&e.gripSpace&&(u=n.getPose(e.gripSpace,i),u!==null&&(p.matrix.fromArray(u.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,u.linearVelocity?(p.hasLinearVelocity=!0,p.linearVelocity.copy(u.linearVelocity)):p.hasLinearVelocity=!1,u.angularVelocity?(p.hasAngularVelocity=!0,p.angularVelocity.copy(u.angularVelocity)):p.hasAngularVelocity=!1));f!==null&&(s=n.getPose(e.targetRaySpace,i),s===null&&u!==null&&(s=u),s!==null&&(f.matrix.fromArray(s.transform.matrix),f.matrix.decompose(f.position,f.rotation,f.scale),f.matrixWorldNeedsUpdate=!0,s.linearVelocity?(f.hasLinearVelocity=!0,f.linearVelocity.copy(s.linearVelocity)):f.hasLinearVelocity=!1,s.angularVelocity?(f.hasAngularVelocity=!0,f.angularVelocity.copy(s.angularVelocity)):f.hasAngularVelocity=!1,this.dispatchEvent(yU)))}return f!==null&&(f.visible=s!==null),p!==null&&(p.visible=u!==null),m!==null&&(m.visible=d!==null),this}_getHandJoint(e,n){if(e.joints[n.jointName]===void 0){const i=new qh;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[n.jointName]=i,e.add(i)}return e.joints[n.jointName]}}const SU=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,MU=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class EU{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,n,i){if(this.texture===null){const s=new gi,u=e.properties.get(s);u.__webglTexture=n.texture,(n.depthNear!=i.depthNear||n.depthFar!=i.depthFar)&&(this.depthNear=n.depthNear,this.depthFar=n.depthFar),this.texture=s}}getMesh(e){if(this.texture!==null&&this.mesh===null){const n=e.cameras[0].viewport,i=new Js({vertexShader:SU,fragmentShader:MU,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new qa(new Am(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class TU extends ld{constructor(e,n){super();const i=this;let s=null,u=1,d=null,f="local-floor",p=1,m=null,v=null,x=null,_=null,S=null,w=null;const b=new EU,y=n.getContextAttributes();let g=null,I=null;const L=[],C=[],X=new Un;let k=null;const F=new Ji;F.viewport=new Qn;const j=new Ji;j.viewport=new Qn;const R=[F,j],A=new X2;let V=null,ie=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(K){let le=L[K];return le===void 0&&(le=new __,L[K]=le),le.getTargetRaySpace()},this.getControllerGrip=function(K){let le=L[K];return le===void 0&&(le=new __,L[K]=le),le.getGripSpace()},this.getHand=function(K){let le=L[K];return le===void 0&&(le=new __,L[K]=le),le.getHandSpace()};function ee(K){const le=C.indexOf(K.inputSource);if(le===-1)return;const Se=L[le];Se!==void 0&&(Se.update(K.inputSource,K.frame,m||d),Se.dispatchEvent({type:K.type,data:K.inputSource}))}function se(){s.removeEventListener("select",ee),s.removeEventListener("selectstart",ee),s.removeEventListener("selectend",ee),s.removeEventListener("squeeze",ee),s.removeEventListener("squeezestart",ee),s.removeEventListener("squeezeend",ee),s.removeEventListener("end",se),s.removeEventListener("inputsourceschange",he);for(let K=0;K<L.length;K++){const le=C[K];le!==null&&(C[K]=null,L[K].disconnect(le))}V=null,ie=null,b.reset(),e.setRenderTarget(g),S=null,_=null,x=null,s=null,I=null,Ue.stop(),i.isPresenting=!1,e.setPixelRatio(k),e.setSize(X.width,X.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(K){u=K,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(K){f=K,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return m||d},this.setReferenceSpace=function(K){m=K},this.getBaseLayer=function(){return _!==null?_:S},this.getBinding=function(){return x},this.getFrame=function(){return w},this.getSession=function(){return s},this.setSession=async function(K){if(s=K,s!==null){if(g=e.getRenderTarget(),s.addEventListener("select",ee),s.addEventListener("selectstart",ee),s.addEventListener("selectend",ee),s.addEventListener("squeeze",ee),s.addEventListener("squeezestart",ee),s.addEventListener("squeezeend",ee),s.addEventListener("end",se),s.addEventListener("inputsourceschange",he),y.xrCompatible!==!0&&await n.makeXRCompatible(),k=e.getPixelRatio(),e.getSize(X),s.renderState.layers===void 0){const le={antialias:y.antialias,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:u};S=new XRWebGLLayer(s,n,le),s.updateRenderState({baseLayer:S}),e.setPixelRatio(1),e.setSize(S.framebufferWidth,S.framebufferHeight,!1),I=new oc(S.framebufferWidth,S.framebufferHeight,{format:za,type:Cs,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil})}else{let le=null,Se=null,ve=null;y.depth&&(ve=y.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,le=y.stencil?rd:Wc,Se=y.stencil?nd:ac);const Ee={colorFormat:n.RGBA8,depthFormat:ve,scaleFactor:u};x=new XRWebGLBinding(s,n),_=x.createProjectionLayer(Ee),s.updateRenderState({layers:[_]}),e.setPixelRatio(1),e.setSize(_.textureWidth,_.textureHeight,!1),I=new oc(_.textureWidth,_.textureHeight,{format:za,type:Cs,depthTexture:new J1(_.textureWidth,_.textureHeight,Se,void 0,void 0,void 0,void 0,void 0,void 0,le),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0,resolveDepthBuffer:_.ignoreDepthValues===!1})}I.isXRRenderTarget=!0,this.setFoveation(p),m=null,d=await s.requestReferenceSpace(f),Ue.setContext(s),Ue.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return b.getDepthTexture()};function he(K){for(let le=0;le<K.removed.length;le++){const Se=K.removed[le],ve=C.indexOf(Se);ve>=0&&(C[ve]=null,L[ve].disconnect(Se))}for(let le=0;le<K.added.length;le++){const Se=K.added[le];let ve=C.indexOf(Se);if(ve===-1){for(let Ie=0;Ie<L.length;Ie++)if(Ie>=C.length){C.push(Se),ve=Ie;break}else if(C[Ie]===null){C[Ie]=Se,ve=Ie;break}if(ve===-1)break}const Ee=L[ve];Ee&&Ee.connect(Se)}}const oe=new De,ue=new De;function B(K,le,Se){oe.setFromMatrixPosition(le.matrixWorld),ue.setFromMatrixPosition(Se.matrixWorld);const ve=oe.distanceTo(ue),Ee=le.projectionMatrix.elements,Ie=Se.projectionMatrix.elements,Ze=Ee[14]/(Ee[10]-1),St=Ee[14]/(Ee[10]+1),ft=(Ee[9]+1)/Ee[5],Tt=(Ee[9]-1)/Ee[5],O=(Ee[8]-1)/Ee[0],dn=(Ie[8]+1)/Ie[0],lt=Ze*O,ot=Ze*dn,Xe=ve/(-O+dn),yt=Xe*-O;if(le.matrixWorld.decompose(K.position,K.quaternion,K.scale),K.translateX(yt),K.translateZ(Xe),K.matrixWorld.compose(K.position,K.quaternion,K.scale),K.matrixWorldInverse.copy(K.matrixWorld).invert(),Ee[10]===-1)K.projectionMatrix.copy(le.projectionMatrix),K.projectionMatrixInverse.copy(le.projectionMatrixInverse);else{const We=Ze+Xe,P=St+Xe,E=lt-yt,$=ot+(ve-yt),fe=ft*St/P*We,ge=Tt*St/P*We;K.projectionMatrix.makePerspective(E,$,fe,ge,We,P),K.projectionMatrixInverse.copy(K.projectionMatrix).invert()}}function ae(K,le){le===null?K.matrixWorld.copy(K.matrix):K.matrixWorld.multiplyMatrices(le.matrixWorld,K.matrix),K.matrixWorldInverse.copy(K.matrixWorld).invert()}this.updateCamera=function(K){if(s===null)return;let le=K.near,Se=K.far;b.texture!==null&&(b.depthNear>0&&(le=b.depthNear),b.depthFar>0&&(Se=b.depthFar)),A.near=j.near=F.near=le,A.far=j.far=F.far=Se,(V!==A.near||ie!==A.far)&&(s.updateRenderState({depthNear:A.near,depthFar:A.far}),V=A.near,ie=A.far),F.layers.mask=K.layers.mask|2,j.layers.mask=K.layers.mask|4,A.layers.mask=F.layers.mask|j.layers.mask;const ve=K.parent,Ee=A.cameras;ae(A,ve);for(let Ie=0;Ie<Ee.length;Ie++)ae(Ee[Ie],ve);Ee.length===2?B(A,F,j):A.projectionMatrix.copy(F.projectionMatrix),re(K,A,ve)};function re(K,le,Se){Se===null?K.matrix.copy(le.matrixWorld):(K.matrix.copy(Se.matrixWorld),K.matrix.invert(),K.matrix.multiply(le.matrixWorld)),K.matrix.decompose(K.position,K.quaternion,K.scale),K.updateMatrixWorld(!0),K.projectionMatrix.copy(le.projectionMatrix),K.projectionMatrixInverse.copy(le.projectionMatrixInverse),K.isPerspectiveCamera&&(K.fov=X0*2*Math.atan(1/K.projectionMatrix.elements[5]),K.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(_===null&&S===null))return p},this.setFoveation=function(K){p=K,_!==null&&(_.fixedFoveation=K),S!==null&&S.fixedFoveation!==void 0&&(S.fixedFoveation=K)},this.hasDepthSensing=function(){return b.texture!==null},this.getDepthSensingMesh=function(){return b.getMesh(A)};let U=null;function te(K,le){if(v=le.getViewerPose(m||d),w=le,v!==null){const Se=v.views;S!==null&&(e.setRenderTargetFramebuffer(I,S.framebuffer),e.setRenderTarget(I));let ve=!1;Se.length!==A.cameras.length&&(A.cameras.length=0,ve=!0);for(let Ie=0;Ie<Se.length;Ie++){const Ze=Se[Ie];let St=null;if(S!==null)St=S.getViewport(Ze);else{const Tt=x.getViewSubImage(_,Ze);St=Tt.viewport,Ie===0&&(e.setRenderTargetTextures(I,Tt.colorTexture,_.ignoreDepthValues?void 0:Tt.depthStencilTexture),e.setRenderTarget(I))}let ft=R[Ie];ft===void 0&&(ft=new Ji,ft.layers.enable(Ie),ft.viewport=new Qn,R[Ie]=ft),ft.matrix.fromArray(Ze.transform.matrix),ft.matrix.decompose(ft.position,ft.quaternion,ft.scale),ft.projectionMatrix.fromArray(Ze.projectionMatrix),ft.projectionMatrixInverse.copy(ft.projectionMatrix).invert(),ft.viewport.set(St.x,St.y,St.width,St.height),Ie===0&&(A.matrix.copy(ft.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),ve===!0&&A.cameras.push(ft)}const Ee=s.enabledFeatures;if(Ee&&Ee.includes("depth-sensing")){const Ie=x.getDepthInformation(Se[0]);Ie&&Ie.isValid&&Ie.texture&&b.init(e,Ie,s.renderState)}}for(let Se=0;Se<L.length;Se++){const ve=C[Se],Ee=L[Se];ve!==null&&Ee!==void 0&&Ee.update(ve,le,m||d)}U&&U(K,le),le.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:le}),w=null}const Ue=new Q1;Ue.setAnimationLoop(te),this.setAnimationLoop=function(K){U=K},this.dispose=function(){}}}const Vu=new Ps,wU=new rr;function bU(a,e){function n(y,g){y.matrixAutoUpdate===!0&&y.updateMatrix(),g.value.copy(y.matrix)}function i(y,g){g.color.getRGB(y.fogColor.value,Y1(a)),g.isFog?(y.fogNear.value=g.near,y.fogFar.value=g.far):g.isFogExp2&&(y.fogDensity.value=g.density)}function s(y,g,I,L,C){g.isMeshBasicMaterial||g.isMeshLambertMaterial?u(y,g):g.isMeshToonMaterial?(u(y,g),x(y,g)):g.isMeshPhongMaterial?(u(y,g),v(y,g)):g.isMeshStandardMaterial?(u(y,g),_(y,g),g.isMeshPhysicalMaterial&&S(y,g,C)):g.isMeshMatcapMaterial?(u(y,g),w(y,g)):g.isMeshDepthMaterial?u(y,g):g.isMeshDistanceMaterial?(u(y,g),b(y,g)):g.isMeshNormalMaterial?u(y,g):g.isLineBasicMaterial?(d(y,g),g.isLineDashedMaterial&&f(y,g)):g.isPointsMaterial?p(y,g,I,L):g.isSpriteMaterial?m(y,g):g.isShadowMaterial?(y.color.value.copy(g.color),y.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function u(y,g){y.opacity.value=g.opacity,g.color&&y.diffuse.value.copy(g.color),g.emissive&&y.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(y.map.value=g.map,n(g.map,y.mapTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,n(g.alphaMap,y.alphaMapTransform)),g.bumpMap&&(y.bumpMap.value=g.bumpMap,n(g.bumpMap,y.bumpMapTransform),y.bumpScale.value=g.bumpScale,g.side===mi&&(y.bumpScale.value*=-1)),g.normalMap&&(y.normalMap.value=g.normalMap,n(g.normalMap,y.normalMapTransform),y.normalScale.value.copy(g.normalScale),g.side===mi&&y.normalScale.value.negate()),g.displacementMap&&(y.displacementMap.value=g.displacementMap,n(g.displacementMap,y.displacementMapTransform),y.displacementScale.value=g.displacementScale,y.displacementBias.value=g.displacementBias),g.emissiveMap&&(y.emissiveMap.value=g.emissiveMap,n(g.emissiveMap,y.emissiveMapTransform)),g.specularMap&&(y.specularMap.value=g.specularMap,n(g.specularMap,y.specularMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest);const I=e.get(g),L=I.envMap,C=I.envMapRotation;L&&(y.envMap.value=L,Vu.copy(C),Vu.x*=-1,Vu.y*=-1,Vu.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(Vu.y*=-1,Vu.z*=-1),y.envMapRotation.value.setFromMatrix4(wU.makeRotationFromEuler(Vu)),y.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=g.reflectivity,y.ior.value=g.ior,y.refractionRatio.value=g.refractionRatio),g.lightMap&&(y.lightMap.value=g.lightMap,y.lightMapIntensity.value=g.lightMapIntensity,n(g.lightMap,y.lightMapTransform)),g.aoMap&&(y.aoMap.value=g.aoMap,y.aoMapIntensity.value=g.aoMapIntensity,n(g.aoMap,y.aoMapTransform))}function d(y,g){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,g.map&&(y.map.value=g.map,n(g.map,y.mapTransform))}function f(y,g){y.dashSize.value=g.dashSize,y.totalSize.value=g.dashSize+g.gapSize,y.scale.value=g.scale}function p(y,g,I,L){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,y.size.value=g.size*I,y.scale.value=L*.5,g.map&&(y.map.value=g.map,n(g.map,y.uvTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,n(g.alphaMap,y.alphaMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest)}function m(y,g){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,y.rotation.value=g.rotation,g.map&&(y.map.value=g.map,n(g.map,y.mapTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,n(g.alphaMap,y.alphaMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest)}function v(y,g){y.specular.value.copy(g.specular),y.shininess.value=Math.max(g.shininess,1e-4)}function x(y,g){g.gradientMap&&(y.gradientMap.value=g.gradientMap)}function _(y,g){y.metalness.value=g.metalness,g.metalnessMap&&(y.metalnessMap.value=g.metalnessMap,n(g.metalnessMap,y.metalnessMapTransform)),y.roughness.value=g.roughness,g.roughnessMap&&(y.roughnessMap.value=g.roughnessMap,n(g.roughnessMap,y.roughnessMapTransform)),g.envMap&&(y.envMapIntensity.value=g.envMapIntensity)}function S(y,g,I){y.ior.value=g.ior,g.sheen>0&&(y.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),y.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(y.sheenColorMap.value=g.sheenColorMap,n(g.sheenColorMap,y.sheenColorMapTransform)),g.sheenRoughnessMap&&(y.sheenRoughnessMap.value=g.sheenRoughnessMap,n(g.sheenRoughnessMap,y.sheenRoughnessMapTransform))),g.clearcoat>0&&(y.clearcoat.value=g.clearcoat,y.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(y.clearcoatMap.value=g.clearcoatMap,n(g.clearcoatMap,y.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,n(g.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(y.clearcoatNormalMap.value=g.clearcoatNormalMap,n(g.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===mi&&y.clearcoatNormalScale.value.negate())),g.dispersion>0&&(y.dispersion.value=g.dispersion),g.iridescence>0&&(y.iridescence.value=g.iridescence,y.iridescenceIOR.value=g.iridescenceIOR,y.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(y.iridescenceMap.value=g.iridescenceMap,n(g.iridescenceMap,y.iridescenceMapTransform)),g.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=g.iridescenceThicknessMap,n(g.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),g.transmission>0&&(y.transmission.value=g.transmission,y.transmissionSamplerMap.value=I.texture,y.transmissionSamplerSize.value.set(I.width,I.height),g.transmissionMap&&(y.transmissionMap.value=g.transmissionMap,n(g.transmissionMap,y.transmissionMapTransform)),y.thickness.value=g.thickness,g.thicknessMap&&(y.thicknessMap.value=g.thicknessMap,n(g.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=g.attenuationDistance,y.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(y.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(y.anisotropyMap.value=g.anisotropyMap,n(g.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=g.specularIntensity,y.specularColor.value.copy(g.specularColor),g.specularColorMap&&(y.specularColorMap.value=g.specularColorMap,n(g.specularColorMap,y.specularColorMapTransform)),g.specularIntensityMap&&(y.specularIntensityMap.value=g.specularIntensityMap,n(g.specularIntensityMap,y.specularIntensityMapTransform))}function w(y,g){g.matcap&&(y.matcap.value=g.matcap)}function b(y,g){const I=e.get(g).light;y.referencePosition.value.setFromMatrixPosition(I.matrixWorld),y.nearDistance.value=I.shadow.camera.near,y.farDistance.value=I.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:s}}function AU(a,e,n,i){let s={},u={},d=[];const f=a.getParameter(a.MAX_UNIFORM_BUFFER_BINDINGS);function p(I,L){const C=L.program;i.uniformBlockBinding(I,C)}function m(I,L){let C=s[I.id];C===void 0&&(w(I),C=v(I),s[I.id]=C,I.addEventListener("dispose",y));const X=L.program;i.updateUBOMapping(I,X);const k=e.render.frame;u[I.id]!==k&&(_(I),u[I.id]=k)}function v(I){const L=x();I.__bindingPointIndex=L;const C=a.createBuffer(),X=I.__size,k=I.usage;return a.bindBuffer(a.UNIFORM_BUFFER,C),a.bufferData(a.UNIFORM_BUFFER,X,k),a.bindBuffer(a.UNIFORM_BUFFER,null),a.bindBufferBase(a.UNIFORM_BUFFER,L,C),C}function x(){for(let I=0;I<f;I++)if(d.indexOf(I)===-1)return d.push(I),I;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function _(I){const L=s[I.id],C=I.uniforms,X=I.__cache;a.bindBuffer(a.UNIFORM_BUFFER,L);for(let k=0,F=C.length;k<F;k++){const j=Array.isArray(C[k])?C[k]:[C[k]];for(let R=0,A=j.length;R<A;R++){const V=j[R];if(S(V,k,R,X)===!0){const ie=V.__offset,ee=Array.isArray(V.value)?V.value:[V.value];let se=0;for(let he=0;he<ee.length;he++){const oe=ee[he],ue=b(oe);typeof oe=="number"||typeof oe=="boolean"?(V.__data[0]=oe,a.bufferSubData(a.UNIFORM_BUFFER,ie+se,V.__data)):oe.isMatrix3?(V.__data[0]=oe.elements[0],V.__data[1]=oe.elements[1],V.__data[2]=oe.elements[2],V.__data[3]=0,V.__data[4]=oe.elements[3],V.__data[5]=oe.elements[4],V.__data[6]=oe.elements[5],V.__data[7]=0,V.__data[8]=oe.elements[6],V.__data[9]=oe.elements[7],V.__data[10]=oe.elements[8],V.__data[11]=0):(oe.toArray(V.__data,se),se+=ue.storage/Float32Array.BYTES_PER_ELEMENT)}a.bufferSubData(a.UNIFORM_BUFFER,ie,V.__data)}}}a.bindBuffer(a.UNIFORM_BUFFER,null)}function S(I,L,C,X){const k=I.value,F=L+"_"+C;if(X[F]===void 0)return typeof k=="number"||typeof k=="boolean"?X[F]=k:X[F]=k.clone(),!0;{const j=X[F];if(typeof k=="number"||typeof k=="boolean"){if(j!==k)return X[F]=k,!0}else if(j.equals(k)===!1)return j.copy(k),!0}return!1}function w(I){const L=I.uniforms;let C=0;const X=16;for(let F=0,j=L.length;F<j;F++){const R=Array.isArray(L[F])?L[F]:[L[F]];for(let A=0,V=R.length;A<V;A++){const ie=R[A],ee=Array.isArray(ie.value)?ie.value:[ie.value];for(let se=0,he=ee.length;se<he;se++){const oe=ee[se],ue=b(oe),B=C%X,ae=B%ue.boundary,re=B+ae;C+=ae,re!==0&&X-re<ue.storage&&(C+=X-re),ie.__data=new Float32Array(ue.storage/Float32Array.BYTES_PER_ELEMENT),ie.__offset=C,C+=ue.storage}}}const k=C%X;return k>0&&(C+=X-k),I.__size=C,I.__cache={},this}function b(I){const L={boundary:0,storage:0};return typeof I=="number"||typeof I=="boolean"?(L.boundary=4,L.storage=4):I.isVector2?(L.boundary=8,L.storage=8):I.isVector3||I.isColor?(L.boundary=16,L.storage=12):I.isVector4?(L.boundary=16,L.storage=16):I.isMatrix3?(L.boundary=48,L.storage=48):I.isMatrix4?(L.boundary=64,L.storage=64):I.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",I),L}function y(I){const L=I.target;L.removeEventListener("dispose",y);const C=d.indexOf(L.__bindingPointIndex);d.splice(C,1),a.deleteBuffer(s[L.id]),delete s[L.id],delete u[L.id]}function g(){for(const I in s)a.deleteBuffer(s[I]);d=[],s={},u={}}return{bind:p,update:m,dispose:g}}class RU{constructor(e={}){const{canvas:n=f2(),context:i=null,depth:s=!0,stencil:u=!1,alpha:d=!1,antialias:f=!1,premultipliedAlpha:p=!0,preserveDrawingBuffer:m=!1,powerPreference:v="default",failIfMajorPerformanceCaveat:x=!1,reverseDepthBuffer:_=!1}=e;this.isWebGLRenderer=!0;let S;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");S=i.getContextAttributes().alpha}else S=d;const w=new Uint32Array(4),b=new Int32Array(4);let y=null,g=null;const I=[],L=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Ki,this.toneMapping=Ys,this.toneMappingExposure=1;const C=this;let X=!1,k=0,F=0,j=null,R=-1,A=null;const V=new Qn,ie=new Qn;let ee=null;const se=new An(0);let he=0,oe=n.width,ue=n.height,B=1,ae=null,re=null;const U=new Qn(0,0,oe,ue),te=new Qn(0,0,oe,ue);let Ue=!1;const K=new Z1;let le=!1,Se=!1;const ve=new rr,Ee=new rr,Ie=new De,Ze=new Qn,St={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ft=!1;function Tt(){return j===null?B:1}let O=i;function dn(T,W){return n.getContext(T,W)}try{const T={alpha:!0,depth:s,stencil:u,antialias:f,premultipliedAlpha:p,preserveDrawingBuffer:m,powerPreference:v,failIfMajorPerformanceCaveat:x};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${lx}`),n.addEventListener("webglcontextlost",de,!1),n.addEventListener("webglcontextrestored",Re,!1),n.addEventListener("webglcontextcreationerror",be,!1),O===null){const W="webgl2";if(O=dn(W,T),O===null)throw dn(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(T){throw console.error("THREE.WebGLRenderer: "+T.message),T}let lt,ot,Xe,yt,We,P,E,$,fe,ge,ce,Ve,Te,Ne,at,ye,Oe,Ye,Je,ke,st,nt,xt,G;function we(){lt=new OD(O),lt.init(),nt=new xU(O,lt),ot=new DD(O,lt,e,nt),Xe=new vU(O,lt),ot.reverseDepthBuffer&&_&&Xe.buffers.depth.setReversed(!0),yt=new BD(O),We=new iU,P=new _U(O,lt,Xe,We,ot,nt,yt),E=new UD(C),$=new FD(C),fe=new q2(O),xt=new CD(O,fe),ge=new kD(O,fe,yt,xt),ce=new VD(O,ge,fe,yt),Je=new HD(O,ot,P),ye=new LD(We),Ve=new rU(C,E,$,lt,ot,xt,ye),Te=new bU(C,We),Ne=new oU,at=new fU(lt),Ye=new RD(C,E,$,Xe,ce,S,p),Oe=new mU(C,ce,ot),G=new AU(O,yt,ot,Xe),ke=new PD(O,lt,yt),st=new zD(O,lt,yt),yt.programs=Ve.programs,C.capabilities=ot,C.extensions=lt,C.properties=We,C.renderLists=Ne,C.shadowMap=Oe,C.state=Xe,C.info=yt}we();const ne=new TU(C,O);this.xr=ne,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){const T=lt.get("WEBGL_lose_context");T&&T.loseContext()},this.forceContextRestore=function(){const T=lt.get("WEBGL_lose_context");T&&T.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(T){T!==void 0&&(B=T,this.setSize(oe,ue,!1))},this.getSize=function(T){return T.set(oe,ue)},this.setSize=function(T,W,J=!0){if(ne.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}oe=T,ue=W,n.width=Math.floor(T*B),n.height=Math.floor(W*B),J===!0&&(n.style.width=T+"px",n.style.height=W+"px"),this.setViewport(0,0,T,W)},this.getDrawingBufferSize=function(T){return T.set(oe*B,ue*B).floor()},this.setDrawingBufferSize=function(T,W,J){oe=T,ue=W,B=J,n.width=Math.floor(T*J),n.height=Math.floor(W*J),this.setViewport(0,0,T,W)},this.getCurrentViewport=function(T){return T.copy(V)},this.getViewport=function(T){return T.copy(U)},this.setViewport=function(T,W,J,Q){T.isVector4?U.set(T.x,T.y,T.z,T.w):U.set(T,W,J,Q),Xe.viewport(V.copy(U).multiplyScalar(B).round())},this.getScissor=function(T){return T.copy(te)},this.setScissor=function(T,W,J,Q){T.isVector4?te.set(T.x,T.y,T.z,T.w):te.set(T,W,J,Q),Xe.scissor(ie.copy(te).multiplyScalar(B).round())},this.getScissorTest=function(){return Ue},this.setScissorTest=function(T){Xe.setScissorTest(Ue=T)},this.setOpaqueSort=function(T){ae=T},this.setTransparentSort=function(T){re=T},this.getClearColor=function(T){return T.copy(Ye.getClearColor())},this.setClearColor=function(){Ye.setClearColor.apply(Ye,arguments)},this.getClearAlpha=function(){return Ye.getClearAlpha()},this.setClearAlpha=function(){Ye.setClearAlpha.apply(Ye,arguments)},this.clear=function(T=!0,W=!0,J=!0){let Q=0;if(T){let z=!1;if(j!==null){const _e=j.texture.format;z=_e===px||_e===hx||_e===fx}if(z){const _e=j.texture.type,Ae=_e===Cs||_e===ac||_e===Kh||_e===nd||_e===cx||_e===dx,Le=Ye.getClearColor(),ze=Ye.getClearAlpha(),tt=Le.r,Qe=Le.g,je=Le.b;Ae?(w[0]=tt,w[1]=Qe,w[2]=je,w[3]=ze,O.clearBufferuiv(O.COLOR,0,w)):(b[0]=tt,b[1]=Qe,b[2]=je,b[3]=ze,O.clearBufferiv(O.COLOR,0,b))}else Q|=O.COLOR_BUFFER_BIT}W&&(Q|=O.DEPTH_BUFFER_BIT),J&&(Q|=O.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),O.clear(Q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",de,!1),n.removeEventListener("webglcontextrestored",Re,!1),n.removeEventListener("webglcontextcreationerror",be,!1),Ye.dispose(),Ne.dispose(),at.dispose(),We.dispose(),E.dispose(),$.dispose(),ce.dispose(),xt.dispose(),G.dispose(),Ve.dispose(),ne.dispose(),ne.removeEventListener("sessionstart",vi),ne.removeEventListener("sessionend",yr),ir.stop()};function de(T){T.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),X=!0}function Re(){console.log("THREE.WebGLRenderer: Context Restored."),X=!1;const T=yt.autoReset,W=Oe.enabled,J=Oe.autoUpdate,Q=Oe.needsUpdate,z=Oe.type;we(),yt.autoReset=T,Oe.enabled=W,Oe.autoUpdate=J,Oe.needsUpdate=Q,Oe.type=z}function be(T){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",T.statusMessage)}function it(T){const W=T.target;W.removeEventListener("dispose",it),bt(W)}function bt(T){Wt(T),We.remove(T)}function Wt(T){const W=We.get(T).programs;W!==void 0&&(W.forEach(function(J){Ve.releaseProgram(J)}),T.isShaderMaterial&&Ve.releaseShaderCache(T))}this.renderBufferDirect=function(T,W,J,Q,z,_e){W===null&&(W=St);const Ae=z.isMesh&&z.matrixWorld.determinant()<0,Le=eo(T,W,J,Q,z);Xe.setMaterial(Q,Ae);let ze=J.index,tt=1;if(Q.wireframe===!0){if(ze=ge.getWireframeAttribute(J),ze===void 0)return;tt=2}const Qe=J.drawRange,je=J.attributes.position;let rt=Qe.start*tt,vt=(Qe.start+Qe.count)*tt;_e!==null&&(rt=Math.max(rt,_e.start*tt),vt=Math.min(vt,(_e.start+_e.count)*tt)),ze!==null?(rt=Math.max(rt,0),vt=Math.min(vt,ze.count)):je!=null&&(rt=Math.max(rt,0),vt=Math.min(vt,je.count));const gt=vt-rt;if(gt<0||gt===1/0)return;xt.setup(z,Q,Le,J,ze);let Et,_t=ke;if(ze!==null&&(Et=fe.get(ze),_t=st,_t.setIndex(Et)),z.isMesh)Q.wireframe===!0?(Xe.setLineWidth(Q.wireframeLinewidth*Tt()),_t.setMode(O.LINES)):_t.setMode(O.TRIANGLES);else if(z.isLine){let qe=Q.linewidth;qe===void 0&&(qe=1),Xe.setLineWidth(qe*Tt()),z.isLineSegments?_t.setMode(O.LINES):z.isLineLoop?_t.setMode(O.LINE_LOOP):_t.setMode(O.LINE_STRIP)}else z.isPoints?_t.setMode(O.POINTS):z.isSprite&&_t.setMode(O.TRIANGLES);if(z.isBatchedMesh)if(z._multiDrawInstances!==null)_t.renderMultiDrawInstances(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount,z._multiDrawInstances);else if(lt.get("WEBGL_multi_draw"))_t.renderMultiDraw(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount);else{const qe=z._multiDrawStarts,Ot=z._multiDrawCounts,Pt=z._multiDrawCount,Jt=ze?fe.get(ze).bytesPerElement:1,Bn=We.get(Q).currentProgram.getUniforms();for(let hn=0;hn<Pt;hn++)Bn.setValue(O,"_gl_DrawID",hn),_t.render(qe[hn]/Jt,Ot[hn])}else if(z.isInstancedMesh)_t.renderInstances(rt,gt,z.count);else if(J.isInstancedBufferGeometry){const qe=J._maxInstanceCount!==void 0?J._maxInstanceCount:1/0,Ot=Math.min(J.instanceCount,qe);_t.renderInstances(rt,gt,Ot)}else _t.render(rt,gt)};function ht(T,W,J){T.transparent===!0&&T.side===_s&&T.forceSinglePass===!1?(T.side=mi,T.needsUpdate=!0,_i(T,W,J),T.side=Zs,T.needsUpdate=!0,_i(T,W,J),T.side=_s):_i(T,W,J)}this.compile=function(T,W,J=null){J===null&&(J=T),g=at.get(J),g.init(W),L.push(g),J.traverseVisible(function(z){z.isLight&&z.layers.test(W.layers)&&(g.pushLight(z),z.castShadow&&g.pushShadow(z))}),T!==J&&T.traverseVisible(function(z){z.isLight&&z.layers.test(W.layers)&&(g.pushLight(z),z.castShadow&&g.pushShadow(z))}),g.setupLights();const Q=new Set;return T.traverse(function(z){if(!(z.isMesh||z.isPoints||z.isLine||z.isSprite))return;const _e=z.material;if(_e)if(Array.isArray(_e))for(let Ae=0;Ae<_e.length;Ae++){const Le=_e[Ae];ht(Le,J,z),Q.add(Le)}else ht(_e,J,z),Q.add(_e)}),L.pop(),g=null,Q},this.compileAsync=function(T,W,J=null){const Q=this.compile(T,W,J);return new Promise(z=>{function _e(){if(Q.forEach(function(Ae){We.get(Ae).currentProgram.isReady()&&Q.delete(Ae)}),Q.size===0){z(T);return}setTimeout(_e,10)}lt.get("KHR_parallel_shader_compile")!==null?_e():setTimeout(_e,10)})};let _n=null;function fn(T){_n&&_n(T)}function vi(){ir.stop()}function yr(){ir.start()}const ir=new Q1;ir.setAnimationLoop(fn),typeof self<"u"&&ir.setContext(self),this.setAnimationLoop=function(T){_n=T,ne.setAnimationLoop(T),T===null?ir.stop():ir.start()},ne.addEventListener("sessionstart",vi),ne.addEventListener("sessionend",yr),this.render=function(T,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(X===!0)return;if(T.matrixWorldAutoUpdate===!0&&T.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),ne.enabled===!0&&ne.isPresenting===!0&&(ne.cameraAutoUpdate===!0&&ne.updateCamera(W),W=ne.getCamera()),T.isScene===!0&&T.onBeforeRender(C,T,W,j),g=at.get(T,L.length),g.init(W),L.push(g),Ee.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),K.setFromProjectionMatrix(Ee),Se=this.localClippingEnabled,le=ye.init(this.clippingPlanes,Se),y=Ne.get(T,I.length),y.init(),I.push(y),ne.enabled===!0&&ne.isPresenting===!0){const _e=C.xr.getDepthSensingMesh();_e!==null&&ar(_e,W,-1/0,C.sortObjects)}ar(T,W,0,C.sortObjects),y.finish(),C.sortObjects===!0&&y.sort(ae,re),ft=ne.enabled===!1||ne.isPresenting===!1||ne.hasDepthSensing()===!1,ft&&Ye.addToRenderList(y,T),this.info.render.frame++,le===!0&&ye.beginShadows();const J=g.state.shadowsArray;Oe.render(J,T,W),le===!0&&ye.endShadows(),this.info.autoReset===!0&&this.info.reset();const Q=y.opaque,z=y.transmissive;if(g.setupLights(),W.isArrayCamera){const _e=W.cameras;if(z.length>0)for(let Ae=0,Le=_e.length;Ae<Le;Ae++){const ze=_e[Ae];jr(Q,z,T,ze)}ft&&Ye.render(T);for(let Ae=0,Le=_e.length;Ae<Le;Ae++){const ze=_e[Ae];Xr(y,T,ze,ze.viewport)}}else z.length>0&&jr(Q,z,T,W),ft&&Ye.render(T),Xr(y,T,W);j!==null&&(P.updateMultisampleRenderTarget(j),P.updateRenderTargetMipmap(j)),T.isScene===!0&&T.onAfterRender(C,T,W),xt.resetDefaultState(),R=-1,A=null,L.pop(),L.length>0?(g=L[L.length-1],le===!0&&ye.setGlobalState(C.clippingPlanes,g.state.camera)):g=null,I.pop(),I.length>0?y=I[I.length-1]:y=null};function ar(T,W,J,Q){if(T.visible===!1)return;if(T.layers.test(W.layers)){if(T.isGroup)J=T.renderOrder;else if(T.isLOD)T.autoUpdate===!0&&T.update(W);else if(T.isLight)g.pushLight(T),T.castShadow&&g.pushShadow(T);else if(T.isSprite){if(!T.frustumCulled||K.intersectsSprite(T)){Q&&Ze.setFromMatrixPosition(T.matrixWorld).applyMatrix4(Ee);const _e=ce.update(T),Ae=T.material;Ae.visible&&y.push(T,_e,Ae,J,Ze.z,null)}}else if((T.isMesh||T.isLine||T.isPoints)&&(!T.frustumCulled||K.intersectsObject(T))){const _e=ce.update(T),Ae=T.material;if(Q&&(T.boundingSphere!==void 0?(T.boundingSphere===null&&T.computeBoundingSphere(),Ze.copy(T.boundingSphere.center)):(_e.boundingSphere===null&&_e.computeBoundingSphere(),Ze.copy(_e.boundingSphere.center)),Ze.applyMatrix4(T.matrixWorld).applyMatrix4(Ee)),Array.isArray(Ae)){const Le=_e.groups;for(let ze=0,tt=Le.length;ze<tt;ze++){const Qe=Le[ze],je=Ae[Qe.materialIndex];je&&je.visible&&y.push(T,_e,je,J,Ze.z,Qe)}}else Ae.visible&&y.push(T,_e,Ae,J,Ze.z,null)}}const z=T.children;for(let _e=0,Ae=z.length;_e<Ae;_e++)ar(z[_e],W,J,Q)}function Xr(T,W,J,Q){const z=T.opaque,_e=T.transmissive,Ae=T.transparent;g.setupLightsView(J),le===!0&&ye.setGlobalState(C.clippingPlanes,J),Q&&Xe.viewport(V.copy(Q)),z.length>0&&Sr(z,W,J),_e.length>0&&Sr(_e,W,J),Ae.length>0&&Sr(Ae,W,J),Xe.buffers.depth.setTest(!0),Xe.buffers.depth.setMask(!0),Xe.buffers.color.setMask(!0),Xe.setPolygonOffset(!1)}function jr(T,W,J,Q){if((J.isScene===!0?J.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[Q.id]===void 0&&(g.state.transmissionRenderTarget[Q.id]=new oc(1,1,{generateMipmaps:!0,type:lt.has("EXT_color_buffer_half_float")||lt.has("EXT_color_buffer_float")?np:Cs,minFilter:ec,samples:4,stencilBuffer:u,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:cn.workingColorSpace}));const z=g.state.transmissionRenderTarget[Q.id],_e=Q.viewport||V;z.setSize(_e.z,_e.w);const Ae=C.getRenderTarget();C.setRenderTarget(z),C.getClearColor(se),he=C.getClearAlpha(),he<1&&C.setClearColor(16777215,.5),C.clear(),ft&&Ye.render(J);const Le=C.toneMapping;C.toneMapping=Ys;const ze=Q.viewport;if(Q.viewport!==void 0&&(Q.viewport=void 0),g.setupLightsView(Q),le===!0&&ye.setGlobalState(C.clippingPlanes,Q),Sr(T,J,Q),P.updateMultisampleRenderTarget(z),P.updateRenderTargetMipmap(z),lt.has("WEBGL_multisampled_render_to_texture")===!1){let tt=!1;for(let Qe=0,je=W.length;Qe<je;Qe++){const rt=W[Qe],vt=rt.object,gt=rt.geometry,Et=rt.material,_t=rt.group;if(Et.side===_s&&vt.layers.test(Q.layers)){const qe=Et.side;Et.side=mi,Et.needsUpdate=!0,Ja(vt,J,Q,gt,Et,_t),Et.side=qe,Et.needsUpdate=!0,tt=!0}}tt===!0&&(P.updateMultisampleRenderTarget(z),P.updateRenderTargetMipmap(z))}C.setRenderTarget(Ae),C.setClearColor(se,he),ze!==void 0&&(Q.viewport=ze),C.toneMapping=Le}function Sr(T,W,J){const Q=W.isScene===!0?W.overrideMaterial:null;for(let z=0,_e=T.length;z<_e;z++){const Ae=T[z],Le=Ae.object,ze=Ae.geometry,tt=Q===null?Ae.material:Q,Qe=Ae.group;Le.layers.test(J.layers)&&Ja(Le,W,J,ze,tt,Qe)}}function Ja(T,W,J,Q,z,_e){T.onBeforeRender(C,W,J,Q,z,_e),T.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,T.matrixWorld),T.normalMatrix.getNormalMatrix(T.modelViewMatrix),z.onBeforeRender(C,W,J,Q,T,_e),z.transparent===!0&&z.side===_s&&z.forceSinglePass===!1?(z.side=mi,z.needsUpdate=!0,C.renderBufferDirect(J,W,Q,z,T,_e),z.side=Zs,z.needsUpdate=!0,C.renderBufferDirect(J,W,Q,z,T,_e),z.side=_s):C.renderBufferDirect(J,W,Q,z,T,_e),T.onAfterRender(C,W,J,Q,z,_e)}function _i(T,W,J){W.isScene!==!0&&(W=St);const Q=We.get(T),z=g.state.lights,_e=g.state.shadowsArray,Ae=z.state.version,Le=Ve.getParameters(T,z.state,_e,W,J),ze=Ve.getProgramCacheKey(Le);let tt=Q.programs;Q.environment=T.isMeshStandardMaterial?W.environment:null,Q.fog=W.fog,Q.envMap=(T.isMeshStandardMaterial?$:E).get(T.envMap||Q.environment),Q.envMapRotation=Q.environment!==null&&T.envMap===null?W.environmentRotation:T.envMapRotation,tt===void 0&&(T.addEventListener("dispose",it),tt=new Map,Q.programs=tt);let Qe=tt.get(ze);if(Qe!==void 0){if(Q.currentProgram===Qe&&Q.lightsStateVersion===Ae)return qn(T,Le),Qe}else Le.uniforms=Ve.getUniforms(T),T.onBeforeCompile(Le,C),Qe=Ve.acquireProgram(Le,ze),tt.set(ze,Qe),Q.uniforms=Le.uniforms;const je=Q.uniforms;return(!T.isShaderMaterial&&!T.isRawShaderMaterial||T.clipping===!0)&&(je.clippingPlanes=ye.uniform),qn(T,Le),Q.needsLights=tl(T),Q.lightsStateVersion=Ae,Q.needsLights&&(je.ambientLightColor.value=z.state.ambient,je.lightProbe.value=z.state.probe,je.directionalLights.value=z.state.directional,je.directionalLightShadows.value=z.state.directionalShadow,je.spotLights.value=z.state.spot,je.spotLightShadows.value=z.state.spotShadow,je.rectAreaLights.value=z.state.rectArea,je.ltc_1.value=z.state.rectAreaLTC1,je.ltc_2.value=z.state.rectAreaLTC2,je.pointLights.value=z.state.point,je.pointLightShadows.value=z.state.pointShadow,je.hemisphereLights.value=z.state.hemi,je.directionalShadowMap.value=z.state.directionalShadowMap,je.directionalShadowMatrix.value=z.state.directionalShadowMatrix,je.spotShadowMap.value=z.state.spotShadowMap,je.spotLightMatrix.value=z.state.spotLightMatrix,je.spotLightMap.value=z.state.spotLightMap,je.pointShadowMap.value=z.state.pointShadowMap,je.pointShadowMatrix.value=z.state.pointShadowMatrix),Q.currentProgram=Qe,Q.uniformsList=null,Qe}function Qa(T){if(T.uniformsList===null){const W=T.currentProgram.getUniforms();T.uniformsList=cm.seqWithValue(W.seq,T.uniforms)}return T.uniformsList}function qn(T,W){const J=We.get(T);J.outputColorSpace=W.outputColorSpace,J.batching=W.batching,J.batchingColor=W.batchingColor,J.instancing=W.instancing,J.instancingColor=W.instancingColor,J.instancingMorph=W.instancingMorph,J.skinning=W.skinning,J.morphTargets=W.morphTargets,J.morphNormals=W.morphNormals,J.morphColors=W.morphColors,J.morphTargetsCount=W.morphTargetsCount,J.numClippingPlanes=W.numClippingPlanes,J.numIntersection=W.numClipIntersection,J.vertexAlphas=W.vertexAlphas,J.vertexTangents=W.vertexTangents,J.toneMapping=W.toneMapping}function eo(T,W,J,Q,z){W.isScene!==!0&&(W=St),P.resetTextureUnits();const _e=W.fog,Ae=Q.isMeshStandardMaterial?W.environment:null,Le=j===null?C.outputColorSpace:j.isXRRenderTarget===!0?j.texture.colorSpace:id,ze=(Q.isMeshStandardMaterial?$:E).get(Q.envMap||Ae),tt=Q.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,Qe=!!J.attributes.tangent&&(!!Q.normalMap||Q.anisotropy>0),je=!!J.morphAttributes.position,rt=!!J.morphAttributes.normal,vt=!!J.morphAttributes.color;let gt=Ys;Q.toneMapped&&(j===null||j.isXRRenderTarget===!0)&&(gt=C.toneMapping);const Et=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,_t=Et!==void 0?Et.length:0,qe=We.get(Q),Ot=g.state.lights;if(le===!0&&(Se===!0||T!==A)){const Ut=T===A&&Q.id===R;ye.setState(Q,T,Ut)}let Pt=!1;Q.version===qe.__version?(qe.needsLights&&qe.lightsStateVersion!==Ot.state.version||qe.outputColorSpace!==Le||z.isBatchedMesh&&qe.batching===!1||!z.isBatchedMesh&&qe.batching===!0||z.isBatchedMesh&&qe.batchingColor===!0&&z.colorTexture===null||z.isBatchedMesh&&qe.batchingColor===!1&&z.colorTexture!==null||z.isInstancedMesh&&qe.instancing===!1||!z.isInstancedMesh&&qe.instancing===!0||z.isSkinnedMesh&&qe.skinning===!1||!z.isSkinnedMesh&&qe.skinning===!0||z.isInstancedMesh&&qe.instancingColor===!0&&z.instanceColor===null||z.isInstancedMesh&&qe.instancingColor===!1&&z.instanceColor!==null||z.isInstancedMesh&&qe.instancingMorph===!0&&z.morphTexture===null||z.isInstancedMesh&&qe.instancingMorph===!1&&z.morphTexture!==null||qe.envMap!==ze||Q.fog===!0&&qe.fog!==_e||qe.numClippingPlanes!==void 0&&(qe.numClippingPlanes!==ye.numPlanes||qe.numIntersection!==ye.numIntersection)||qe.vertexAlphas!==tt||qe.vertexTangents!==Qe||qe.morphTargets!==je||qe.morphNormals!==rt||qe.morphColors!==vt||qe.toneMapping!==gt||qe.morphTargetsCount!==_t)&&(Pt=!0):(Pt=!0,qe.__version=Q.version);let Jt=qe.currentProgram;Pt===!0&&(Jt=_i(Q,W,z));let Bn=!1,hn=!1,qr=!1;const Mt=Jt.getUniforms(),pn=qe.uniforms;if(Xe.useProgram(Jt.program)&&(Bn=!0,hn=!0,qr=!0),Q.id!==R&&(R=Q.id,hn=!0),Bn||A!==T){Xe.buffers.depth.getReversed()?(ve.copy(T.projectionMatrix),p2(ve),m2(ve),Mt.setValue(O,"projectionMatrix",ve)):Mt.setValue(O,"projectionMatrix",T.projectionMatrix),Mt.setValue(O,"viewMatrix",T.matrixWorldInverse);const Ut=Mt.map.cameraPosition;Ut!==void 0&&Ut.setValue(O,Ie.setFromMatrixPosition(T.matrixWorld)),ot.logarithmicDepthBuffer&&Mt.setValue(O,"logDepthBufFC",2/(Math.log(T.far+1)/Math.LN2)),(Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshLambertMaterial||Q.isMeshBasicMaterial||Q.isMeshStandardMaterial||Q.isShaderMaterial)&&Mt.setValue(O,"isOrthographic",T.isOrthographicCamera===!0),A!==T&&(A=T,hn=!0,qr=!0)}if(z.isSkinnedMesh){Mt.setOptional(O,z,"bindMatrix"),Mt.setOptional(O,z,"bindMatrixInverse");const Ut=z.skeleton;Ut&&(Ut.boneTexture===null&&Ut.computeBoneTexture(),Mt.setValue(O,"boneTexture",Ut.boneTexture,P))}z.isBatchedMesh&&(Mt.setOptional(O,z,"batchingTexture"),Mt.setValue(O,"batchingTexture",z._matricesTexture,P),Mt.setOptional(O,z,"batchingIdTexture"),Mt.setValue(O,"batchingIdTexture",z._indirectTexture,P),Mt.setOptional(O,z,"batchingColorTexture"),z._colorsTexture!==null&&Mt.setValue(O,"batchingColorTexture",z._colorsTexture,P));const rn=J.morphAttributes;if((rn.position!==void 0||rn.normal!==void 0||rn.color!==void 0)&&Je.update(z,J,Jt),(hn||qe.receiveShadow!==z.receiveShadow)&&(qe.receiveShadow=z.receiveShadow,Mt.setValue(O,"receiveShadow",z.receiveShadow)),Q.isMeshGouraudMaterial&&Q.envMap!==null&&(pn.envMap.value=ze,pn.flipEnvMap.value=ze.isCubeTexture&&ze.isRenderTargetTexture===!1?-1:1),Q.isMeshStandardMaterial&&Q.envMap===null&&W.environment!==null&&(pn.envMapIntensity.value=W.environmentIntensity),hn&&(Mt.setValue(O,"toneMappingExposure",C.toneMappingExposure),qe.needsLights&&to(pn,qr),_e&&Q.fog===!0&&Te.refreshFogUniforms(pn,_e),Te.refreshMaterialUniforms(pn,Q,B,ue,g.state.transmissionRenderTarget[T.id]),cm.upload(O,Qa(qe),pn,P)),Q.isShaderMaterial&&Q.uniformsNeedUpdate===!0&&(cm.upload(O,Qa(qe),pn,P),Q.uniformsNeedUpdate=!1),Q.isSpriteMaterial&&Mt.setValue(O,"center",z.center),Mt.setValue(O,"modelViewMatrix",z.modelViewMatrix),Mt.setValue(O,"normalMatrix",z.normalMatrix),Mt.setValue(O,"modelMatrix",z.matrixWorld),Q.isShaderMaterial||Q.isRawShaderMaterial){const Ut=Q.uniformsGroups;for(let vn=0,Yr=Ut.length;vn<Yr;vn++){const ut=Ut[vn];G.update(ut,Jt),G.bind(ut,Jt)}}return Jt}function to(T,W){T.ambientLightColor.needsUpdate=W,T.lightProbe.needsUpdate=W,T.directionalLights.needsUpdate=W,T.directionalLightShadows.needsUpdate=W,T.pointLights.needsUpdate=W,T.pointLightShadows.needsUpdate=W,T.spotLights.needsUpdate=W,T.spotLightShadows.needsUpdate=W,T.rectAreaLights.needsUpdate=W,T.hemisphereLights.needsUpdate=W}function tl(T){return T.isMeshLambertMaterial||T.isMeshToonMaterial||T.isMeshPhongMaterial||T.isMeshStandardMaterial||T.isShadowMaterial||T.isShaderMaterial&&T.lights===!0}this.getActiveCubeFace=function(){return k},this.getActiveMipmapLevel=function(){return F},this.getRenderTarget=function(){return j},this.setRenderTargetTextures=function(T,W,J){We.get(T.texture).__webglTexture=W,We.get(T.depthTexture).__webglTexture=J;const Q=We.get(T);Q.__hasExternalTextures=!0,Q.__autoAllocateDepthBuffer=J===void 0,Q.__autoAllocateDepthBuffer||lt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Q.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(T,W){const J=We.get(T);J.__webglFramebuffer=W,J.__useDefaultFramebuffer=W===void 0},this.setRenderTarget=function(T,W=0,J=0){j=T,k=W,F=J;let Q=!0,z=null,_e=!1,Ae=!1;if(T){const Le=We.get(T);if(Le.__useDefaultFramebuffer!==void 0)Xe.bindFramebuffer(O.FRAMEBUFFER,null),Q=!1;else if(Le.__webglFramebuffer===void 0)P.setupRenderTarget(T);else if(Le.__hasExternalTextures)P.rebindTextures(T,We.get(T.texture).__webglTexture,We.get(T.depthTexture).__webglTexture);else if(T.depthBuffer){const Qe=T.depthTexture;if(Le.__boundDepthTexture!==Qe){if(Qe!==null&&We.has(Qe)&&(T.width!==Qe.image.width||T.height!==Qe.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(T)}}const ze=T.texture;(ze.isData3DTexture||ze.isDataArrayTexture||ze.isCompressedArrayTexture)&&(Ae=!0);const tt=We.get(T).__webglFramebuffer;T.isWebGLCubeRenderTarget?(Array.isArray(tt[W])?z=tt[W][J]:z=tt[W],_e=!0):T.samples>0&&P.useMultisampledRTT(T)===!1?z=We.get(T).__webglMultisampledFramebuffer:Array.isArray(tt)?z=tt[J]:z=tt,V.copy(T.viewport),ie.copy(T.scissor),ee=T.scissorTest}else V.copy(U).multiplyScalar(B).floor(),ie.copy(te).multiplyScalar(B).floor(),ee=Ue;if(Xe.bindFramebuffer(O.FRAMEBUFFER,z)&&Q&&Xe.drawBuffers(T,z),Xe.viewport(V),Xe.scissor(ie),Xe.setScissorTest(ee),_e){const Le=We.get(T.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+W,Le.__webglTexture,J)}else if(Ae){const Le=We.get(T.texture),ze=W||0;O.framebufferTextureLayer(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,Le.__webglTexture,J||0,ze)}R=-1},this.readRenderTargetPixels=function(T,W,J,Q,z,_e,Ae){if(!(T&&T.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Le=We.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&Ae!==void 0&&(Le=Le[Ae]),Le){Xe.bindFramebuffer(O.FRAMEBUFFER,Le);try{const ze=T.texture,tt=ze.format,Qe=ze.type;if(!ot.textureFormatReadable(tt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ot.textureTypeReadable(Qe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=T.width-Q&&J>=0&&J<=T.height-z&&O.readPixels(W,J,Q,z,nt.convert(tt),nt.convert(Qe),_e)}finally{const ze=j!==null?We.get(j).__webglFramebuffer:null;Xe.bindFramebuffer(O.FRAMEBUFFER,ze)}}},this.readRenderTargetPixelsAsync=async function(T,W,J,Q,z,_e,Ae){if(!(T&&T.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Le=We.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&Ae!==void 0&&(Le=Le[Ae]),Le){const ze=T.texture,tt=ze.format,Qe=ze.type;if(!ot.textureFormatReadable(tt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ot.textureTypeReadable(Qe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(W>=0&&W<=T.width-Q&&J>=0&&J<=T.height-z){Xe.bindFramebuffer(O.FRAMEBUFFER,Le);const je=O.createBuffer();O.bindBuffer(O.PIXEL_PACK_BUFFER,je),O.bufferData(O.PIXEL_PACK_BUFFER,_e.byteLength,O.STREAM_READ),O.readPixels(W,J,Q,z,nt.convert(tt),nt.convert(Qe),0);const rt=j!==null?We.get(j).__webglFramebuffer:null;Xe.bindFramebuffer(O.FRAMEBUFFER,rt);const vt=O.fenceSync(O.SYNC_GPU_COMMANDS_COMPLETE,0);return O.flush(),await h2(O,vt,4),O.bindBuffer(O.PIXEL_PACK_BUFFER,je),O.getBufferSubData(O.PIXEL_PACK_BUFFER,0,_e),O.deleteBuffer(je),O.deleteSync(vt),_e}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(T,W=null,J=0){T.isTexture!==!0&&(Oc("WebGLRenderer: copyFramebufferToTexture function signature has changed."),W=arguments[0]||null,T=arguments[1]);const Q=Math.pow(2,-J),z=Math.floor(T.image.width*Q),_e=Math.floor(T.image.height*Q),Ae=W!==null?W.x:0,Le=W!==null?W.y:0;P.setTexture2D(T,0),O.copyTexSubImage2D(O.TEXTURE_2D,J,0,0,Ae,Le,z,_e),Xe.unbindTexture()};const no=O.createFramebuffer(),ro=O.createFramebuffer();this.copyTextureToTexture=function(T,W,J=null,Q=null,z=0,_e=null){T.isTexture!==!0&&(Oc("WebGLRenderer: copyTextureToTexture function signature has changed."),Q=arguments[0]||null,T=arguments[1],W=arguments[2],_e=arguments[3]||0,J=null),_e===null&&(z!==0?(Oc("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),_e=z,z=0):_e=0);let Ae,Le,ze,tt,Qe,je,rt,vt,gt;const Et=T.isCompressedTexture?T.mipmaps[_e]:T.image;if(J!==null)Ae=J.max.x-J.min.x,Le=J.max.y-J.min.y,ze=J.isBox3?J.max.z-J.min.z:1,tt=J.min.x,Qe=J.min.y,je=J.isBox3?J.min.z:0;else{const rn=Math.pow(2,-z);Ae=Math.floor(Et.width*rn),Le=Math.floor(Et.height*rn),T.isDataArrayTexture?ze=Et.depth:T.isData3DTexture?ze=Math.floor(Et.depth*rn):ze=1,tt=0,Qe=0,je=0}Q!==null?(rt=Q.x,vt=Q.y,gt=Q.z):(rt=0,vt=0,gt=0);const _t=nt.convert(W.format),qe=nt.convert(W.type);let Ot;W.isData3DTexture?(P.setTexture3D(W,0),Ot=O.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(P.setTexture2DArray(W,0),Ot=O.TEXTURE_2D_ARRAY):(P.setTexture2D(W,0),Ot=O.TEXTURE_2D),O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,W.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,W.unpackAlignment);const Pt=O.getParameter(O.UNPACK_ROW_LENGTH),Jt=O.getParameter(O.UNPACK_IMAGE_HEIGHT),Bn=O.getParameter(O.UNPACK_SKIP_PIXELS),hn=O.getParameter(O.UNPACK_SKIP_ROWS),qr=O.getParameter(O.UNPACK_SKIP_IMAGES);O.pixelStorei(O.UNPACK_ROW_LENGTH,Et.width),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Et.height),O.pixelStorei(O.UNPACK_SKIP_PIXELS,tt),O.pixelStorei(O.UNPACK_SKIP_ROWS,Qe),O.pixelStorei(O.UNPACK_SKIP_IMAGES,je);const Mt=T.isDataArrayTexture||T.isData3DTexture,pn=W.isDataArrayTexture||W.isData3DTexture;if(T.isDepthTexture){const rn=We.get(T),Ut=We.get(W),vn=We.get(rn.__renderTarget),Yr=We.get(Ut.__renderTarget);Xe.bindFramebuffer(O.READ_FRAMEBUFFER,vn.__webglFramebuffer),Xe.bindFramebuffer(O.DRAW_FRAMEBUFFER,Yr.__webglFramebuffer);for(let ut=0;ut<ze;ut++)Mt&&(O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,We.get(T).__webglTexture,z,je+ut),O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,We.get(W).__webglTexture,_e,gt+ut)),O.blitFramebuffer(tt,Qe,Ae,Le,rt,vt,Ae,Le,O.DEPTH_BUFFER_BIT,O.NEAREST);Xe.bindFramebuffer(O.READ_FRAMEBUFFER,null),Xe.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else if(z!==0||T.isRenderTargetTexture||We.has(T)){const rn=We.get(T),Ut=We.get(W);Xe.bindFramebuffer(O.READ_FRAMEBUFFER,no),Xe.bindFramebuffer(O.DRAW_FRAMEBUFFER,ro);for(let vn=0;vn<ze;vn++)Mt?O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,rn.__webglTexture,z,je+vn):O.framebufferTexture2D(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,rn.__webglTexture,z),pn?O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Ut.__webglTexture,_e,gt+vn):O.framebufferTexture2D(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Ut.__webglTexture,_e),z!==0?O.blitFramebuffer(tt,Qe,Ae,Le,rt,vt,Ae,Le,O.COLOR_BUFFER_BIT,O.NEAREST):pn?O.copyTexSubImage3D(Ot,_e,rt,vt,gt+vn,tt,Qe,Ae,Le):O.copyTexSubImage2D(Ot,_e,rt,vt,tt,Qe,Ae,Le);Xe.bindFramebuffer(O.READ_FRAMEBUFFER,null),Xe.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else pn?T.isDataTexture||T.isData3DTexture?O.texSubImage3D(Ot,_e,rt,vt,gt,Ae,Le,ze,_t,qe,Et.data):W.isCompressedArrayTexture?O.compressedTexSubImage3D(Ot,_e,rt,vt,gt,Ae,Le,ze,_t,Et.data):O.texSubImage3D(Ot,_e,rt,vt,gt,Ae,Le,ze,_t,qe,Et):T.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,_e,rt,vt,Ae,Le,_t,qe,Et.data):T.isCompressedTexture?O.compressedTexSubImage2D(O.TEXTURE_2D,_e,rt,vt,Et.width,Et.height,_t,Et.data):O.texSubImage2D(O.TEXTURE_2D,_e,rt,vt,Ae,Le,_t,qe,Et);O.pixelStorei(O.UNPACK_ROW_LENGTH,Pt),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Jt),O.pixelStorei(O.UNPACK_SKIP_PIXELS,Bn),O.pixelStorei(O.UNPACK_SKIP_ROWS,hn),O.pixelStorei(O.UNPACK_SKIP_IMAGES,qr),_e===0&&W.generateMipmaps&&O.generateMipmap(Ot),Xe.unbindTexture()},this.copyTextureToTexture3D=function(T,W,J=null,Q=null,z=0){return T.isTexture!==!0&&(Oc("WebGLRenderer: copyTextureToTexture3D function signature has changed."),J=arguments[0]||null,Q=arguments[1]||null,T=arguments[2],W=arguments[3],z=arguments[4]||0),Oc('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(T,W,J,Q,z)},this.initRenderTarget=function(T){We.get(T).__webglFramebuffer===void 0&&P.setupRenderTarget(T)},this.initTexture=function(T){T.isCubeTexture?P.setTextureCube(T,0):T.isData3DTexture?P.setTexture3D(T,0):T.isDataArrayTexture||T.isCompressedArrayTexture?P.setTexture2DArray(T,0):P.setTexture2D(T,0),Xe.unbindTexture()},this.resetState=function(){k=0,F=0,j=null,Xe.reset(),xt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ms}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const n=this.getContext();n.drawingBufferColorspace=cn._getDrawingBufferColorSpace(e),n.unpackColorSpace=cn._getUnpackColorSpace()}}const CU=()=>(Rs.useEffect(()=>{let a,e,n,i,s;return(()=>{a=new z2,e=new Ji(75,window.innerWidth/window.innerHeight,.1,1e3),n=new RU,n.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(n.domElement),i=new qh,a.add(i);const u=new gx({color:47871,transparent:!0,opacity:.7});for(let f=0;f<500;f++){const p=new vx(Math.random()*1,32,32),m=new qa(p,u);m.position.set(Math.random()*2e3-1e3,Math.random()*2e3-1e3,Math.random()*2e3-1e3),i.add(m)}e.position.z=500;const d=()=>{s=requestAnimationFrame(d),i&&(i.rotation.x+=.001,i.rotation.y+=.001),n.render(a,e)};d()})(),()=>{cancelAnimationFrame(s),n&&(n.dispose(),document.body.removeChild(n.domElement)),a=null,e=null,n=null,i=null}},[]),null),PU=()=>{const a=[{title:"Skills",description:"JavaScript, React, Node.js, Python, Java"},{title:"Projects",description:"15+ completed projects in web and app development"},{title:"Life",description:"I used to live in Spain for 4 years"},{title:"Fun Fact",description:"I like math and chess"}];return Ft.jsx("div",{className:"info-boxes-container",children:a.map((e,n)=>Ft.jsxs("div",{className:"info-box",children:[Ft.jsx("h3",{children:e.title}),Ft.jsx("p",{className:"info-box-description",children:e.description})]},n))})},DU=()=>{const a=[{title:"Media as Medium",description:"A project showcasing how to leverage Medium's API for publishing content.",github:"https://github.com/avomasrq/media-as-medium"},{title:"Twitter App",description:"A Twitter integration app that allows posting and retrieving tweets via API.",github:"https://github.com/avomasrq/twitter"}];return Ft.jsxs("div",{className:"app",children:[Ft.jsx(CU,{}),Ft.jsxs("div",{className:"content",children:[Ft.jsx(eC,{}),Ft.jsx(MC,{}),Ft.jsx(PU,{}),Ft.jsx("div",{className:"projects-container",children:a.map((e,n)=>Ft.jsx(tC,{title:e.title,description:e.description,github:e.github},n))}),Ft.jsx(cC,{}),Ft.jsx(SC,{})]})]})};QR.createRoot(document.getElementById("root")).render(Ft.jsx(Rs.StrictMode,{children:Ft.jsx(DU,{})}));
